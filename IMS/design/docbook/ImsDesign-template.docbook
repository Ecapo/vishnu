<?xml version="1.0" encoding="UTF-8"?>
<book xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">
    <info>
      <title>D4.1a - VISHNU Information Management System Package Design</title>
      <author>
        <personname><firstname>Benjamin</firstname><surname>Isnard</surname></personname>
      </author>
      <author>
        <personname><firstname>Daouda</firstname><surname>Traoré</surname></personname>
      </author>
      <author>
        <personname><firstname>Eugène</firstname><surname>Pamba Capo-Chichi</surname></personname>
      </author>
      <author>
        <personname><firstname>Kevin</firstname><surname>Coulomb</surname></personname>
      </author>
      <author>
        <personname><firstname>Ibrahima</firstname><surname>Cissé</surname></personname>
      </author>
      <revhistory>
        <revision>
        <revnumber>1</revnumber>
        <date>29/03/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          <para>Deliverable version</para>
        </revdescription>
        </revision>
      </revhistory>
    </info>
  <chapter>
    <title>Document presentation</title>
    <section>
      <title>Document objectives</title>
      <para>
	This document presents the detailed internal design of the Information Management Service (IMS) package. The purpose
	of this package is to handle all aspects of information management within the VISHNU system. The functionnal and
	non-functional requirements for this package are those described in the referenced specification documents. The current
	document is part of the design phase of the software and therefore its main goal is to define the main components of the
	system architecture and their relationships.
      </para>
    </section>
    <section>
      <title>Document structure</title>
      <para><itemizedlist>
        <listitem>
          <para>Chapter 1 contains a brief overview of the document content.</para>
        </listitem>
        <listitem>
          <para>Chapter 2 contains a high-level overview of the system architecture.</para>
        </listitem>
        <listitem>
          <para>Chapter 3 contains an overview of the internal IMS organisation.</para>
        </listitem>
        <listitem>
          <para>Chapter 4 describes the internal API used for remote procedure calls through SysFera-DS.</para>
        </listitem>
        <listitem>
          <para>Chapter 5 describes the internal classes and data structures</para>
        </listitem>
      </itemizedlist></para>
    </section>

   <section>
      <title>References</title>
      <para><itemizedlist>
        <listitem>
          <para>[D1.1a]: VISHNU General specifications</para>
        </listitem>
        <listitem>
          <para>[D1.1b]: VISHNU Spécifications techniques des besoins</para>
        </listitem>
       <listitem>
          <para>[D1.1c]: VISHNU API Detailed specifications</para>
        </listitem>
      </itemizedlist></para>
    </section>
    <section>
      <title>Acronyms</title>
      <para>
        <itemizedlist>
	  <listitem>
            <para><emphasis role="bold">API</emphasis>: Application programming interface</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">CLI</emphasis>: Command line interface</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">DB</emphasis>: DataBase</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">n/a</emphasis>: Not Appliable (used for serializable capability in function descriptions)</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SeD</emphasis>: A Server Daemon is a SysFera-DS agent that provides services through the SysFera-DS API.</para>
          </listitem>
	  <listitem>
	    <para><emphasis role="bold">IMS</emphasis>: Information management service</para>
	  </listitem>
          <listitem>
            <para><emphasis role="bold">WS</emphasis>: Web services</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section>
     <title>Glossary</title>
     <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Components</emphasis>: the software components represents a library or an executable program that provides a given interface to other components or to end-users.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Serialized type</emphasis>: this is a class of data (C++ Class) which instances can be serialized in a XML string before being sent over an API (to or from the API). The data is deserialized on the other side of the channel in order to re-build the same instance of the class.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SysFera-DS</emphasis>: open-source middleware developped by SysFera.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>

  <!-- PART 1 : ARCHITECTURE -->
  <chapter annotations="IMS/design/Archi.asta#ARCHIDIAG(architecture)">
    <title>System Architecture</title>
    <section>
      <title>Overview of the IMS software infrastructure</title>
      <para>We present in this section a detailed description of the IMS package architecture in terms of software components.
	In addition we show the dependencies between components to highlight their reuse. These components follow a client/server model.
        We present the different software layers from services (provided directly to the user) to the database (used by the server). 
	The IMS client server package has been split into eight different interrelated components. The diagrams shown in section 2.3 describe
        the relationships between these components. The definitions of the components are the following:
       </para>
      <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">External API</emphasis>
	     contains precisely the services provided to the user as defined in the detailed specifications.
	     We're on the client side.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Internal API</emphasis>
	     is the middle layer of the server side. The services announced previously are performed here by combining a set of classes defined 
	    in the two following components.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">IMS Client</emphasis>
	    contains intermediate (proxy) classes providing remote access to the business objects of <emphasis role="bold">IMS SeD</emphasis>.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">IMS SeD</emphasis>
	     contains all classes implementing business objects by encapsulating the processing provided through the internal API. 
	      The IMS SeD has 3 different roles:
	      <itemizedlist>
		<listitem><para>Watch the log central with a tool and select the messages directed to the machine the sed is on. 
		The role of the tool is to get the connection/deconnection messages on the machine to keep persistent data about the platform,
		    using a publisher/subscriber model. This tool uses a specific process table in the database and will keep it up to date and coherent.</para></listitem>
		<listitem><para>Get the data about the machine state and fill the database depending on the update frequency. It logs
		    the evolution of the machines states.</para></listitem>
		<listitem><para>Realize the external API services</para></listitem>
	      </itemizedlist>
	      Each role will be realized in a separate thread. There must be an IMS SeD on each machine to monitor. A machine without 
	      IMS SeD cannot be monitored.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Sysfera-DS Client API</emphasis> is the C++ client API provided by the SysFera-DS toolbox.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Sysfera-DS Server API</emphasis> is the C++ server API provided by the SysFera-DS toolbox.</para>
          </listitem>
	  <listitem>
	    <para><emphasis role="bold">VISHNU Database</emphasis> stores all data manipulated by the IMS SeD.
	    </para>
	  </listitem>
        </itemizedlist>
      </para>
    </section>

    <section>
      <title> Deployment aspects of IMS</title>
       <para>
        We explain here how the IMS package will be deployed in a physical hardware as illustrated in figure 2.1  where each cube represents an environement in which a component or a set of components execute. The IMS consists of: 
	<itemizedlist>
	  <listitem>
	    <para><emphasis role="bold"> IMS SeD </emphasis>is the provider of all IMS services. It consists of the IMS SeD component which gathers all IMS services published. There is one IMS SeD per machine to supervise.
	    </para>
	  </listitem>
	  <listitem>
	    <para><emphasis role="bold">Client host </emphasis> is IMS service requester. It contains all components allowing to make a IMS service request.	  
	    </para>
	  </listitem>
           <listitem>
            <para><emphasis role="bold">SysFera-DS Bus </emphasis> is the specific software layer that ensures the communication between client hosts and server hosts.
            </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">VISHNU database</emphasis>: this component represents a unique instance of an Oracle or PostgreSQL database.
            </para>
          </listitem>
	 </itemizedlist>
       </para>
    </section>
  </chapter><!-- PART 1 : ARCHITECTURE -->
  <chapter>
    <title>Overview of the internal IMS organisation</title>
    <section annotations="IMS/design/Design.asta#ARCHIDIAG(role)">
      <title>The role modelisation</title>
    </section>
    <section>
      <title>The organisation</title>
      <para>
	The IMS module can play eight different roles. For each role, there is a reference to the above functional figure with the letter corresponding to the functional element.
	<itemizedlist>
	  <listitem><para>The hard load shedding : It means the death of all the VISHNU processes on a machine. Reference: D.</para></listitem>
	  <listitem><para>The soft load shedding : It means the end of the current jobs and file transfer. Reference: E+D</para></listitem>
	  <listitem><para>The export of the commands in a format : It generates a shell script containing all the recorded commands made during a session. Commands such as connect or change password cannot be exported. Reference: A</para></listitem>
	  <listitem><para>The live monitor : It means getting the current state of the machines. Reference: A</para></listitem>
	  <listitem><para>The delayed monitor : It means getting past states of a machine. Reference: A+B</para></listitem>
	  <listitem><para>The notification monitor : It means to notify automatically the administrator of an abnormal behaviour of the VISHNU system. Reference: B</para></listitem>
	  <listitem><para>The automatic restart : Once a SeD is down, the IMS SeD is informed of it and it tries to relaunch it. If an agent is down, it cannot
	      be the IMS SeD that restart it but GoDIET will make it. Reference: A+C</para></listitem>
	  <listitem><para>The manual restart : It can be made using GoDIET, but it is also available throught the IMS API. Reference: F+D</para></listitem>
	</itemizedlist>
      </para>
    </section>
    <section annotations="IMS/design/Design.asta#ARCHIDIAG(classes)">
      <title>The role modelisation</title>
    </section>
  </chapter>
  <!-- PART 2 : INTERNAL API -->
  <chapter annotations="core/model/IMS_Internal.apim#SERVICES">
    <title>Internal API specification</title>
     <section> <!-- Generic definition formats presentation -->
      <title>Generic definition formats presentation</title>
      <para>This section presents the formats used in this chapter to describe the services provided
            by the internal API.</para>
      <section><!-- Service definition format -->
        <title>Service definition format</title>
        <para><emphasis role="bold">Access </emphasis></para>
        <para>Here is detailed the access level of the service 'myService' (i.e. the privilege required to use it)</para>
        <para><emphasis role="bold">Parameters</emphasis></para>
        <para>The following table contains all the input and output parameters of the service, along with their type and description.</para>
        <informaltable>
          <tgroup cols="5">
            <colspec colwidth="2cm"/>
            <colspec colwidth="2cm"/>
            <colspec colwidth="3cm"/>
            <colspec colwidth="8cm"/>
            <colspec colwidth="1cm"/>
            <thead>
              <row>
                <entry>Parameter</entry>
                <entry>Type</entry>
                <entry>Serialized type</entry>
                <entry>Description</entry>
                <entry>Mode</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para>sessionKey</para></entry>
                <entry><para>string</para></entry>
                <entry><para>n/a</para></entry>
                <entry><para>This is an example of a required string input parameter</para></entry>
                <entry><para>IN</para></entry>
              </row>
              <row>
                <entry><para>listOfJobs</para></entry>
                <entry><para>string</para></entry>
                <entry><para>ListJobs</para></entry>
                <entry><para>This is an example of an object output parameter that is serialized as a string</para></entry>
                <entry><para>OUT</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para><emphasis role="bold">Description </emphasis></para>
        <para>Here is detailed the purpose of the service 'myService'</para>
        <para><emphasis role="bold">Return Value </emphasis></para>
        <para>Here are detailed the different return codes provided by the service.</para>
        <informaltable>
          <tgroup cols="2">
            <colspec colwidth="8.5cm"/>
            <colspec colwidth="9cm"/>
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para>VISHNU_OK</para></entry>
                <entry><para>The service has been performed successfully.</para></entry>
              </row>
              <row>
                <entry><para>TMS_UNKNOWN_MACHINE</para></entry>
                <entry><para>This is the human-readable generic message that will be available to the user of the API.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para><emphasis role="bold">Used by this(these) API function(s): </emphasis></para>
        <para>This shows the list of functions from the external Vishnu API (see [D1_1c]) that use this service.</para>
      </section> <!-- Service definition format -->
    </section> <!-- Generic definition formats presentation -->
  </chapter><!-- END PART 2 : INTERNAL API -->
  
  <chapter><!-- PART 3 : CLASSES AND DATA -->
    <title>Internal class and data structures</title>
    <section>
      <title>Introduction</title>
      <para>This chapter introduces the details of the implementation of the different components described in chapter 2 (Architecture).
        It is composed of three sections:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Client modelization</emphasis>: describes the classes used to implement the 
              <emphasis role="it">IMS Client</emphasis> component.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Server modelization</emphasis>: describes the classes used to implement the 
              <emphasis role="it">IMS SeD</emphasis> component.</para>
          </listitem>
	   <listitem>
            <para><emphasis role="bold">Data modelization</emphasis>: describes the data structure used to implement the 
              <emphasis role="it">IMS Client</emphasis> component and the <emphasis role="it">IMS SeD</emphasis> component.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section annotations="IMS/design/Design.asta#CLASSDIAG(client)">
      <title>IMS client modelization</title>
    </section>
    
    <section annotations="IMS/design/Design.asta#CLASSDIAG(server)">
      <title>IMS SeD modelization</title>
    </section>
    
    <section annotations="IMS/design/Design.asta#CLASSDIAG(data)">
      <title>IMS data modelization</title>
    </section>
  </chapter><!-- END PART 3 : CLASSES AND DATA -->
  
</book>
  
