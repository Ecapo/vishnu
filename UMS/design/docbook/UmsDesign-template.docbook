<?xml version="1.0" encoding="UTF-8"?>
<book xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">
    <info>
      <title>D2.1a - VISHNU User Management System Package Design</title>
      <author>
        <personname><firstname>Benjamin</firstname><surname>Isnard</surname></personname>
      </author>
      <author>
        <personname><firstname>Daouda</firstname><surname>Traoré</surname></personname>
      </author>
      <author>
        <personname><firstname>Eugène</firstname><surname>Pamba Capo-Chichi</surname></personname>
      </author>
      <author>
        <personname><firstname>Kevin</firstname><surname>Coulomb</surname></personname>
      </author>
      <author>
        <personname><firstname>Ibrahima</firstname><surname>Cissé</surname></personname>
      </author>
      <revhistory>
        <revision>
        <revnumber>1</revnumber>
        <date>21/01/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          <para>Deliverable version</para>
        </revdescription>
        </revision>
      </revhistory>
    </info>
  <chapter>
    <title>Document presentation</title>
    <section>
      <title>Document objectives</title>
      <para>This document presents the detailed internal design of the Users Management System (UMS) package. The purpose of this
        package is to handle all aspects of user management and session management within the VISHNU system. The functional
        and non-functional requirements for this package are those described in the referenced specification documents. The current
        document is part of the design phase of the software and therefore its main goal is to define the main components of the
        system architecture and their relationships.
      </para>
    </section>
    <section>
      <title>Document structure</title>
      <para><itemizedlist>
        <listitem>
          <para>Chapter 1 contains a brief overview of the document content.</para>
        </listitem>
        <listitem>
          <para>Chapter 2 contains a high-level overview of the system architecture.</para>
        </listitem>
        <listitem>
          <para>Chapter 3 describes the internal API used for remote procedure calls through SysFera-DS.</para>
        </listitem>
        <listitem>
          <para>Chapter 4 describes the internal class and data structures</para>
        </listitem>
      </itemizedlist></para>
    </section>

   <section>
      <title>References</title>
      <para><itemizedlist>
        <listitem>
          <para>[D1.1a]: VISHNU General specifications</para>
        </listitem>
        <listitem>
          <para>[D1.1b]: VISHNU Spécifications techniques des besoins</para>
        </listitem>
        <listitem>
          <para>[D1.1c]: VISHNU API Detailed specifications</para>
        </listitem>
      </itemizedlist></para>
    </section>
    <section>
      <title>Acronyms</title>
      <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">API</emphasis>: Application programming interface</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">CLI</emphasis>: Command line interface</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SeD</emphasis>: A Server Daemon is a SysFera-DS agent that provides services through the SysFera-DS API.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section>
     <title>Glossary</title>
     <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Components</emphasis>: the software components represents a library or an executable program that provides a given interface to other components or to end-users.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Serialized type</emphasis>: this is a class of data (C++ Class) which instances can be serialized in a XML string before being sent over an API (to or from the API). The data is deserialized on the other side of the channel in order to re-build the same instance of the class.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SysFera-DS</emphasis>: open-source middleware developped by SysFera.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>

  <!-- PART 1 : ARCHITECTURE -->
  <chapter annotations="UMS/design/Archi.asta#ARCHIDIAG(architecture)">
    <title>System Architecture</title>
    <section>
      <title>Overview of the UMS software infrastructure</title>
      <para>We present in this section a physical and static desciption of the UMS package architecture in terms of software components.
	In addition we show the dependencies between components to highlight their reuse. These components follow a client/server model.
        We present the different software layers from services provided directly to the user to the database used by the server. 
	The UMS client server package has been split into eight different interrelated components. The diagrams shown in section 2.3 describe
        the relationships between these components. The definitions of the components are the following:
       </para>
      <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">External API</emphasis>
	     contains precisely the services provided to the user as defined in the detailed specifications.
	     We're on the client side.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Internal API</emphasis>
	     is the middle layer of the server side. The services announced previously are performed here by combining a set of classes defined 
	    in the two following components.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">UMS Client</emphasis>
	    contains intermediate (proxy) classes providing remote access to the business objects of <emphasis role="bold">UMS Server</emphasis>.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">UMS Server</emphasis>
	     contains all classes implementing business objects by encapsulating the processing provided through the internal API.
	    </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Sysfera-DS Client API</emphasis> is the C client API provided by the SysFera-DS toolbox.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Sysfera-DS Server API</emphasis> is the C server API provided by the SysFera-DS toolbox.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">UMS Monitor Daemon</emphasis> which the only role is to keep an eye on the session inactivity by checking the TIME_OUT parameter in the <emphasis role="bold">Vishnu Database.</emphasis> 
	    </para>
          </listitem>
	  <listitem>
	    <para><emphasis role="bold">Vishnu Database</emphasis> stores all data manipulated by the UMS Server.
	    </para>
	  </listitem>

        </itemizedlist>
      </para>
    </section>

    <section>
      <title> Deployment aspects of UMS</title>
       <para>
        We explains here how the UMS package will be deployed in a physical hardware as illustrated in diagram .... where each cube represents an environment execution.	The UMS environment execution consists of three basic elements: 
	<itemizedlist>
	  <listitem>
	    <para><emphasis role="bold">Main UMS Server</emphasis>
	    </para>
	  </listitem>
          <listitem>
            <para><emphasis role="bold">Secondary UMS Server</emphasis>
            </para>
          </listitem>
	  <listitem>
	    <para><emphasis role="bold">Client host</emphasis>
	    </para>
	  </listitem>
           <listitem>
            <para><emphasis role="bold">SysFera-DS Bus</emphasis>
            </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Vishnu database</emphasis>: this component represents a unique instance of an Oracle or PostgreSQL database.
            </para>
          </listitem>
	 </itemizedlist>
       </para>
    </section>	



		
    
  </chapter><!-- PART 1 : ARCHITECTURE -->
  
  <!-- PART 2 : INTERNAL API -->
  <chapter annotations="core/model/UMS_Internal.apim#SERVICES">
    <title>Internal API specification</title>
     <section> <!-- Generic definition formats presentation -->
      <title>Generic definition formats presentation</title>
      <para>This section presents the formats used in this chapter to describe the services provided
            by the internal API.</para>
      <section><!-- Service definition format -->
        <title>Service definition format</title>
        <para><emphasis role="bold">Access </emphasis></para>
        <para>Here is detailed the access level of the service 'myService' (i.e. the privilege required to use it)</para>
        <para><emphasis role="bold">Parameters</emphasis></para>
        <para>The following table contains all the input and output parameters of the service, along with their type and description.</para>
        <informaltable>
          <tgroup cols="5">
            <colspec colwidth="2cm"/>
            <colspec colwidth="2cm"/>
            <colspec colwidth="3cm"/>
            <colspec colwidth="8cm"/>
            <colspec colwidth="1cm"/>
            <thead>
              <row>
                <entry>Parameter</entry>
                <entry>Type</entry>
                <entry>Serialized type</entry>
                <entry>Description</entry>
                <entry>Mode</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para>sessionKey</para></entry>
                <entry><para>string</para></entry>
                <entry><para>n/a</para></entry>
                <entry><para>This is an example of a required string input parameter</para></entry>
                <entry><para>IN</para></entry>
              </row>
              <row>
                <entry><para>listOfJobs</para></entry>
                <entry><para>string</para></entry>
                <entry><para>ListJobs</para></entry>
                <entry><para>This is an example of an object output parameter that is serialized as a string</para></entry>
                <entry><para>OUT</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para><emphasis role="bold">Access </emphasis></para>
        <para>Here is detailed the access level of the service 'myService' (i.e. the privilege required to use it)</para>
        <para><emphasis role="bold">Description </emphasis></para>
        <para>Here is detailed the purpose of the service 'myService'</para>
        <para><emphasis role="bold">Return Value </emphasis></para>
        <para>Here are detailed the different return codes provided by the service.</para>
        <informaltable>
          <tgroup cols="2">
            <colspec colwidth="8.5cm"/>
            <colspec colwidth="9cm"/>
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para>VISHNU_OK</para></entry>
                <entry><para>The service was performed  successfully.</para></entry>
              </row>
              <row>
                <entry><para>TMS_UNKNOWN_MACHINE</para></entry>
                <entry><para>This is the human-readable generic message that will be available to the user of the API.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para><emphasis role="bold">Used by this(these) API function(s): </emphasis></para>
        <para>This shows the list of functions from the external Vishnu API (see [D1_1c]) that use this service.</para>
      </section> <!-- Service definition format -->
    </section> <!-- Generic definition formats presentation -->
  </chapter><!-- END PART 2 : INTERNAL API -->
  
  <chapter><!-- PART 3 : CLASSES AND DATA -->
    <title>Internal class and data structures</title>
    <section>
      <title>Introduction</title>
      <para>This chapter introduces the details of the implementation of the different components described in chapter 2 (Architecture).
        It is composed of three sections:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Client modelization</emphasis>: describes the classes used to implement the 
              <emphasis role="it">UMS Client</emphasis> component.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Server modelization</emphasis>: describes the classes used to implement the 
              <emphasis role="it">UMS Server</emphasis> component.</para>
          </listitem>
	   <listitem>
            <para><emphasis role="bold">Data modelization</emphasis>: describes the data structure used to implement the 
              <emphasis role="it">UMS Client</emphasis> component and the <emphasis role="it">UMS Server</emphasis> component.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Vishnu core functions modelization</emphasis>: describes the classes and data structures used to implement the 
              the VISHNU cross-modules components (components that are used by UMS and other VISHNU modules).</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section annotations="UMS/design/Design.asta#CLASSDIAG(client)">
      <title>UMS client modelization</title>
    </section>
    
    <section annotations="UMS/design/Design.asta#CLASSDIAG(server)">
      <title>UMS server modelization</title>
    </section>
    
    <section annotations="UMS/design/data.asta#CLASSDIAG(data)">
      <title>UMS data modelization</title>
    </section>
       
    <section annotations="core/design/coreDesign.asta#CLASSDIAG">
      <title>Vishnu core functions modelization</title>
      <section>
	<title>Introduction</title>
	<para>
	The following elements describe the core classes (i.e. the classes that will be used by each module such as the exceptions and the databases). The modelization diagrams are given with some explanations about them.
	</para>
      </section>
      <section>
	<title>Tables relationships</title>
	<!--l. 9
	  -->
	<para>The links between the tables are based on the following rules:
	</para>
	<itemizedlist>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>The <emphasis
			     role="it">VISHNU</emphasis> table has one or more <emphasis
										  role="it">MACHINE</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> is in one and only one <emphasis
										  role="it">VISHNU</emphasis> infrastructure
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> has one or more <emphasis
									   role="it">CPU</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>
		  A <emphasis
		       role="it">CPU</emphasis> is in one and only one <emphasis
									  role="it">MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> has one or more <emphasis
									   role="it">DESCRIPTION</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">DESCRIPTION</emphasis> is for one and only one <emphasis
										       role="it">MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
	      
            </para><itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> has one or more <emphasis
									   role="it">THRESHOLD</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">THRESHOLD</emphasis> is for one and only one <emphasis
										     role="it">MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> has one or more <emphasis
									   role="it">ACCOUNT</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>An <emphasis
			    role="it">ACCOUNT</emphasis> is for one and only one <emphasis
										    role="it">MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>The <emphasis
			     role="it">VISHNU</emphasis> table has one or more <emphasis
										  role="it">USER</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> is in one and only one <emphasis
										role="it">VISHNU</emphasis> infrastructure
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> has one or more <emphasis
									 role="it">ACCOUNT</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>An <emphasis
			    role="it">ACCOUNT</emphasis> is for one and only one <emphasis
										    role="it">USER</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> has one or more <emphasis
									 role="it">FILE TRANSFER</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">FILE TRANSFER</emphasis> is for one and only one <emphasis
											 role="it">USER</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> has one or more <emphasis
									 role="it">OPTION VALUE</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>An <emphasis
			    role="it">OPTION VALUE</emphasis> is for one and only one <emphasis
											 role="it">USER</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> sets one or more <emphasis
									  role="it">THRESHOLD</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">THRESHOLD</emphasis> is set by one and only one <emphasis
											role="it">USER</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
	    </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">OPTION</emphasis> has one or more <emphasis
									   role="it">OPTION VALUE</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>An <emphasis
			    role="it">OPTION VALUE</emphasis> is for one and only one <emphasis
											 role="it">OPTION</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>An <emphasis
			    role="it">USER</emphasis> has one or more <emphasis
									 role="it">SESSION</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">SESSION</emphasis> is for one and only one <emphasis
										   role="it">USER</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
	    </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">SESSION</emphasis> has one or more <emphasis
									   role="it">COMMAND</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">COMMAND</emphasis> is for one and only one <emphasis
										   role="it">SESSION</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">CLIENT MACHINE</emphasis> has one or more <emphasis
											     role="it">SESSION</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A  <emphasis
			    role="it">SESSION</emphasis>  is  for  one  and  only  one  <emphasis
											   role="it">CLIENT
		    MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">MACHINE</emphasis> has one or more <emphasis
									   role="it">STATE</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">STATE</emphasis> is for one and only one <emphasis
										 role="it">MACHINE</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">COMMAND</emphasis> can have one or more <emphasis
										role="it">JOB</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">JOB</emphasis> is for one and only one <emphasis
									       role="it">COMMAND</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	  <listitem>
	    <para>
            </para>
	    <itemizedlist>
              <listitem>
		<para>A <emphasis
			   role="it">COMMAND</emphasis> can have one or more <emphasis
										role="it">FILE</emphasis>
		</para>
	      </listitem>
              <listitem>
		<para>A <emphasis
			   role="it">FILE</emphasis> is for one and only one <emphasis
										role="it">COMMAND</emphasis>
		</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</itemizedlist>
      </section>
      <section>
          <title>Relational model</title>
          <figure>
            <title>Relational model</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/png/relationnalmodel.png" align="center" scale="20"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      <section>
	<title>
	  The modelization
	</title>
	<section>
	  <title>The database classes</title>
	  <para>
	    The database class diagram is very simple. There is a database interface that defines a set of public operations that can be done over a database:
	    <itemizedlist>
              <listitem>
		<para>
		  commit
		</para>
	      </listitem>
              <listitem>
		<para>
		  rollback
		</para>
	      </listitem>
              <listitem>
		<para>
		  execute a query
		</para>
	      </listitem>
              <listitem>
		<para>
		  connect
		</para>
	      </listitem>
              <listitem>
		<para>
		  disconnect ...
		</para>
	      </listitem>
	    </itemizedlist>
	    And there are two examples of classes that implement the database. There is also a factory that can create the databases.
	    See the diagram 4.13.
	  </para>
	</section>
	<section>
	  <title>The exception classes</title>
	  <para>
	    The exception class diagram defines a generic exception class, <emphasis role="it">VishnuException</emphasis> that represents a generic exception that can be raised by a Vishnu function. This class has two subclasses, the <emphasis role="it">SystemException</emphasis> that represents an exception due to a system problem and the <emphasis role="it">UserException</emphasis> that represents an exception due to the user of the function (bad parameters typically). Both the server and clients have this way of building the exceptions. The <emphasis role="it">SystemException</emphasis> has more specific subclasses depending on the modules that raises them. A key function is the append one, that allows to add a message to an existing vishnu exception. Thus, crossing the various level of the call can append information messages to specify the context of the exception.
	    See the diagram 4.14.
	  </para>
	</section>
      </section>
    </section>
    
  </chapter><!-- END PART 3 : CLASSES AND DATA -->
  
</book>
  
