/* This file is a part of VISHNU.

* Copyright SysFera SAS (2011) 

* contact@sysfera.com

* This software is a computer program whose purpose is to provide 
* access to distributed computing resources.
*
* This software is governed by the CeCILL  license under French law and
* abiding by the rules of distribution of free software.  You can  use, 
* modify and/ or redistribute the software under the terms of the CeCILL
* license as circulated by CEA, CNRS and INRIA at the following URL
* "http://www.cecill.info". 

* As a counterpart to the access to the source code and  rights to copy,
* modify and redistribute granted by the license, users are provided only
* with a limited warranty  and the software's author,  the holder of the
* economic rights,  and the successive licensors  have only  limited
* liability. 
*
* In this respect, the user's attention is drawn to the risks associated
* with loading,  using,  modifying and/or developing or reproducing the
* software by the user in light of its specific status of free software,
* that may mean  that it is complicated to manipulate,  and  that  also
* therefore means  that it is reserved for developers  and  experienced
* professionals having in-depth computer knowledge. Users are therefore
* encouraged to load and test the software's suitability as regards their
* requirements in conditions enabling the security of their systems and/or 
* data to be ensured and,  more generally, to use and operate it in the 
* same conditions as regards security. 
*
* The fact that you are presently reading this means that you have had
* knowledge of the CeCILL license and that you accept its terms.
*/

/**
 * \file ListUsersServer.hpp
 * \brief This file contains the VISHNU QueryServer class.
 * \author Daouda Traore (daouda.traore@sysfera.com) and 
 *   Eug√®ne PAMBA CAPO-CHICHI (eugene.capochichi@sysfera.com)
 * \date February 2011 
 */
#ifndef _LIST_USERS_H_SERVER_
#define _LIST_USERS_H_SERVER_

#include <string>
#include <vector>
#include <list>
#include <iostream>
#include "boost/date_time/posix_time/posix_time.hpp"

#include "SessionServer.hpp"
#include "ListUsers.hpp"
#include "user.pb.h"

/**
 * \class ListUsersServer 
 * \brief ListUsersServer class implementation 
 */
class ListUsersServer
{

public:
  
  /**
   * \fn ListUsersServer(const SessionServer& session)
   * \param session The object which encapsulates the session information (ex: identifier of the session)
   * \brief Constructor, raises an exception on error
   */
  explicit ListUsersServer(const SessionServer& session);
  /**
   * \fn ListUsersServer(const std::string& option,
   *                     const SessionServer& session)
   * \param option The ListUsersServer option 
   * \param session The object which encapsulates the session information (ex: identifier of the session)
   * \brief Constructor, raises an exception on error
   */
  ListUsersServer(const std::string& option, const SessionServer& session);

  /**
   * \brief Function to treat the ListUsersServer options 
   * \fn void processOptions(UserServer userServer,
   *                         const std::string& options,
   *                         std::string& sqlRequest)
   * \param userServer the object which encapsulates user information
   * \param options option 
   * \param sqlRequest the sql data base request
   * \return raises an exception on error
   */
  void processOptions(UserServer userServer, const std::string& options, std::string& sqlRequest);

 /**
  * \brief Function to list machines information 
  * \fn UMS_Data::ListUsers* list()
  * \return The pointer to the UMS_Data::ListUsers containing users information
  * \return raises an exception on error
  */
  //UMS_Data::ListUsers* list();

  /**
  * \brief Function to list machines information 
  * \fn UMS_Data::ListUsers* list()
  * \return The pointer to the UMS_Data::ListUsers containing users information
  * \return raises an exception on error
  */
  UMS_Data_Proto::ListUsers list();


  /**
   * \fn ~ListUsersServer()
   * \brief Destructor, raises an exception on error
   */
  ~ListUsersServer(); 

 private:

    /////////////////////////////////
  // Attributes
  /////////////////////////////////


 /**
  * \brief The ListUsersServer option 
  */
  std::string moption;
 /**
  * \brief The SessionServer object containing the encrypted identifier of the session
  *  generated by VISHNU
  */
  SessionServer msessionServer;
 /**
  * \brief The Object containing users information 
  */
  //ListUsers* mlistUsers;
 
  /**
  * \brief The Object containing users information 
  */
  UMS_Data_Proto::ListUsers mlistUsers;

  /**
  * \brief An instance of vishnu database
  */
  Database *mdatabaseVishnu;


};

#endif
