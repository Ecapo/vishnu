/* This file is a part of VISHNU.

* Copyright SysFera SAS (2011) 

* contact@sysfera.com

* This software is a computer program whose purpose is to provide 
* access to distributed computing resources.
*
* This software is governed by the CeCILL  license under French law and
* abiding by the rules of distribution of free software.  You can  use, 
* modify and/ or redistribute the software under the terms of the CeCILL
* license as circulated by CEA, CNRS and INRIA at the following URL
* "http://www.cecill.info". 

* As a counterpart to the access to the source code and  rights to copy,
* modify and redistribute granted by the license, users are provided only
* with a limited warranty  and the software's author,  the holder of the
* economic rights,  and the successive licensors  have only  limited
* liability. 
*
* In this respect, the user's attention is drawn to the risks associated
* with loading,  using,  modifying and/or developing or reproducing the
* software by the user in light of its specific status of free software,
* that may mean  that it is complicated to manipulate,  and  that  also
* therefore means  that it is reserved for developers  and  experienced
* professionals having in-depth computer knowledge. Users are therefore
* encouraged to load and test the software's suitability as regards their
* requirements in conditions enabling the security of their systems and/or 
* data to be ensured and,  more generally, to use and operate it in the 
* same conditions as regards security. 
*
* The fact that you are presently reading this means that you have had
* knowledge of the CeCILL license and that you accept its terms.
*/

/**
 * \file LocalAccountProxy.hpp
 * \brief This file contains the VISHNU LocalAccountProxy class.
 * \author Daouda Traore (daouda.traore@sysfera.com)
 * \date February 2011
 */
#ifndef _LOCAL_ACCOUNT_PROXY_H_
#define _LOCAL_ACCOUNT_PROXY_H_

#include <string>
#include <iostream>

#include "SessionProxy.hpp"
#include "LocalAccount.hpp"

/**
 * \class LocalAccountProxy 
 * \brief LocalAccountProxy class implementation 
 */
class LocalAccountProxy
{

  public:

    /**
     * \fn LocalAccountProxy(const UMS_Data::LocalAccount& localAccount,
     *                       const SessionProxy& session)
     * \param localAccount The object which encapsulates the user Acccount information 
     * \param session The object which encapsulates the session information (ex: identifier of the session)
     * \brief Constructor, raises an exception on error
     */
    LocalAccountProxy(const UMS_Data::LocalAccount& localAccount, const SessionProxy& session);
    /**
     * \brief Function to add a new local user configuration 
     * \fn  int add()
     * \return raises an exception on error
     */
    int add();
    /**
     * \brief Function to update a new local user configuration 
     * \fn  int update()
     * \return raises an exception on error
     */  
    int update();
    /**
     * \brief Function to removes a local user configuration (for a given user on a given machine) from VISHNU 
     * \fn  int deleteLocalAccount()
     * \return raises an exception on error
     */
    int deleteLocalAccount();
    /**
     * \brief Function get SessionProxy object which contains the VISHNU session identifier 
     * \fn SessionProxy getSessionProxy() const
     * \return a SessionProy object which contains the VISHNU session information 
     * \return raises an exception on error
     */
    SessionProxy getSessionProxy() const;
    /**
     * \brief Function get the VISHNU ssh public key  
     * \fn std::string getSshPublicKey() const 
     * \return the VISHNU ssh public Key 
     * \return raises an exception on error
     */
    std::string getSshPublicKey() const;
    /**
     * \fn ~LocalAccountProxy()
     * \brief Destructor, raises an exception on error
     */
    ~LocalAccountProxy();

  private:

    /**
     * \brief Function to combine add() and update() into one function 
     * \fn  int _addLocalAccountInformation(bool isNewLocalAccount=true); 
     * \param isNewLocalAccount to select the call of add or update function 
     * \return raises an exception on error
     */
    int _addLocalAccountInformation(bool isNewLocalAccount=true);

    /////////////////////////////////
    // Attributes
    /////////////////////////////////

    /**
     * \brief The object which encapsulates the user Acccount information 
     */ 
    UMS_Data::LocalAccount mlocalAccount;
    /**
     * \brief The SessionProxy object containing the encrypted identifier of the session
     *  generated by VISHNU
     */
    SessionProxy msessionProxy;
    /**
     * \brief The VISHNU ssh public Key
     */
    std::string  msshPublicKey;
};
#endif
