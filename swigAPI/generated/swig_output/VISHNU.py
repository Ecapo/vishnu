# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_VISHNU', [dirname(__file__)])
        except ImportError:
            import _VISHNU
            return _VISHNU
        if fp is not None:
            try:
                _mod = imp.load_module('_VISHNU', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _VISHNU = swig_import_helper()
    del swig_import_helper
else:
    import _VISHNU
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _VISHNU.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _VISHNU.SwigPyIterator_value(self)
    def incr(self, n = 1): return _VISHNU.SwigPyIterator_incr(self, n)
    def decr(self, n = 1): return _VISHNU.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _VISHNU.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _VISHNU.SwigPyIterator_equal(self, *args)
    def copy(self): return _VISHNU.SwigPyIterator_copy(self)
    def next(self): return _VISHNU.SwigPyIterator_next(self)
    def __next__(self): return _VISHNU.SwigPyIterator___next__(self)
    def previous(self): return _VISHNU.SwigPyIterator_previous(self)
    def advance(self, *args): return _VISHNU.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _VISHNU.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _VISHNU.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _VISHNU.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _VISHNU.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _VISHNU.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _VISHNU.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _VISHNU.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class EObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EObject, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_EObject()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_EObject
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.EObject__initialize(self)
    def eClass(self): return _VISHNU.EObject_eClass(self)
    def eIsProxy(self): return _VISHNU.EObject_eIsProxy(self)
    def eResource(self): return _VISHNU.EObject_eResource(self)
    def eContainer(self): return _VISHNU.EObject_eContainer(self)
    def eContainingFeature(self): return _VISHNU.EObject_eContainingFeature(self)
    def eContainmentFeature(self): return _VISHNU.EObject_eContainmentFeature(self)
    def eContents(self): return _VISHNU.EObject_eContents(self)
    def eAllContents(self): return _VISHNU.EObject_eAllContents(self)
    def eCrossReferences(self): return _VISHNU.EObject_eCrossReferences(self)
    def eInvoke(self, *args): return _VISHNU.EObject_eInvoke(self, *args)
    def eGet(self, *args): return _VISHNU.EObject_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.EObject_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.EObject_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.EObject_eUnset(self, *args)
    def _eClass(self): return _VISHNU.EObject__eClass(self)
    def _setEContainer(self, *args): return _VISHNU.EObject__setEContainer(self, *args)
EObject_swigregister = _VISHNU.EObject_swigregister
EObject_swigregister(EObject)

class ConnectOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConnectOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConnectOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ConnectOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ConnectOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ConnectOptions__initialize(self)
    def getClosePolicy(self): return _VISHNU.ConnectOptions_getClosePolicy(self)
    def setClosePolicy(self, *args): return _VISHNU.ConnectOptions_setClosePolicy(self, *args)
    def getSessionInactivityDelay(self): return _VISHNU.ConnectOptions_getSessionInactivityDelay(self)
    def setSessionInactivityDelay(self, *args): return _VISHNU.ConnectOptions_setSessionInactivityDelay(self, *args)
    def getSubstituteUserId(self): return _VISHNU.ConnectOptions_getSubstituteUserId(self)
    def setSubstituteUserId(self, *args): return _VISHNU.ConnectOptions_setSubstituteUserId(self, *args)
    def eGet(self, *args): return _VISHNU.ConnectOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ConnectOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ConnectOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ConnectOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ConnectOptions__eClass(self)
ConnectOptions_swigregister = _VISHNU.ConnectOptions_swigregister
ConnectOptions_swigregister(ConnectOptions)

class Session(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Session, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Session, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Session()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Session
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Session__initialize(self)
    def getSessionId(self): return _VISHNU.Session_getSessionId(self)
    def setSessionId(self, *args): return _VISHNU.Session_setSessionId(self, *args)
    def getUserId(self): return _VISHNU.Session_getUserId(self)
    def setUserId(self, *args): return _VISHNU.Session_setUserId(self, *args)
    def getSessionKey(self): return _VISHNU.Session_getSessionKey(self)
    def setSessionKey(self, *args): return _VISHNU.Session_setSessionKey(self, *args)
    def getDateLastConnect(self): return _VISHNU.Session_getDateLastConnect(self)
    def setDateLastConnect(self, *args): return _VISHNU.Session_setDateLastConnect(self, *args)
    def getDateCreation(self): return _VISHNU.Session_getDateCreation(self)
    def setDateCreation(self, *args): return _VISHNU.Session_setDateCreation(self, *args)
    def getDateClosure(self): return _VISHNU.Session_getDateClosure(self)
    def setDateClosure(self, *args): return _VISHNU.Session_setDateClosure(self, *args)
    def getStatus(self): return _VISHNU.Session_getStatus(self)
    def setStatus(self, *args): return _VISHNU.Session_setStatus(self, *args)
    def getClosePolicy(self): return _VISHNU.Session_getClosePolicy(self)
    def setClosePolicy(self, *args): return _VISHNU.Session_setClosePolicy(self, *args)
    def getTimeout(self): return _VISHNU.Session_getTimeout(self)
    def setTimeout(self, *args): return _VISHNU.Session_setTimeout(self, *args)
    def getAuthenId(self): return _VISHNU.Session_getAuthenId(self)
    def setAuthenId(self, *args): return _VISHNU.Session_setAuthenId(self, *args)
    def eGet(self, *args): return _VISHNU.Session_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Session_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Session_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Session_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Session__eClass(self)
Session_swigregister = _VISHNU.Session_swigregister
Session_swigregister(Session)

class ListSessions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListSessions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListSessions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListSessions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListSessions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListSessions__initialize(self)
    def getSessions(self): return _VISHNU.ListSessions_getSessions(self)
    def eGet(self, *args): return _VISHNU.ListSessions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListSessions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListSessions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListSessions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListSessions__eClass(self)
ListSessions_swigregister = _VISHNU.ListSessions_swigregister
ListSessions_swigregister(ListSessions)

class ListSessionOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListSessionOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListSessionOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListSessionOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListSessionOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListSessionOptions__initialize(self)
    def getStatus(self): return _VISHNU.ListSessionOptions_getStatus(self)
    def setStatus(self, *args): return _VISHNU.ListSessionOptions_setStatus(self, *args)
    def getSessionClosePolicy(self): return _VISHNU.ListSessionOptions_getSessionClosePolicy(self)
    def setSessionClosePolicy(self, *args): return _VISHNU.ListSessionOptions_setSessionClosePolicy(self, *args)
    def getSessionInactivityDelay(self): return _VISHNU.ListSessionOptions_getSessionInactivityDelay(self)
    def setSessionInactivityDelay(self, *args): return _VISHNU.ListSessionOptions_setSessionInactivityDelay(self, *args)
    def getMachineId(self): return _VISHNU.ListSessionOptions_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.ListSessionOptions_setMachineId(self, *args)
    def isAdminListOption(self): return _VISHNU.ListSessionOptions_isAdminListOption(self)
    def setAdminListOption(self, *args): return _VISHNU.ListSessionOptions_setAdminListOption(self, *args)
    def getUserId(self): return _VISHNU.ListSessionOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListSessionOptions_setUserId(self, *args)
    def getSessionId(self): return _VISHNU.ListSessionOptions_getSessionId(self)
    def setSessionId(self, *args): return _VISHNU.ListSessionOptions_setSessionId(self, *args)
    def getStartDateOption(self): return _VISHNU.ListSessionOptions_getStartDateOption(self)
    def setStartDateOption(self, *args): return _VISHNU.ListSessionOptions_setStartDateOption(self, *args)
    def getEndDateOption(self): return _VISHNU.ListSessionOptions_getEndDateOption(self)
    def setEndDateOption(self, *args): return _VISHNU.ListSessionOptions_setEndDateOption(self, *args)
    def eGet(self, *args): return _VISHNU.ListSessionOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListSessionOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListSessionOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListSessionOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListSessionOptions__eClass(self)
ListSessionOptions_swigregister = _VISHNU.ListSessionOptions_swigregister
ListSessionOptions_swigregister(ListSessionOptions)

class User(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, User, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, User, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_User()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_User
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.User__initialize(self)
    def getUserId(self): return _VISHNU.User_getUserId(self)
    def setUserId(self, *args): return _VISHNU.User_setUserId(self, *args)
    def getPassword(self): return _VISHNU.User_getPassword(self)
    def setPassword(self, *args): return _VISHNU.User_setPassword(self, *args)
    def getFirstname(self): return _VISHNU.User_getFirstname(self)
    def setFirstname(self, *args): return _VISHNU.User_setFirstname(self, *args)
    def getLastname(self): return _VISHNU.User_getLastname(self)
    def setLastname(self, *args): return _VISHNU.User_setLastname(self, *args)
    def getPrivilege(self): return _VISHNU.User_getPrivilege(self)
    def setPrivilege(self, *args): return _VISHNU.User_setPrivilege(self, *args)
    def getEmail(self): return _VISHNU.User_getEmail(self)
    def setEmail(self, *args): return _VISHNU.User_setEmail(self, *args)
    def getStatus(self): return _VISHNU.User_getStatus(self)
    def setStatus(self, *args): return _VISHNU.User_setStatus(self, *args)
    def eGet(self, *args): return _VISHNU.User_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.User_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.User_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.User_eUnset(self, *args)
    def _eClass(self): return _VISHNU.User__eClass(self)
User_swigregister = _VISHNU.User_swigregister
User_swigregister(User)

class ListUsers(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListUsers, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListUsers, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListUsers()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListUsers
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListUsers__initialize(self)
    def getUsers(self): return _VISHNU.ListUsers_getUsers(self)
    def eGet(self, *args): return _VISHNU.ListUsers_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListUsers_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListUsers_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListUsers_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListUsers__eClass(self)
ListUsers_swigregister = _VISHNU.ListUsers_swigregister
ListUsers_swigregister(ListUsers)

class Command(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Command, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Command, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Command()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Command
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Command__initialize(self)
    def getCommandId(self): return _VISHNU.Command_getCommandId(self)
    def setCommandId(self, *args): return _VISHNU.Command_setCommandId(self, *args)
    def getSessionId(self): return _VISHNU.Command_getSessionId(self)
    def setSessionId(self, *args): return _VISHNU.Command_setSessionId(self, *args)
    def getMachineId(self): return _VISHNU.Command_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.Command_setMachineId(self, *args)
    def getCmdDescription(self): return _VISHNU.Command_getCmdDescription(self)
    def setCmdDescription(self, *args): return _VISHNU.Command_setCmdDescription(self, *args)
    def getCmdStartTime(self): return _VISHNU.Command_getCmdStartTime(self)
    def setCmdStartTime(self, *args): return _VISHNU.Command_setCmdStartTime(self, *args)
    def getCmdEndTime(self): return _VISHNU.Command_getCmdEndTime(self)
    def setCmdEndTime(self, *args): return _VISHNU.Command_setCmdEndTime(self, *args)
    def getStatus(self): return _VISHNU.Command_getStatus(self)
    def setStatus(self, *args): return _VISHNU.Command_setStatus(self, *args)
    def eGet(self, *args): return _VISHNU.Command_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Command_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Command_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Command_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Command__eClass(self)
Command_swigregister = _VISHNU.Command_swigregister
Command_swigregister(Command)

class ListCommands(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListCommands, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListCommands, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListCommands()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListCommands
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListCommands__initialize(self)
    def getCommands(self): return _VISHNU.ListCommands_getCommands(self)
    def eGet(self, *args): return _VISHNU.ListCommands_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListCommands_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListCommands_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListCommands_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListCommands__eClass(self)
ListCommands_swigregister = _VISHNU.ListCommands_swigregister
ListCommands_swigregister(ListCommands)

class ListCmdOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListCmdOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListCmdOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListCmdOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListCmdOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListCmdOptions__initialize(self)
    def isAdminListOption(self): return _VISHNU.ListCmdOptions_isAdminListOption(self)
    def setAdminListOption(self, *args): return _VISHNU.ListCmdOptions_setAdminListOption(self, *args)
    def getUserId(self): return _VISHNU.ListCmdOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListCmdOptions_setUserId(self, *args)
    def getSessionId(self): return _VISHNU.ListCmdOptions_getSessionId(self)
    def setSessionId(self, *args): return _VISHNU.ListCmdOptions_setSessionId(self, *args)
    def getStartDateOption(self): return _VISHNU.ListCmdOptions_getStartDateOption(self)
    def setStartDateOption(self, *args): return _VISHNU.ListCmdOptions_setStartDateOption(self, *args)
    def getEndDateOption(self): return _VISHNU.ListCmdOptions_getEndDateOption(self)
    def setEndDateOption(self, *args): return _VISHNU.ListCmdOptions_setEndDateOption(self, *args)
    def eGet(self, *args): return _VISHNU.ListCmdOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListCmdOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListCmdOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListCmdOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListCmdOptions__eClass(self)
ListCmdOptions_swigregister = _VISHNU.ListCmdOptions_swigregister
ListCmdOptions_swigregister(ListCmdOptions)

class LocalAccount(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LocalAccount, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LocalAccount, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_LocalAccount()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_LocalAccount
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.LocalAccount__initialize(self)
    def getUserId(self): return _VISHNU.LocalAccount_getUserId(self)
    def setUserId(self, *args): return _VISHNU.LocalAccount_setUserId(self, *args)
    def getMachineId(self): return _VISHNU.LocalAccount_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.LocalAccount_setMachineId(self, *args)
    def getAcLogin(self): return _VISHNU.LocalAccount_getAcLogin(self)
    def setAcLogin(self, *args): return _VISHNU.LocalAccount_setAcLogin(self, *args)
    def getSshKeyPath(self): return _VISHNU.LocalAccount_getSshKeyPath(self)
    def setSshKeyPath(self, *args): return _VISHNU.LocalAccount_setSshKeyPath(self, *args)
    def getHomeDirectory(self): return _VISHNU.LocalAccount_getHomeDirectory(self)
    def setHomeDirectory(self, *args): return _VISHNU.LocalAccount_setHomeDirectory(self, *args)
    def eGet(self, *args): return _VISHNU.LocalAccount_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.LocalAccount_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.LocalAccount_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.LocalAccount_eUnset(self, *args)
    def _eClass(self): return _VISHNU.LocalAccount__eClass(self)
LocalAccount_swigregister = _VISHNU.LocalAccount_swigregister
LocalAccount_swigregister(LocalAccount)

class ListLocalAccounts(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListLocalAccounts, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListLocalAccounts, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListLocalAccounts()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListLocalAccounts
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListLocalAccounts__initialize(self)
    def getAccounts(self): return _VISHNU.ListLocalAccounts_getAccounts(self)
    def eGet(self, *args): return _VISHNU.ListLocalAccounts_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListLocalAccounts_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListLocalAccounts_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListLocalAccounts_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListLocalAccounts__eClass(self)
ListLocalAccounts_swigregister = _VISHNU.ListLocalAccounts_swigregister
ListLocalAccounts_swigregister(ListLocalAccounts)

class ListLocalAccOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListLocalAccOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListLocalAccOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListLocalAccOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListLocalAccOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListLocalAccOptions__initialize(self)
    def isAdminListOption(self): return _VISHNU.ListLocalAccOptions_isAdminListOption(self)
    def setAdminListOption(self, *args): return _VISHNU.ListLocalAccOptions_setAdminListOption(self, *args)
    def getUserId(self): return _VISHNU.ListLocalAccOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListLocalAccOptions_setUserId(self, *args)
    def getMachineId(self): return _VISHNU.ListLocalAccOptions_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.ListLocalAccOptions_setMachineId(self, *args)
    def eGet(self, *args): return _VISHNU.ListLocalAccOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListLocalAccOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListLocalAccOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListLocalAccOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListLocalAccOptions__eClass(self)
ListLocalAccOptions_swigregister = _VISHNU.ListLocalAccOptions_swigregister
ListLocalAccOptions_swigregister(ListLocalAccOptions)

class Machine(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Machine, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Machine, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Machine()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Machine
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Machine__initialize(self)
    def getMachineId(self): return _VISHNU.Machine_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.Machine_setMachineId(self, *args)
    def getName(self): return _VISHNU.Machine_getName(self)
    def setName(self, *args): return _VISHNU.Machine_setName(self, *args)
    def getSite(self): return _VISHNU.Machine_getSite(self)
    def setSite(self, *args): return _VISHNU.Machine_setSite(self, *args)
    def getMachineDescription(self): return _VISHNU.Machine_getMachineDescription(self)
    def setMachineDescription(self, *args): return _VISHNU.Machine_setMachineDescription(self, *args)
    def getLanguage(self): return _VISHNU.Machine_getLanguage(self)
    def setLanguage(self, *args): return _VISHNU.Machine_setLanguage(self, *args)
    def getStatus(self): return _VISHNU.Machine_getStatus(self)
    def setStatus(self, *args): return _VISHNU.Machine_setStatus(self, *args)
    def getSshPublicKey(self): return _VISHNU.Machine_getSshPublicKey(self)
    def setSshPublicKey(self, *args): return _VISHNU.Machine_setSshPublicKey(self, *args)
    def eGet(self, *args): return _VISHNU.Machine_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Machine_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Machine_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Machine_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Machine__eClass(self)
Machine_swigregister = _VISHNU.Machine_swigregister
Machine_swigregister(Machine)

class ListMachines(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListMachines, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListMachines, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListMachines()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListMachines
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListMachines__initialize(self)
    def getMachines(self): return _VISHNU.ListMachines_getMachines(self)
    def eGet(self, *args): return _VISHNU.ListMachines_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListMachines_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListMachines_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListMachines_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListMachines__eClass(self)
ListMachines_swigregister = _VISHNU.ListMachines_swigregister
ListMachines_swigregister(ListMachines)

class ListMachineOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListMachineOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListMachineOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListMachineOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListMachineOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListMachineOptions__initialize(self)
    def getUserId(self): return _VISHNU.ListMachineOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListMachineOptions_setUserId(self, *args)
    def isListAllMachine(self): return _VISHNU.ListMachineOptions_isListAllMachine(self)
    def setListAllMachine(self, *args): return _VISHNU.ListMachineOptions_setListAllMachine(self, *args)
    def getMachineId(self): return _VISHNU.ListMachineOptions_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.ListMachineOptions_setMachineId(self, *args)
    def eGet(self, *args): return _VISHNU.ListMachineOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListMachineOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListMachineOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListMachineOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListMachineOptions__eClass(self)
ListMachineOptions_swigregister = _VISHNU.ListMachineOptions_swigregister
ListMachineOptions_swigregister(ListMachineOptions)

class Configuration(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Configuration, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Configuration, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Configuration()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Configuration
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Configuration__initialize(self)
    def getFilePath(self): return _VISHNU.Configuration_getFilePath(self)
    def setFilePath(self, *args): return _VISHNU.Configuration_setFilePath(self, *args)
    def getListConfUsers(self): return _VISHNU.Configuration_getListConfUsers(self)
    def getListConfMachines(self): return _VISHNU.Configuration_getListConfMachines(self)
    def getListConfLocalAccounts(self): return _VISHNU.Configuration_getListConfLocalAccounts(self)
    def getListConfAuthSystems(self): return _VISHNU.Configuration_getListConfAuthSystems(self)
    def getListConfAuthAccounts(self): return _VISHNU.Configuration_getListConfAuthAccounts(self)
    def eGet(self, *args): return _VISHNU.Configuration_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Configuration_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Configuration_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Configuration_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Configuration__eClass(self)
Configuration_swigregister = _VISHNU.Configuration_swigregister
Configuration_swigregister(Configuration)

class OptionValue(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OptionValue, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, OptionValue, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_OptionValue()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_OptionValue
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.OptionValue__initialize(self)
    def getOptionName(self): return _VISHNU.OptionValue_getOptionName(self)
    def setOptionName(self, *args): return _VISHNU.OptionValue_setOptionName(self, *args)
    def getValue(self): return _VISHNU.OptionValue_getValue(self)
    def setValue(self, *args): return _VISHNU.OptionValue_setValue(self, *args)
    def eGet(self, *args): return _VISHNU.OptionValue_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.OptionValue_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.OptionValue_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.OptionValue_eUnset(self, *args)
    def _eClass(self): return _VISHNU.OptionValue__eClass(self)
OptionValue_swigregister = _VISHNU.OptionValue_swigregister
OptionValue_swigregister(OptionValue)

class ListOptionsValues(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListOptionsValues, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListOptionsValues, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListOptionsValues()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListOptionsValues
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListOptionsValues__initialize(self)
    def getOptionValues(self): return _VISHNU.ListOptionsValues_getOptionValues(self)
    def eGet(self, *args): return _VISHNU.ListOptionsValues_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListOptionsValues_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListOptionsValues_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListOptionsValues_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListOptionsValues__eClass(self)
ListOptionsValues_swigregister = _VISHNU.ListOptionsValues_swigregister
ListOptionsValues_swigregister(ListOptionsValues)

class ListOptOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListOptOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListOptOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListOptOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListOptOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListOptOptions__initialize(self)
    def isListAllDeftValue(self): return _VISHNU.ListOptOptions_isListAllDeftValue(self)
    def setListAllDeftValue(self, *args): return _VISHNU.ListOptOptions_setListAllDeftValue(self, *args)
    def getUserId(self): return _VISHNU.ListOptOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListOptOptions_setUserId(self, *args)
    def getOptionName(self): return _VISHNU.ListOptOptions_getOptionName(self)
    def setOptionName(self, *args): return _VISHNU.ListOptOptions_setOptionName(self, *args)
    def eGet(self, *args): return _VISHNU.ListOptOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListOptOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListOptOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListOptOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListOptOptions__eClass(self)
ListOptOptions_swigregister = _VISHNU.ListOptOptions_swigregister
ListOptOptions_swigregister(ListOptOptions)

class AuthAccount(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AuthAccount, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AuthAccount, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_AuthAccount()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_AuthAccount
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.AuthAccount__initialize(self)
    def getAuthSystemId(self): return _VISHNU.AuthAccount_getAuthSystemId(self)
    def setAuthSystemId(self, *args): return _VISHNU.AuthAccount_setAuthSystemId(self, *args)
    def getUserId(self): return _VISHNU.AuthAccount_getUserId(self)
    def setUserId(self, *args): return _VISHNU.AuthAccount_setUserId(self, *args)
    def getAcLogin(self): return _VISHNU.AuthAccount_getAcLogin(self)
    def setAcLogin(self, *args): return _VISHNU.AuthAccount_setAcLogin(self, *args)
    def eGet(self, *args): return _VISHNU.AuthAccount_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.AuthAccount_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.AuthAccount_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.AuthAccount_eUnset(self, *args)
    def _eClass(self): return _VISHNU.AuthAccount__eClass(self)
AuthAccount_swigregister = _VISHNU.AuthAccount_swigregister
AuthAccount_swigregister(AuthAccount)

class AuthSystem(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AuthSystem, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AuthSystem, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_AuthSystem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_AuthSystem
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.AuthSystem__initialize(self)
    def getAuthSystemId(self): return _VISHNU.AuthSystem_getAuthSystemId(self)
    def setAuthSystemId(self, *args): return _VISHNU.AuthSystem_setAuthSystemId(self, *args)
    def getName(self): return _VISHNU.AuthSystem_getName(self)
    def setName(self, *args): return _VISHNU.AuthSystem_setName(self, *args)
    def getURI(self): return _VISHNU.AuthSystem_getURI(self)
    def setURI(self, *args): return _VISHNU.AuthSystem_setURI(self, *args)
    def getAuthLogin(self): return _VISHNU.AuthSystem_getAuthLogin(self)
    def setAuthLogin(self, *args): return _VISHNU.AuthSystem_setAuthLogin(self, *args)
    def getAuthPassword(self): return _VISHNU.AuthSystem_getAuthPassword(self)
    def setAuthPassword(self, *args): return _VISHNU.AuthSystem_setAuthPassword(self, *args)
    def getUserPasswordEncryption(self): return _VISHNU.AuthSystem_getUserPasswordEncryption(self)
    def setUserPasswordEncryption(self, *args): return _VISHNU.AuthSystem_setUserPasswordEncryption(self, *args)
    def getType(self): return _VISHNU.AuthSystem_getType(self)
    def setType(self, *args): return _VISHNU.AuthSystem_setType(self, *args)
    def getStatus(self): return _VISHNU.AuthSystem_getStatus(self)
    def setStatus(self, *args): return _VISHNU.AuthSystem_setStatus(self, *args)
    def getLdapBase(self): return _VISHNU.AuthSystem_getLdapBase(self)
    def setLdapBase(self, *args): return _VISHNU.AuthSystem_setLdapBase(self, *args)
    def eGet(self, *args): return _VISHNU.AuthSystem_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.AuthSystem_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.AuthSystem_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.AuthSystem_eUnset(self, *args)
    def _eClass(self): return _VISHNU.AuthSystem__eClass(self)
AuthSystem_swigregister = _VISHNU.AuthSystem_swigregister
AuthSystem_swigregister(AuthSystem)

class ListAuthSysOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListAuthSysOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListAuthSysOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListAuthSysOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListAuthSysOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListAuthSysOptions__initialize(self)
    def isListAllAuthSystems(self): return _VISHNU.ListAuthSysOptions_isListAllAuthSystems(self)
    def setListAllAuthSystems(self, *args): return _VISHNU.ListAuthSysOptions_setListAllAuthSystems(self, *args)
    def isListFullInfo(self): return _VISHNU.ListAuthSysOptions_isListFullInfo(self)
    def setListFullInfo(self, *args): return _VISHNU.ListAuthSysOptions_setListFullInfo(self, *args)
    def getUserId(self): return _VISHNU.ListAuthSysOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListAuthSysOptions_setUserId(self, *args)
    def getAuthSystemId(self): return _VISHNU.ListAuthSysOptions_getAuthSystemId(self)
    def setAuthSystemId(self, *args): return _VISHNU.ListAuthSysOptions_setAuthSystemId(self, *args)
    def eGet(self, *args): return _VISHNU.ListAuthSysOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListAuthSysOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListAuthSysOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListAuthSysOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListAuthSysOptions__eClass(self)
ListAuthSysOptions_swigregister = _VISHNU.ListAuthSysOptions_swigregister
ListAuthSysOptions_swigregister(ListAuthSysOptions)

class ListAuthSystems(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListAuthSystems, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListAuthSystems, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListAuthSystems()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListAuthSystems
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListAuthSystems__initialize(self)
    def getAuthSystems(self): return _VISHNU.ListAuthSystems_getAuthSystems(self)
    def eGet(self, *args): return _VISHNU.ListAuthSystems_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListAuthSystems_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListAuthSystems_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListAuthSystems_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListAuthSystems__eClass(self)
ListAuthSystems_swigregister = _VISHNU.ListAuthSystems_swigregister
ListAuthSystems_swigregister(ListAuthSystems)

class ListAuthAccOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListAuthAccOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListAuthAccOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListAuthAccOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListAuthAccOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListAuthAccOptions__initialize(self)
    def isListAll(self): return _VISHNU.ListAuthAccOptions_isListAll(self)
    def setListAll(self, *args): return _VISHNU.ListAuthAccOptions_setListAll(self, *args)
    def getUserId(self): return _VISHNU.ListAuthAccOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.ListAuthAccOptions_setUserId(self, *args)
    def getAuthSystemId(self): return _VISHNU.ListAuthAccOptions_getAuthSystemId(self)
    def setAuthSystemId(self, *args): return _VISHNU.ListAuthAccOptions_setAuthSystemId(self, *args)
    def eGet(self, *args): return _VISHNU.ListAuthAccOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListAuthAccOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListAuthAccOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListAuthAccOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListAuthAccOptions__eClass(self)
ListAuthAccOptions_swigregister = _VISHNU.ListAuthAccOptions_swigregister
ListAuthAccOptions_swigregister(ListAuthAccOptions)

class ListAuthAccounts(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListAuthAccounts, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListAuthAccounts, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListAuthAccounts()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListAuthAccounts
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListAuthAccounts__initialize(self)
    def getAuthAccounts(self): return _VISHNU.ListAuthAccounts_getAuthAccounts(self)
    def eGet(self, *args): return _VISHNU.ListAuthAccounts_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListAuthAccounts_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListAuthAccounts_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListAuthAccounts_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListAuthAccounts__eClass(self)
ListAuthAccounts_swigregister = _VISHNU.ListAuthAccounts_swigregister
ListAuthAccounts_swigregister(ListAuthAccounts)

class Job(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Job, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Job, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Job()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Job
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Job__initialize(self)
    def getSessionId(self): return _VISHNU.Job_getSessionId(self)
    def setSessionId(self, *args): return _VISHNU.Job_setSessionId(self, *args)
    def getSubmitMachineId(self): return _VISHNU.Job_getSubmitMachineId(self)
    def setSubmitMachineId(self, *args): return _VISHNU.Job_setSubmitMachineId(self, *args)
    def getSubmitMachineName(self): return _VISHNU.Job_getSubmitMachineName(self)
    def setSubmitMachineName(self, *args): return _VISHNU.Job_setSubmitMachineName(self, *args)
    def getJobId(self): return _VISHNU.Job_getJobId(self)
    def setJobId(self, *args): return _VISHNU.Job_setJobId(self, *args)
    def getJobName(self): return _VISHNU.Job_getJobName(self)
    def setJobName(self, *args): return _VISHNU.Job_setJobName(self, *args)
    def getJobPath(self): return _VISHNU.Job_getJobPath(self)
    def setJobPath(self, *args): return _VISHNU.Job_setJobPath(self, *args)
    def getOutputPath(self): return _VISHNU.Job_getOutputPath(self)
    def setOutputPath(self, *args): return _VISHNU.Job_setOutputPath(self, *args)
    def getErrorPath(self): return _VISHNU.Job_getErrorPath(self)
    def setErrorPath(self, *args): return _VISHNU.Job_setErrorPath(self, *args)
    def getJobPrio(self): return _VISHNU.Job_getJobPrio(self)
    def setJobPrio(self, *args): return _VISHNU.Job_setJobPrio(self, *args)
    def getNbCpus(self): return _VISHNU.Job_getNbCpus(self)
    def setNbCpus(self, *args): return _VISHNU.Job_setNbCpus(self, *args)
    def getJobWorkingDir(self): return _VISHNU.Job_getJobWorkingDir(self)
    def setJobWorkingDir(self, *args): return _VISHNU.Job_setJobWorkingDir(self, *args)
    def getStatus(self): return _VISHNU.Job_getStatus(self)
    def setStatus(self, *args): return _VISHNU.Job_setStatus(self, *args)
    def getSubmitDate(self): return _VISHNU.Job_getSubmitDate(self)
    def setSubmitDate(self, *args): return _VISHNU.Job_setSubmitDate(self, *args)
    def getEndDate(self): return _VISHNU.Job_getEndDate(self)
    def setEndDate(self, *args): return _VISHNU.Job_setEndDate(self, *args)
    def getOwner(self): return _VISHNU.Job_getOwner(self)
    def setOwner(self, *args): return _VISHNU.Job_setOwner(self, *args)
    def getJobQueue(self): return _VISHNU.Job_getJobQueue(self)
    def setJobQueue(self, *args): return _VISHNU.Job_setJobQueue(self, *args)
    def getWallClockLimit(self): return _VISHNU.Job_getWallClockLimit(self)
    def setWallClockLimit(self, *args): return _VISHNU.Job_setWallClockLimit(self, *args)
    def getGroupName(self): return _VISHNU.Job_getGroupName(self)
    def setGroupName(self, *args): return _VISHNU.Job_setGroupName(self, *args)
    def getJobDescription(self): return _VISHNU.Job_getJobDescription(self)
    def setJobDescription(self, *args): return _VISHNU.Job_setJobDescription(self, *args)
    def getMemLimit(self): return _VISHNU.Job_getMemLimit(self)
    def setMemLimit(self, *args): return _VISHNU.Job_setMemLimit(self, *args)
    def getNbNodes(self): return _VISHNU.Job_getNbNodes(self)
    def setNbNodes(self, *args): return _VISHNU.Job_setNbNodes(self, *args)
    def getNbNodesAndCpuPerNode(self): return _VISHNU.Job_getNbNodesAndCpuPerNode(self)
    def setNbNodesAndCpuPerNode(self, *args): return _VISHNU.Job_setNbNodesAndCpuPerNode(self, *args)
    def getBatchJobId(self): return _VISHNU.Job_getBatchJobId(self)
    def setBatchJobId(self, *args): return _VISHNU.Job_setBatchJobId(self, *args)
    def eGet(self, *args): return _VISHNU.Job_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Job_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Job_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Job_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Job__eClass(self)
Job_swigregister = _VISHNU.Job_swigregister
Job_swigregister(Job)

class JobResult(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, JobResult, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, JobResult, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_JobResult()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_JobResult
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.JobResult__initialize(self)
    def getJobId(self): return _VISHNU.JobResult_getJobId(self)
    def setJobId(self, *args): return _VISHNU.JobResult_setJobId(self, *args)
    def getOutputPath(self): return _VISHNU.JobResult_getOutputPath(self)
    def setOutputPath(self, *args): return _VISHNU.JobResult_setOutputPath(self, *args)
    def getErrorPath(self): return _VISHNU.JobResult_getErrorPath(self)
    def setErrorPath(self, *args): return _VISHNU.JobResult_setErrorPath(self, *args)
    def eGet(self, *args): return _VISHNU.JobResult_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.JobResult_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.JobResult_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.JobResult_eUnset(self, *args)
    def _eClass(self): return _VISHNU.JobResult__eClass(self)
JobResult_swigregister = _VISHNU.JobResult_swigregister
JobResult_swigregister(JobResult)

class ListJobResults(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListJobResults, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListJobResults, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListJobResults()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListJobResults
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListJobResults__initialize(self)
    def getNbJobs(self): return _VISHNU.ListJobResults_getNbJobs(self)
    def setNbJobs(self, *args): return _VISHNU.ListJobResults_setNbJobs(self, *args)
    def getResults(self): return _VISHNU.ListJobResults_getResults(self)
    def eGet(self, *args): return _VISHNU.ListJobResults_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListJobResults_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListJobResults_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListJobResults_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListJobResults__eClass(self)
ListJobResults_swigregister = _VISHNU.ListJobResults_swigregister
ListJobResults_swigregister(ListJobResults)

class ListJobs(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListJobs, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListJobs, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListJobs()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListJobs
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListJobs__initialize(self)
    def getNbJobs(self): return _VISHNU.ListJobs_getNbJobs(self)
    def setNbJobs(self, *args): return _VISHNU.ListJobs_setNbJobs(self, *args)
    def getNbRunningJobs(self): return _VISHNU.ListJobs_getNbRunningJobs(self)
    def setNbRunningJobs(self, *args): return _VISHNU.ListJobs_setNbRunningJobs(self, *args)
    def getNbWaitingJobs(self): return _VISHNU.ListJobs_getNbWaitingJobs(self)
    def setNbWaitingJobs(self, *args): return _VISHNU.ListJobs_setNbWaitingJobs(self, *args)
    def getJobs(self): return _VISHNU.ListJobs_getJobs(self)
    def eGet(self, *args): return _VISHNU.ListJobs_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListJobs_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListJobs_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListJobs_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListJobs__eClass(self)
ListJobs_swigregister = _VISHNU.ListJobs_swigregister
ListJobs_swigregister(ListJobs)

class ListJobsOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListJobsOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListJobsOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListJobsOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListJobsOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListJobsOptions__initialize(self)
    def getJobId(self): return _VISHNU.ListJobsOptions_getJobId(self)
    def setJobId(self, *args): return _VISHNU.ListJobsOptions_setJobId(self, *args)
    def getNbCpu(self): return _VISHNU.ListJobsOptions_getNbCpu(self)
    def setNbCpu(self, *args): return _VISHNU.ListJobsOptions_setNbCpu(self, *args)
    def getFromSubmitDate(self): return _VISHNU.ListJobsOptions_getFromSubmitDate(self)
    def setFromSubmitDate(self, *args): return _VISHNU.ListJobsOptions_setFromSubmitDate(self, *args)
    def getToSubmitDate(self): return _VISHNU.ListJobsOptions_getToSubmitDate(self)
    def setToSubmitDate(self, *args): return _VISHNU.ListJobsOptions_setToSubmitDate(self, *args)
    def getOwner(self): return _VISHNU.ListJobsOptions_getOwner(self)
    def setOwner(self, *args): return _VISHNU.ListJobsOptions_setOwner(self, *args)
    def getStatus(self): return _VISHNU.ListJobsOptions_getStatus(self)
    def setStatus(self, *args): return _VISHNU.ListJobsOptions_setStatus(self, *args)
    def getPriority(self): return _VISHNU.ListJobsOptions_getPriority(self)
    def setPriority(self, *args): return _VISHNU.ListJobsOptions_setPriority(self, *args)
    def getQueue(self): return _VISHNU.ListJobsOptions_getQueue(self)
    def setQueue(self, *args): return _VISHNU.ListJobsOptions_setQueue(self, *args)
    def getMultipleStatus(self): return _VISHNU.ListJobsOptions_getMultipleStatus(self)
    def setMultipleStatus(self, *args): return _VISHNU.ListJobsOptions_setMultipleStatus(self, *args)
    def isBatchJob(self): return _VISHNU.ListJobsOptions_isBatchJob(self)
    def setBatchJob(self, *args): return _VISHNU.ListJobsOptions_setBatchJob(self, *args)
    def eGet(self, *args): return _VISHNU.ListJobsOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListJobsOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListJobsOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListJobsOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListJobsOptions__eClass(self)
ListJobsOptions_swigregister = _VISHNU.ListJobsOptions_swigregister
ListJobsOptions_swigregister(ListJobsOptions)

class ListProgression(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListProgression, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListProgression, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListProgression()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListProgression
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListProgression__initialize(self)
    def getNbJobs(self): return _VISHNU.ListProgression_getNbJobs(self)
    def setNbJobs(self, *args): return _VISHNU.ListProgression_setNbJobs(self, *args)
    def getProgress(self): return _VISHNU.ListProgression_getProgress(self)
    def eGet(self, *args): return _VISHNU.ListProgression_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListProgression_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListProgression_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListProgression_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListProgression__eClass(self)
ListProgression_swigregister = _VISHNU.ListProgression_swigregister
ListProgression_swigregister(ListProgression)

class ListQueues(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListQueues, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListQueues, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListQueues()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListQueues
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListQueues__initialize(self)
    def getNbQueues(self): return _VISHNU.ListQueues_getNbQueues(self)
    def setNbQueues(self, *args): return _VISHNU.ListQueues_setNbQueues(self, *args)
    def getQueues(self): return _VISHNU.ListQueues_getQueues(self)
    def eGet(self, *args): return _VISHNU.ListQueues_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListQueues_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListQueues_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListQueues_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListQueues__eClass(self)
ListQueues_swigregister = _VISHNU.ListQueues_swigregister
ListQueues_swigregister(ListQueues)

class ProgressOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ProgressOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ProgressOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ProgressOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ProgressOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ProgressOptions__initialize(self)
    def getJobId(self): return _VISHNU.ProgressOptions_getJobId(self)
    def setJobId(self, *args): return _VISHNU.ProgressOptions_setJobId(self, *args)
    def getJobOwner(self): return _VISHNU.ProgressOptions_getJobOwner(self)
    def setJobOwner(self, *args): return _VISHNU.ProgressOptions_setJobOwner(self, *args)
    def eGet(self, *args): return _VISHNU.ProgressOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ProgressOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ProgressOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ProgressOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ProgressOptions__eClass(self)
ProgressOptions_swigregister = _VISHNU.ProgressOptions_swigregister
ProgressOptions_swigregister(ProgressOptions)

class Progression(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Progression, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Progression, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Progression()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Progression
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Progression__initialize(self)
    def getJobId(self): return _VISHNU.Progression_getJobId(self)
    def setJobId(self, *args): return _VISHNU.Progression_setJobId(self, *args)
    def getJobName(self): return _VISHNU.Progression_getJobName(self)
    def setJobName(self, *args): return _VISHNU.Progression_setJobName(self, *args)
    def getWallTime(self): return _VISHNU.Progression_getWallTime(self)
    def setWallTime(self, *args): return _VISHNU.Progression_setWallTime(self, *args)
    def getStartTime(self): return _VISHNU.Progression_getStartTime(self)
    def setStartTime(self, *args): return _VISHNU.Progression_setStartTime(self, *args)
    def getEndTime(self): return _VISHNU.Progression_getEndTime(self)
    def setEndTime(self, *args): return _VISHNU.Progression_setEndTime(self, *args)
    def getPercent(self): return _VISHNU.Progression_getPercent(self)
    def setPercent(self, *args): return _VISHNU.Progression_setPercent(self, *args)
    def getStatus(self): return _VISHNU.Progression_getStatus(self)
    def setStatus(self, *args): return _VISHNU.Progression_setStatus(self, *args)
    def eGet(self, *args): return _VISHNU.Progression_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Progression_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Progression_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Progression_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Progression__eClass(self)
Progression_swigregister = _VISHNU.Progression_swigregister
Progression_swigregister(Progression)

class Queue(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Queue, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Queue, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Queue()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Queue
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Queue__initialize(self)
    def getName(self): return _VISHNU.Queue_getName(self)
    def setName(self, *args): return _VISHNU.Queue_setName(self, *args)
    def getMaxJobCpu(self): return _VISHNU.Queue_getMaxJobCpu(self)
    def setMaxJobCpu(self, *args): return _VISHNU.Queue_setMaxJobCpu(self, *args)
    def getMaxProcCpu(self): return _VISHNU.Queue_getMaxProcCpu(self)
    def setMaxProcCpu(self, *args): return _VISHNU.Queue_setMaxProcCpu(self, *args)
    def getMemory(self): return _VISHNU.Queue_getMemory(self)
    def setMemory(self, *args): return _VISHNU.Queue_setMemory(self, *args)
    def getWallTime(self): return _VISHNU.Queue_getWallTime(self)
    def setWallTime(self, *args): return _VISHNU.Queue_setWallTime(self, *args)
    def getNode(self): return _VISHNU.Queue_getNode(self)
    def setNode(self, *args): return _VISHNU.Queue_setNode(self, *args)
    def getNbRunningJobs(self): return _VISHNU.Queue_getNbRunningJobs(self)
    def setNbRunningJobs(self, *args): return _VISHNU.Queue_setNbRunningJobs(self, *args)
    def getNbJobsInQueue(self): return _VISHNU.Queue_getNbJobsInQueue(self)
    def setNbJobsInQueue(self, *args): return _VISHNU.Queue_setNbJobsInQueue(self, *args)
    def getState(self): return _VISHNU.Queue_getState(self)
    def setState(self, *args): return _VISHNU.Queue_setState(self, *args)
    def getPriority(self): return _VISHNU.Queue_getPriority(self)
    def setPriority(self, *args): return _VISHNU.Queue_setPriority(self, *args)
    def getDescription(self): return _VISHNU.Queue_getDescription(self)
    def setDescription(self, *args): return _VISHNU.Queue_setDescription(self, *args)
    def eGet(self, *args): return _VISHNU.Queue_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Queue_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Queue_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Queue_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Queue__eClass(self)
Queue_swigregister = _VISHNU.Queue_swigregister
Queue_swigregister(Queue)

class SubmitOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubmitOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SubmitOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_SubmitOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_SubmitOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.SubmitOptions__initialize(self)
    def getName(self): return _VISHNU.SubmitOptions_getName(self)
    def setName(self, *args): return _VISHNU.SubmitOptions_setName(self, *args)
    def getQueue(self): return _VISHNU.SubmitOptions_getQueue(self)
    def setQueue(self, *args): return _VISHNU.SubmitOptions_setQueue(self, *args)
    def getWallTime(self): return _VISHNU.SubmitOptions_getWallTime(self)
    def setWallTime(self, *args): return _VISHNU.SubmitOptions_setWallTime(self, *args)
    def getMemory(self): return _VISHNU.SubmitOptions_getMemory(self)
    def setMemory(self, *args): return _VISHNU.SubmitOptions_setMemory(self, *args)
    def getNbCpu(self): return _VISHNU.SubmitOptions_getNbCpu(self)
    def setNbCpu(self, *args): return _VISHNU.SubmitOptions_setNbCpu(self, *args)
    def getNbNodesAndCpuPerNode(self): return _VISHNU.SubmitOptions_getNbNodesAndCpuPerNode(self)
    def setNbNodesAndCpuPerNode(self, *args): return _VISHNU.SubmitOptions_setNbNodesAndCpuPerNode(self, *args)
    def getOutputPath(self): return _VISHNU.SubmitOptions_getOutputPath(self)
    def setOutputPath(self, *args): return _VISHNU.SubmitOptions_setOutputPath(self, *args)
    def getErrorPath(self): return _VISHNU.SubmitOptions_getErrorPath(self)
    def setErrorPath(self, *args): return _VISHNU.SubmitOptions_setErrorPath(self, *args)
    def getMailNotification(self): return _VISHNU.SubmitOptions_getMailNotification(self)
    def setMailNotification(self, *args): return _VISHNU.SubmitOptions_setMailNotification(self, *args)
    def getMailNotifyUser(self): return _VISHNU.SubmitOptions_getMailNotifyUser(self)
    def setMailNotifyUser(self, *args): return _VISHNU.SubmitOptions_setMailNotifyUser(self, *args)
    def getGroup(self): return _VISHNU.SubmitOptions_getGroup(self)
    def setGroup(self, *args): return _VISHNU.SubmitOptions_setGroup(self, *args)
    def getWorkingDir(self): return _VISHNU.SubmitOptions_getWorkingDir(self)
    def setWorkingDir(self, *args): return _VISHNU.SubmitOptions_setWorkingDir(self, *args)
    def getCpuTime(self): return _VISHNU.SubmitOptions_getCpuTime(self)
    def setCpuTime(self, *args): return _VISHNU.SubmitOptions_setCpuTime(self, *args)
    def isSelectQueueAutom(self): return _VISHNU.SubmitOptions_isSelectQueueAutom(self)
    def setSelectQueueAutom(self, *args): return _VISHNU.SubmitOptions_setSelectQueueAutom(self, *args)
    def getCriterion(self): return _VISHNU.SubmitOptions_getCriterion(self)
    def setCriterion(self, *args): return _VISHNU.SubmitOptions_setCriterion(self, *args)
    def eGet(self, *args): return _VISHNU.SubmitOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.SubmitOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.SubmitOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.SubmitOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.SubmitOptions__eClass(self)
SubmitOptions_swigregister = _VISHNU.SubmitOptions_swigregister
SubmitOptions_swigregister(SubmitOptions)

class LoadCriterion(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LoadCriterion, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LoadCriterion, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_LoadCriterion()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_LoadCriterion
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.LoadCriterion__initialize(self)
    def getLoadType(self): return _VISHNU.LoadCriterion_getLoadType(self)
    def setLoadType(self, *args): return _VISHNU.LoadCriterion_setLoadType(self, *args)
    def eGet(self, *args): return _VISHNU.LoadCriterion_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.LoadCriterion_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.LoadCriterion_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.LoadCriterion_eUnset(self, *args)
    def _eClass(self): return _VISHNU.LoadCriterion__eClass(self)
LoadCriterion_swigregister = _VISHNU.LoadCriterion_swigregister
LoadCriterion_swigregister(LoadCriterion)

class ExportOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExportOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ExportOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ExportOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ExportOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ExportOp__initialize(self)
    def getExportType(self): return _VISHNU.ExportOp_getExportType(self)
    def setExportType(self, *args): return _VISHNU.ExportOp_setExportType(self, *args)
    def eGet(self, *args): return _VISHNU.ExportOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ExportOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ExportOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ExportOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ExportOp__eClass(self)
ExportOp_swigregister = _VISHNU.ExportOp_swigregister
ExportOp_swigregister(ExportOp)

class CurMetricOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CurMetricOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CurMetricOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_CurMetricOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_CurMetricOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.CurMetricOp__initialize(self)
    def getMetricType(self): return _VISHNU.CurMetricOp_getMetricType(self)
    def setMetricType(self, *args): return _VISHNU.CurMetricOp_setMetricType(self, *args)
    def eGet(self, *args): return _VISHNU.CurMetricOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.CurMetricOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.CurMetricOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.CurMetricOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.CurMetricOp__eClass(self)
CurMetricOp_swigregister = _VISHNU.CurMetricOp_swigregister
CurMetricOp_swigregister(CurMetricOp)

class Metric(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Metric, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Metric, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Metric()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Metric
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Metric__initialize(self)
    def getType(self): return _VISHNU.Metric_getType(self)
    def setType(self, *args): return _VISHNU.Metric_setType(self, *args)
    def getValue(self): return _VISHNU.Metric_getValue(self)
    def setValue(self, *args): return _VISHNU.Metric_setValue(self, *args)
    def getTime(self): return _VISHNU.Metric_getTime(self)
    def setTime(self, *args): return _VISHNU.Metric_setTime(self, *args)
    def eGet(self, *args): return _VISHNU.Metric_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Metric_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Metric_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Metric_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Metric__eClass(self)
Metric_swigregister = _VISHNU.Metric_swigregister
Metric_swigregister(Metric)

class ListMetric(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListMetric, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListMetric, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListMetric()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListMetric
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListMetric__initialize(self)
    def getMetric(self): return _VISHNU.ListMetric_getMetric(self)
    def eGet(self, *args): return _VISHNU.ListMetric_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListMetric_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListMetric_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListMetric_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListMetric__eClass(self)
ListMetric_swigregister = _VISHNU.ListMetric_swigregister
ListMetric_swigregister(ListMetric)

class ListProcesses(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListProcesses, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListProcesses, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListProcesses()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListProcesses
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListProcesses__initialize(self)
    def getProcess(self): return _VISHNU.ListProcesses_getProcess(self)
    def eGet(self, *args): return _VISHNU.ListProcesses_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListProcesses_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListProcesses_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListProcesses_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListProcesses__eClass(self)
ListProcesses_swigregister = _VISHNU.ListProcesses_swigregister
ListProcesses_swigregister(ListProcesses)

class ListSysInfo(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListSysInfo, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListSysInfo, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListSysInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListSysInfo
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListSysInfo__initialize(self)
    def getSysInfo(self): return _VISHNU.ListSysInfo_getSysInfo(self)
    def eGet(self, *args): return _VISHNU.ListSysInfo_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListSysInfo_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListSysInfo_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListSysInfo_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListSysInfo__eClass(self)
ListSysInfo_swigregister = _VISHNU.ListSysInfo_swigregister
ListSysInfo_swigregister(ListSysInfo)

class ListThreshold(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListThreshold, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListThreshold, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ListThreshold()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ListThreshold
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ListThreshold__initialize(self)
    def getThreshold(self): return _VISHNU.ListThreshold_getThreshold(self)
    def eGet(self, *args): return _VISHNU.ListThreshold_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ListThreshold_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ListThreshold_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ListThreshold_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ListThreshold__eClass(self)
ListThreshold_swigregister = _VISHNU.ListThreshold_swigregister
ListThreshold_swigregister(ListThreshold)

class MetricHistOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, MetricHistOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, MetricHistOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_MetricHistOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_MetricHistOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.MetricHistOp__initialize(self)
    def getStartTime(self): return _VISHNU.MetricHistOp_getStartTime(self)
    def setStartTime(self, *args): return _VISHNU.MetricHistOp_setStartTime(self, *args)
    def getEndTime(self): return _VISHNU.MetricHistOp_getEndTime(self)
    def setEndTime(self, *args): return _VISHNU.MetricHistOp_setEndTime(self, *args)
    def getType(self): return _VISHNU.MetricHistOp_getType(self)
    def setType(self, *args): return _VISHNU.MetricHistOp_setType(self, *args)
    def eGet(self, *args): return _VISHNU.MetricHistOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.MetricHistOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.MetricHistOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.MetricHistOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.MetricHistOp__eClass(self)
MetricHistOp_swigregister = _VISHNU.MetricHistOp_swigregister
MetricHistOp_swigregister(MetricHistOp)

class Process(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Process, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Process, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Process()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Process
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Process__initialize(self)
    def getProcessName(self): return _VISHNU.Process_getProcessName(self)
    def setProcessName(self, *args): return _VISHNU.Process_setProcessName(self, *args)
    def getMachineId(self): return _VISHNU.Process_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.Process_setMachineId(self, *args)
    def getDietId(self): return _VISHNU.Process_getDietId(self)
    def setDietId(self, *args): return _VISHNU.Process_setDietId(self, *args)
    def getState(self): return _VISHNU.Process_getState(self)
    def setState(self, *args): return _VISHNU.Process_setState(self, *args)
    def getTimestamp(self): return _VISHNU.Process_getTimestamp(self)
    def setTimestamp(self, *args): return _VISHNU.Process_setTimestamp(self, *args)
    def getScript(self): return _VISHNU.Process_getScript(self)
    def setScript(self, *args): return _VISHNU.Process_setScript(self, *args)
    def eGet(self, *args): return _VISHNU.Process_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Process_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Process_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Process_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Process__eClass(self)
Process_swigregister = _VISHNU.Process_swigregister
Process_swigregister(Process)

class ProcessOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ProcessOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ProcessOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ProcessOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ProcessOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ProcessOp__initialize(self)
    def getMachineId(self): return _VISHNU.ProcessOp_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.ProcessOp_setMachineId(self, *args)
    def eGet(self, *args): return _VISHNU.ProcessOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ProcessOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ProcessOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ProcessOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ProcessOp__eClass(self)
ProcessOp_swigregister = _VISHNU.ProcessOp_swigregister
ProcessOp_swigregister(ProcessOp)

class RestartOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RestartOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, RestartOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_RestartOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_RestartOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.RestartOp__initialize(self)
    def getVishnuConf(self): return _VISHNU.RestartOp_getVishnuConf(self)
    def setVishnuConf(self, *args): return _VISHNU.RestartOp_setVishnuConf(self, *args)
    def getSedType(self): return _VISHNU.RestartOp_getSedType(self)
    def setSedType(self, *args): return _VISHNU.RestartOp_setSedType(self, *args)
    def eGet(self, *args): return _VISHNU.RestartOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.RestartOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.RestartOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.RestartOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.RestartOp__eClass(self)
RestartOp_swigregister = _VISHNU.RestartOp_swigregister
RestartOp_swigregister(RestartOp)

class SysInfoOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SysInfoOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SysInfoOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_SysInfoOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_SysInfoOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.SysInfoOp__initialize(self)
    def getMachineId(self): return _VISHNU.SysInfoOp_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.SysInfoOp_setMachineId(self, *args)
    def eGet(self, *args): return _VISHNU.SysInfoOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.SysInfoOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.SysInfoOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.SysInfoOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.SysInfoOp__eClass(self)
SysInfoOp_swigregister = _VISHNU.SysInfoOp_swigregister
SysInfoOp_swigregister(SysInfoOp)

class SystemInfo(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SystemInfo, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SystemInfo, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_SystemInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_SystemInfo
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.SystemInfo__initialize(self)
    def getMemory(self): return _VISHNU.SystemInfo_getMemory(self)
    def setMemory(self, *args): return _VISHNU.SystemInfo_setMemory(self, *args)
    def getDiskSpace(self): return _VISHNU.SystemInfo_getDiskSpace(self)
    def setDiskSpace(self, *args): return _VISHNU.SystemInfo_setDiskSpace(self, *args)
    def getMachineId(self): return _VISHNU.SystemInfo_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.SystemInfo_setMachineId(self, *args)
    def eGet(self, *args): return _VISHNU.SystemInfo_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.SystemInfo_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.SystemInfo_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.SystemInfo_eUnset(self, *args)
    def _eClass(self): return _VISHNU.SystemInfo__eClass(self)
SystemInfo_swigregister = _VISHNU.SystemInfo_swigregister
SystemInfo_swigregister(SystemInfo)

class Threshold(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Threshold, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Threshold, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_Threshold()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_Threshold
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.Threshold__initialize(self)
    def getValue(self): return _VISHNU.Threshold_getValue(self)
    def setValue(self, *args): return _VISHNU.Threshold_setValue(self, *args)
    def getMachineId(self): return _VISHNU.Threshold_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.Threshold_setMachineId(self, *args)
    def getType(self): return _VISHNU.Threshold_getType(self)
    def setType(self, *args): return _VISHNU.Threshold_setType(self, *args)
    def getHandler(self): return _VISHNU.Threshold_getHandler(self)
    def setHandler(self, *args): return _VISHNU.Threshold_setHandler(self, *args)
    def eGet(self, *args): return _VISHNU.Threshold_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.Threshold_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.Threshold_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.Threshold_eUnset(self, *args)
    def _eClass(self): return _VISHNU.Threshold__eClass(self)
Threshold_swigregister = _VISHNU.Threshold_swigregister
Threshold_swigregister(Threshold)

class ThresholdOp(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ThresholdOp, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ThresholdOp, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_ThresholdOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_ThresholdOp
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.ThresholdOp__initialize(self)
    def getMachineId(self): return _VISHNU.ThresholdOp_getMachineId(self)
    def setMachineId(self, *args): return _VISHNU.ThresholdOp_setMachineId(self, *args)
    def getMetricType(self): return _VISHNU.ThresholdOp_getMetricType(self)
    def setMetricType(self, *args): return _VISHNU.ThresholdOp_setMetricType(self, *args)
    def eGet(self, *args): return _VISHNU.ThresholdOp_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.ThresholdOp_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.ThresholdOp_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.ThresholdOp_eUnset(self, *args)
    def _eClass(self): return _VISHNU.ThresholdOp__eClass(self)
ThresholdOp_swigregister = _VISHNU.ThresholdOp_swigregister
ThresholdOp_swigregister(ThresholdOp)

class CpFileOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CpFileOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CpFileOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_CpFileOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_CpFileOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.CpFileOptions__initialize(self)
    def isIsRecursive(self): return _VISHNU.CpFileOptions_isIsRecursive(self)
    def setIsRecursive(self, *args): return _VISHNU.CpFileOptions_setIsRecursive(self, *args)
    def getTrCommand(self): return _VISHNU.CpFileOptions_getTrCommand(self)
    def setTrCommand(self, *args): return _VISHNU.CpFileOptions_setTrCommand(self, *args)
    def eGet(self, *args): return _VISHNU.CpFileOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.CpFileOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.CpFileOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.CpFileOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.CpFileOptions__eClass(self)
CpFileOptions_swigregister = _VISHNU.CpFileOptions_swigregister
CpFileOptions_swigregister(CpFileOptions)

class FileStat(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FileStat, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, FileStat, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_FileStat()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_FileStat
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.FileStat__initialize(self)
    def getPath(self): return _VISHNU.FileStat_getPath(self)
    def setPath(self, *args): return _VISHNU.FileStat_setPath(self, *args)
    def getOwner(self): return _VISHNU.FileStat_getOwner(self)
    def setOwner(self, *args): return _VISHNU.FileStat_setOwner(self, *args)
    def getGroup(self): return _VISHNU.FileStat_getGroup(self)
    def setGroup(self, *args): return _VISHNU.FileStat_setGroup(self, *args)
    def getPerms(self): return _VISHNU.FileStat_getPerms(self)
    def setPerms(self, *args): return _VISHNU.FileStat_setPerms(self, *args)
    def getUid(self): return _VISHNU.FileStat_getUid(self)
    def setUid(self, *args): return _VISHNU.FileStat_setUid(self, *args)
    def getGid(self): return _VISHNU.FileStat_getGid(self)
    def setGid(self, *args): return _VISHNU.FileStat_setGid(self, *args)
    def getSize(self): return _VISHNU.FileStat_getSize(self)
    def setSize(self, *args): return _VISHNU.FileStat_setSize(self, *args)
    def getAtime(self): return _VISHNU.FileStat_getAtime(self)
    def setAtime(self, *args): return _VISHNU.FileStat_setAtime(self, *args)
    def getMtime(self): return _VISHNU.FileStat_getMtime(self)
    def setMtime(self, *args): return _VISHNU.FileStat_setMtime(self, *args)
    def getCtime(self): return _VISHNU.FileStat_getCtime(self)
    def setCtime(self, *args): return _VISHNU.FileStat_setCtime(self, *args)
    def getType(self): return _VISHNU.FileStat_getType(self)
    def setType(self, *args): return _VISHNU.FileStat_setType(self, *args)
    def eGet(self, *args): return _VISHNU.FileStat_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.FileStat_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.FileStat_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.FileStat_eUnset(self, *args)
    def _eClass(self): return _VISHNU.FileStat__eClass(self)
FileStat_swigregister = _VISHNU.FileStat_swigregister
FileStat_swigregister(FileStat)

class FileTransfer(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FileTransfer, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, FileTransfer, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_FileTransfer()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_FileTransfer
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.FileTransfer__initialize(self)
    def getTransferId(self): return _VISHNU.FileTransfer_getTransferId(self)
    def setTransferId(self, *args): return _VISHNU.FileTransfer_setTransferId(self, *args)
    def getStatus(self): return _VISHNU.FileTransfer_getStatus(self)
    def setStatus(self, *args): return _VISHNU.FileTransfer_setStatus(self, *args)
    def getUserId(self): return _VISHNU.FileTransfer_getUserId(self)
    def setUserId(self, *args): return _VISHNU.FileTransfer_setUserId(self, *args)
    def getClientMachineId(self): return _VISHNU.FileTransfer_getClientMachineId(self)
    def setClientMachineId(self, *args): return _VISHNU.FileTransfer_setClientMachineId(self, *args)
    def getSourceMachineId(self): return _VISHNU.FileTransfer_getSourceMachineId(self)
    def setSourceMachineId(self, *args): return _VISHNU.FileTransfer_setSourceMachineId(self, *args)
    def getDestinationMachineId(self): return _VISHNU.FileTransfer_getDestinationMachineId(self)
    def setDestinationMachineId(self, *args): return _VISHNU.FileTransfer_setDestinationMachineId(self, *args)
    def getSourceFilePath(self): return _VISHNU.FileTransfer_getSourceFilePath(self)
    def setSourceFilePath(self, *args): return _VISHNU.FileTransfer_setSourceFilePath(self, *args)
    def getDestinationFilePath(self): return _VISHNU.FileTransfer_getDestinationFilePath(self)
    def setDestinationFilePath(self, *args): return _VISHNU.FileTransfer_setDestinationFilePath(self, *args)
    def getSize(self): return _VISHNU.FileTransfer_getSize(self)
    def setSize(self, *args): return _VISHNU.FileTransfer_setSize(self, *args)
    def getStart_time(self): return _VISHNU.FileTransfer_getStart_time(self)
    def setStart_time(self, *args): return _VISHNU.FileTransfer_setStart_time(self, *args)
    def getTrCommand(self): return _VISHNU.FileTransfer_getTrCommand(self)
    def setTrCommand(self, *args): return _VISHNU.FileTransfer_setTrCommand(self, *args)
    def getErrorMsg(self): return _VISHNU.FileTransfer_getErrorMsg(self)
    def setErrorMsg(self, *args): return _VISHNU.FileTransfer_setErrorMsg(self, *args)
    def eGet(self, *args): return _VISHNU.FileTransfer_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.FileTransfer_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.FileTransfer_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.FileTransfer_eUnset(self, *args)
    def _eClass(self): return _VISHNU.FileTransfer__eClass(self)
FileTransfer_swigregister = _VISHNU.FileTransfer_swigregister
FileTransfer_swigregister(FileTransfer)

class FileTransferList(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FileTransferList, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, FileTransferList, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_FileTransferList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_FileTransferList
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.FileTransferList__initialize(self)
    def getFileTransfers(self): return _VISHNU.FileTransferList_getFileTransfers(self)
    def eGet(self, *args): return _VISHNU.FileTransferList_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.FileTransferList_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.FileTransferList_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.FileTransferList_eUnset(self, *args)
    def _eClass(self): return _VISHNU.FileTransferList__eClass(self)
FileTransferList_swigregister = _VISHNU.FileTransferList_swigregister
FileTransferList_swigregister(FileTransferList)

class HeadOfFileOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HeadOfFileOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, HeadOfFileOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_HeadOfFileOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_HeadOfFileOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.HeadOfFileOptions__initialize(self)
    def getNline(self): return _VISHNU.HeadOfFileOptions_getNline(self)
    def setNline(self, *args): return _VISHNU.HeadOfFileOptions_setNline(self, *args)
    def eGet(self, *args): return _VISHNU.HeadOfFileOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.HeadOfFileOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.HeadOfFileOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.HeadOfFileOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.HeadOfFileOptions__eClass(self)
HeadOfFileOptions_swigregister = _VISHNU.HeadOfFileOptions_swigregister
HeadOfFileOptions_swigregister(HeadOfFileOptions)

class LsDirOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LsDirOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LsDirOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_LsDirOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_LsDirOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.LsDirOptions__initialize(self)
    def isLongFormat(self): return _VISHNU.LsDirOptions_isLongFormat(self)
    def setLongFormat(self, *args): return _VISHNU.LsDirOptions_setLongFormat(self, *args)
    def isAllFiles(self): return _VISHNU.LsDirOptions_isAllFiles(self)
    def setAllFiles(self, *args): return _VISHNU.LsDirOptions_setAllFiles(self, *args)
    def eGet(self, *args): return _VISHNU.LsDirOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.LsDirOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.LsDirOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.LsDirOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.LsDirOptions__eClass(self)
LsDirOptions_swigregister = _VISHNU.LsDirOptions_swigregister
LsDirOptions_swigregister(LsDirOptions)

class LsTransferOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LsTransferOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LsTransferOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_LsTransferOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_LsTransferOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.LsTransferOptions__initialize(self)
    def getTransferId(self): return _VISHNU.LsTransferOptions_getTransferId(self)
    def setTransferId(self, *args): return _VISHNU.LsTransferOptions_setTransferId(self, *args)
    def getFromMachineId(self): return _VISHNU.LsTransferOptions_getFromMachineId(self)
    def setFromMachineId(self, *args): return _VISHNU.LsTransferOptions_setFromMachineId(self, *args)
    def getUserId(self): return _VISHNU.LsTransferOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.LsTransferOptions_setUserId(self, *args)
    def getStatus(self): return _VISHNU.LsTransferOptions_getStatus(self)
    def setStatus(self, *args): return _VISHNU.LsTransferOptions_setStatus(self, *args)
    def eGet(self, *args): return _VISHNU.LsTransferOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.LsTransferOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.LsTransferOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.LsTransferOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.LsTransferOptions__eClass(self)
LsTransferOptions_swigregister = _VISHNU.LsTransferOptions_swigregister
LsTransferOptions_swigregister(LsTransferOptions)

class StopTransferOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StopTransferOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, StopTransferOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_StopTransferOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_StopTransferOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.StopTransferOptions__initialize(self)
    def getTransferId(self): return _VISHNU.StopTransferOptions_getTransferId(self)
    def setTransferId(self, *args): return _VISHNU.StopTransferOptions_setTransferId(self, *args)
    def getFromMachineId(self): return _VISHNU.StopTransferOptions_getFromMachineId(self)
    def setFromMachineId(self, *args): return _VISHNU.StopTransferOptions_setFromMachineId(self, *args)
    def getUserId(self): return _VISHNU.StopTransferOptions_getUserId(self)
    def setUserId(self, *args): return _VISHNU.StopTransferOptions_setUserId(self, *args)
    def eGet(self, *args): return _VISHNU.StopTransferOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.StopTransferOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.StopTransferOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.StopTransferOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.StopTransferOptions__eClass(self)
StopTransferOptions_swigregister = _VISHNU.StopTransferOptions_swigregister
StopTransferOptions_swigregister(StopTransferOptions)

class TailOfFileOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TailOfFileOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TailOfFileOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_TailOfFileOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_TailOfFileOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.TailOfFileOptions__initialize(self)
    def getNline(self): return _VISHNU.TailOfFileOptions_getNline(self)
    def setNline(self, *args): return _VISHNU.TailOfFileOptions_setNline(self, *args)
    def eGet(self, *args): return _VISHNU.TailOfFileOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.TailOfFileOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.TailOfFileOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.TailOfFileOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.TailOfFileOptions__eClass(self)
TailOfFileOptions_swigregister = _VISHNU.TailOfFileOptions_swigregister
TailOfFileOptions_swigregister(TailOfFileOptions)

class RmFileOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RmFileOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, RmFileOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_RmFileOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_RmFileOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.RmFileOptions__initialize(self)
    def isIsRecursive(self): return _VISHNU.RmFileOptions_isIsRecursive(self)
    def setIsRecursive(self, *args): return _VISHNU.RmFileOptions_setIsRecursive(self, *args)
    def eGet(self, *args): return _VISHNU.RmFileOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.RmFileOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.RmFileOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.RmFileOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.RmFileOptions__eClass(self)
RmFileOptions_swigregister = _VISHNU.RmFileOptions_swigregister
RmFileOptions_swigregister(RmFileOptions)

class CreateDirOptions(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CreateDirOptions, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CreateDirOptions, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_CreateDirOptions()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_CreateDirOptions
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.CreateDirOptions__initialize(self)
    def isIsRecursive(self): return _VISHNU.CreateDirOptions_isIsRecursive(self)
    def setIsRecursive(self, *args): return _VISHNU.CreateDirOptions_setIsRecursive(self, *args)
    def eGet(self, *args): return _VISHNU.CreateDirOptions_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.CreateDirOptions_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.CreateDirOptions_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.CreateDirOptions_eUnset(self, *args)
    def _eClass(self): return _VISHNU.CreateDirOptions__eClass(self)
CreateDirOptions_swigregister = _VISHNU.CreateDirOptions_swigregister
CreateDirOptions_swigregister(CreateDirOptions)

class DirEntry(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DirEntry, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, DirEntry, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_DirEntry()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_DirEntry
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.DirEntry__initialize(self)
    def getPath(self): return _VISHNU.DirEntry_getPath(self)
    def setPath(self, *args): return _VISHNU.DirEntry_setPath(self, *args)
    def getOwner(self): return _VISHNU.DirEntry_getOwner(self)
    def setOwner(self, *args): return _VISHNU.DirEntry_setOwner(self, *args)
    def getGroup(self): return _VISHNU.DirEntry_getGroup(self)
    def setGroup(self, *args): return _VISHNU.DirEntry_setGroup(self, *args)
    def getPerms(self): return _VISHNU.DirEntry_getPerms(self)
    def setPerms(self, *args): return _VISHNU.DirEntry_setPerms(self, *args)
    def getSize(self): return _VISHNU.DirEntry_getSize(self)
    def setSize(self, *args): return _VISHNU.DirEntry_setSize(self, *args)
    def getCreationTime(self): return _VISHNU.DirEntry_getCreationTime(self)
    def setCreationTime(self, *args): return _VISHNU.DirEntry_setCreationTime(self, *args)
    def getType(self): return _VISHNU.DirEntry_getType(self)
    def setType(self, *args): return _VISHNU.DirEntry_setType(self, *args)
    def eGet(self, *args): return _VISHNU.DirEntry_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.DirEntry_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.DirEntry_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.DirEntry_eUnset(self, *args)
    def _eClass(self): return _VISHNU.DirEntry__eClass(self)
DirEntry_swigregister = _VISHNU.DirEntry_swigregister
DirEntry_swigregister(DirEntry)

class DirEntryList(EObject):
    __swig_setmethods__ = {}
    for _s in [EObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DirEntryList, name, value)
    __swig_getmethods__ = {}
    for _s in [EObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, DirEntryList, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _VISHNU.new_DirEntryList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_DirEntryList
    __del__ = lambda self : None;
    def _initialize(self): return _VISHNU.DirEntryList__initialize(self)
    def getDirEntries(self): return _VISHNU.DirEntryList_getDirEntries(self)
    def eGet(self, *args): return _VISHNU.DirEntryList_eGet(self, *args)
    def eSet(self, *args): return _VISHNU.DirEntryList_eSet(self, *args)
    def eIsSet(self, *args): return _VISHNU.DirEntryList_eIsSet(self, *args)
    def eUnset(self, *args): return _VISHNU.DirEntryList_eUnset(self, *args)
    def _eClass(self): return _VISHNU.DirEntryList__eClass(self)
DirEntryList_swigregister = _VISHNU.DirEntryList_swigregister
DirEntryList_swigregister(DirEntryList)

class EListPtr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EListPtr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EListPtr, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_EListPtr(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_EListPtr
    __del__ = lambda self : None;
    def get(self): return _VISHNU.EListPtr_get(self)
    def __ref__(self): return _VISHNU.EListPtr___ref__(self)
    def __deref__(self): return _VISHNU.EListPtr___deref__(self)
    def release(self): return _VISHNU.EListPtr_release(self)
    def reset(self, *args): return _VISHNU.EListPtr_reset(self, *args)
    def __nonzero__(self):
        return _VISHNU.EListPtr___nonzero__(self)
    __bool__ = __nonzero__


EListPtr_swigregister = _VISHNU.EListPtr_swigregister
EListPtr_swigregister(EListPtr)

class ESessionList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ESessionList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ESessionList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.ESessionList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.ESessionList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.ESessionList_at(self, *args)
    def get(self, *args): return _VISHNU.ESessionList_get(self, *args)
    def push_back(self, *args): return _VISHNU.ESessionList_push_back(self, *args)
    def size(self): return _VISHNU.ESessionList_size(self)
    def clear(self): return _VISHNU.ESessionList_clear(self)
    __swig_destroy__ = _VISHNU.delete_ESessionList
    __del__ = lambda self : None;
ESessionList_swigregister = _VISHNU.ESessionList_swigregister
ESessionList_swigregister(ESessionList)

class EUserList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EUserList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EUserList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EUserList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EUserList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EUserList_at(self, *args)
    def get(self, *args): return _VISHNU.EUserList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EUserList_push_back(self, *args)
    def size(self): return _VISHNU.EUserList_size(self)
    def clear(self): return _VISHNU.EUserList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EUserList
    __del__ = lambda self : None;
EUserList_swigregister = _VISHNU.EUserList_swigregister
EUserList_swigregister(EUserList)

class EMachineList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EMachineList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EMachineList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EMachineList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EMachineList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EMachineList_at(self, *args)
    def get(self, *args): return _VISHNU.EMachineList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EMachineList_push_back(self, *args)
    def size(self): return _VISHNU.EMachineList_size(self)
    def clear(self): return _VISHNU.EMachineList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EMachineList
    __del__ = lambda self : None;
EMachineList_swigregister = _VISHNU.EMachineList_swigregister
EMachineList_swigregister(EMachineList)

class ELocalAccList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ELocalAccList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ELocalAccList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.ELocalAccList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.ELocalAccList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.ELocalAccList_at(self, *args)
    def get(self, *args): return _VISHNU.ELocalAccList_get(self, *args)
    def push_back(self, *args): return _VISHNU.ELocalAccList_push_back(self, *args)
    def size(self): return _VISHNU.ELocalAccList_size(self)
    def clear(self): return _VISHNU.ELocalAccList_clear(self)
    __swig_destroy__ = _VISHNU.delete_ELocalAccList
    __del__ = lambda self : None;
ELocalAccList_swigregister = _VISHNU.ELocalAccList_swigregister
ELocalAccList_swigregister(ELocalAccList)

class ECommandList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ECommandList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ECommandList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.ECommandList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.ECommandList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.ECommandList_at(self, *args)
    def get(self, *args): return _VISHNU.ECommandList_get(self, *args)
    def push_back(self, *args): return _VISHNU.ECommandList_push_back(self, *args)
    def size(self): return _VISHNU.ECommandList_size(self)
    def clear(self): return _VISHNU.ECommandList_clear(self)
    __swig_destroy__ = _VISHNU.delete_ECommandList
    __del__ = lambda self : None;
ECommandList_swigregister = _VISHNU.ECommandList_swigregister
ECommandList_swigregister(ECommandList)

class EOptionList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EOptionList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EOptionList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EOptionList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EOptionList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EOptionList_at(self, *args)
    def get(self, *args): return _VISHNU.EOptionList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EOptionList_push_back(self, *args)
    def size(self): return _VISHNU.EOptionList_size(self)
    def clear(self): return _VISHNU.EOptionList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EOptionList
    __del__ = lambda self : None;
EOptionList_swigregister = _VISHNU.EOptionList_swigregister
EOptionList_swigregister(EOptionList)

class EAuthSystemList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EAuthSystemList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EAuthSystemList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EAuthSystemList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EAuthSystemList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EAuthSystemList_at(self, *args)
    def get(self, *args): return _VISHNU.EAuthSystemList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EAuthSystemList_push_back(self, *args)
    def size(self): return _VISHNU.EAuthSystemList_size(self)
    def clear(self): return _VISHNU.EAuthSystemList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EAuthSystemList
    __del__ = lambda self : None;
EAuthSystemList_swigregister = _VISHNU.EAuthSystemList_swigregister
EAuthSystemList_swigregister(EAuthSystemList)

class EAuthAccountList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EAuthAccountList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EAuthAccountList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EAuthAccountList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EAuthAccountList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EAuthAccountList_at(self, *args)
    def get(self, *args): return _VISHNU.EAuthAccountList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EAuthAccountList_push_back(self, *args)
    def size(self): return _VISHNU.EAuthAccountList_size(self)
    def clear(self): return _VISHNU.EAuthAccountList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EAuthAccountList
    __del__ = lambda self : None;
EAuthAccountList_swigregister = _VISHNU.EAuthAccountList_swigregister
EAuthAccountList_swigregister(EAuthAccountList)

class EJobList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EJobList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EJobList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EJobList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EJobList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EJobList_at(self, *args)
    def get(self, *args): return _VISHNU.EJobList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EJobList_push_back(self, *args)
    def size(self): return _VISHNU.EJobList_size(self)
    def clear(self): return _VISHNU.EJobList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EJobList
    __del__ = lambda self : None;
EJobList_swigregister = _VISHNU.EJobList_swigregister
EJobList_swigregister(EJobList)

class EProgressionList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EProgressionList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EProgressionList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EProgressionList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EProgressionList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EProgressionList_at(self, *args)
    def get(self, *args): return _VISHNU.EProgressionList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EProgressionList_push_back(self, *args)
    def size(self): return _VISHNU.EProgressionList_size(self)
    def clear(self): return _VISHNU.EProgressionList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EProgressionList
    __del__ = lambda self : None;
EProgressionList_swigregister = _VISHNU.EProgressionList_swigregister
EProgressionList_swigregister(EProgressionList)

class EQueueList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EQueueList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EQueueList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EQueueList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EQueueList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EQueueList_at(self, *args)
    def get(self, *args): return _VISHNU.EQueueList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EQueueList_push_back(self, *args)
    def size(self): return _VISHNU.EQueueList_size(self)
    def clear(self): return _VISHNU.EQueueList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EQueueList
    __del__ = lambda self : None;
EQueueList_swigregister = _VISHNU.EQueueList_swigregister
EQueueList_swigregister(EQueueList)

class EJobResultList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EJobResultList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EJobResultList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EJobResultList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EJobResultList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EJobResultList_at(self, *args)
    def get(self, *args): return _VISHNU.EJobResultList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EJobResultList_push_back(self, *args)
    def size(self): return _VISHNU.EJobResultList_size(self)
    def clear(self): return _VISHNU.EJobResultList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EJobResultList
    __del__ = lambda self : None;
EJobResultList_swigregister = _VISHNU.EJobResultList_swigregister
EJobResultList_swigregister(EJobResultList)

class EMetricList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EMetricList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EMetricList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EMetricList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EMetricList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EMetricList_at(self, *args)
    def get(self, *args): return _VISHNU.EMetricList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EMetricList_push_back(self, *args)
    def size(self): return _VISHNU.EMetricList_size(self)
    def clear(self): return _VISHNU.EMetricList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EMetricList
    __del__ = lambda self : None;
EMetricList_swigregister = _VISHNU.EMetricList_swigregister
EMetricList_swigregister(EMetricList)

class EProcessesList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EProcessesList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EProcessesList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EProcessesList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EProcessesList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EProcessesList_at(self, *args)
    def get(self, *args): return _VISHNU.EProcessesList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EProcessesList_push_back(self, *args)
    def size(self): return _VISHNU.EProcessesList_size(self)
    def clear(self): return _VISHNU.EProcessesList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EProcessesList
    __del__ = lambda self : None;
EProcessesList_swigregister = _VISHNU.EProcessesList_swigregister
EProcessesList_swigregister(EProcessesList)

class ESysInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ESysInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ESysInfoList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.ESysInfoList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.ESysInfoList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.ESysInfoList_at(self, *args)
    def get(self, *args): return _VISHNU.ESysInfoList_get(self, *args)
    def push_back(self, *args): return _VISHNU.ESysInfoList_push_back(self, *args)
    def size(self): return _VISHNU.ESysInfoList_size(self)
    def clear(self): return _VISHNU.ESysInfoList_clear(self)
    __swig_destroy__ = _VISHNU.delete_ESysInfoList
    __del__ = lambda self : None;
ESysInfoList_swigregister = _VISHNU.ESysInfoList_swigregister
ESysInfoList_swigregister(ESysInfoList)

class EThresholdList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EThresholdList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EThresholdList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EThresholdList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EThresholdList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EThresholdList_at(self, *args)
    def get(self, *args): return _VISHNU.EThresholdList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EThresholdList_push_back(self, *args)
    def size(self): return _VISHNU.EThresholdList_size(self)
    def clear(self): return _VISHNU.EThresholdList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EThresholdList
    __del__ = lambda self : None;
EThresholdList_swigregister = _VISHNU.EThresholdList_swigregister
EThresholdList_swigregister(EThresholdList)

class EFileTransferList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EFileTransferList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EFileTransferList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EFileTransferList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EFileTransferList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EFileTransferList_at(self, *args)
    def get(self, *args): return _VISHNU.EFileTransferList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EFileTransferList_push_back(self, *args)
    def size(self): return _VISHNU.EFileTransferList_size(self)
    def clear(self): return _VISHNU.EFileTransferList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EFileTransferList
    __del__ = lambda self : None;
EFileTransferList_swigregister = _VISHNU.EFileTransferList_swigregister
EFileTransferList_swigregister(EFileTransferList)

class EFileStatList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EFileStatList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EFileStatList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EFileStatList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EFileStatList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EFileStatList_at(self, *args)
    def get(self, *args): return _VISHNU.EFileStatList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EFileStatList_push_back(self, *args)
    def size(self): return _VISHNU.EFileStatList_size(self)
    def clear(self): return _VISHNU.EFileStatList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EFileStatList
    __del__ = lambda self : None;
EFileStatList_swigregister = _VISHNU.EFileStatList_swigregister
EFileStatList_swigregister(EFileStatList)

class EDirEntryList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EDirEntryList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EDirEntryList, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def insert_all(self, *args): return _VISHNU.EDirEntryList_insert_all(self, *args)
    def insert_at(self, *args): return _VISHNU.EDirEntryList_insert_at(self, *args)
    def at(self, *args): return _VISHNU.EDirEntryList_at(self, *args)
    def get(self, *args): return _VISHNU.EDirEntryList_get(self, *args)
    def push_back(self, *args): return _VISHNU.EDirEntryList_push_back(self, *args)
    def size(self): return _VISHNU.EDirEntryList_size(self)
    def clear(self): return _VISHNU.EDirEntryList_clear(self)
    __swig_destroy__ = _VISHNU.delete_EDirEntryList
    __del__ = lambda self : None;
EDirEntryList_swigregister = _VISHNU.EDirEntryList_swigregister
EDirEntryList_swigregister(EDirEntryList)


def close(*args):
  return _VISHNU.close(*args)
close = _VISHNU.close

def addUser(*args):
  return _VISHNU.addUser(*args)
addUser = _VISHNU.addUser

def updateUser(*args):
  return _VISHNU.updateUser(*args)
updateUser = _VISHNU.updateUser

def deleteUser(*args):
  return _VISHNU.deleteUser(*args)
deleteUser = _VISHNU.deleteUser

def changePassword(*args):
  return _VISHNU.changePassword(*args)
changePassword = _VISHNU.changePassword

def resetPassword(*args):
  return _VISHNU.resetPassword(*args)
resetPassword = _VISHNU.resetPassword

def addMachine(*args):
  return _VISHNU.addMachine(*args)
addMachine = _VISHNU.addMachine

def updateMachine(*args):
  return _VISHNU.updateMachine(*args)
updateMachine = _VISHNU.updateMachine

def deleteMachine(*args):
  return _VISHNU.deleteMachine(*args)
deleteMachine = _VISHNU.deleteMachine

def addLocalAccount(*args):
  return _VISHNU.addLocalAccount(*args)
addLocalAccount = _VISHNU.addLocalAccount

def updateLocalAccount(*args):
  return _VISHNU.updateLocalAccount(*args)
updateLocalAccount = _VISHNU.updateLocalAccount

def deleteLocalAccount(*args):
  return _VISHNU.deleteLocalAccount(*args)
deleteLocalAccount = _VISHNU.deleteLocalAccount

def saveConfiguration(*args):
  return _VISHNU.saveConfiguration(*args)
saveConfiguration = _VISHNU.saveConfiguration

def restoreConfiguration(*args):
  return _VISHNU.restoreConfiguration(*args)
restoreConfiguration = _VISHNU.restoreConfiguration

def configureOption(*args):
  return _VISHNU.configureOption(*args)
configureOption = _VISHNU.configureOption

def configureDefaultOption(*args):
  return _VISHNU.configureDefaultOption(*args)
configureDefaultOption = _VISHNU.configureDefaultOption

def addAuthSystem(*args):
  return _VISHNU.addAuthSystem(*args)
addAuthSystem = _VISHNU.addAuthSystem

def updateAuthSystem(*args):
  return _VISHNU.updateAuthSystem(*args)
updateAuthSystem = _VISHNU.updateAuthSystem

def deleteAuthSystem(*args):
  return _VISHNU.deleteAuthSystem(*args)
deleteAuthSystem = _VISHNU.deleteAuthSystem

def addAuthAccount(*args):
  return _VISHNU.addAuthAccount(*args)
addAuthAccount = _VISHNU.addAuthAccount

def updateAuthAccount(*args):
  return _VISHNU.updateAuthAccount(*args)
updateAuthAccount = _VISHNU.updateAuthAccount

def vishnuInitialize(*args):
  return _VISHNU.vishnuInitialize(*args)
vishnuInitialize = _VISHNU.vishnuInitialize

def vishnuFinalize():
  return _VISHNU.vishnuFinalize()
vishnuFinalize = _VISHNU.vishnuFinalize
class VishnuException(Exception):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VishnuException, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VishnuException, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    UMS = _VISHNU.VishnuException_UMS
    TMS = _VISHNU.VishnuException_TMS
    FMS = _VISHNU.VishnuException_FMS
    IMS = _VISHNU.VishnuException_IMS
    INTERNAL = _VISHNU.VishnuException_INTERNAL
    NONE = _VISHNU.VishnuException_NONE
    __swig_destroy__ = _VISHNU.delete_VishnuException
    __del__ = lambda self : None;
    def getTypeI(self): return _VISHNU.VishnuException_getTypeI(self)
    def getTypeS(self): return _VISHNU.VishnuException_getTypeS(self)
    def what(self): return _VISHNU.VishnuException_what(self)
    def getMsg(self): return _VISHNU.VishnuException_getMsg(self)
    def getMsgComp(self): return _VISHNU.VishnuException_getMsgComp(self)
    def setType(self, *args): return _VISHNU.VishnuException_setType(self, *args)
    def setMsgComp(self, *args): return _VISHNU.VishnuException_setMsgComp(self, *args)
    def setMsg(self, *args): return _VISHNU.VishnuException_setMsg(self, *args)
    def appendMsgComp(self, *args): return _VISHNU.VishnuException_appendMsgComp(self, *args)
    def getMsgI(self): return _VISHNU.VishnuException_getMsgI(self)
    def initMsg(self): return _VISHNU.VishnuException_initMsg(self)
    def buildExceptionString(self): return _VISHNU.VishnuException_buildExceptionString(self)
VishnuException_swigregister = _VISHNU.VishnuException_swigregister
VishnuException_swigregister(VishnuException)

def connect(*args):
  return _VISHNU.connect(*args)
connect = _VISHNU.connect

def reconnect(*args):
  return _VISHNU.reconnect(*args)
reconnect = _VISHNU.reconnect

def listSessions(*args):
  return _VISHNU.listSessions(*args)
listSessions = _VISHNU.listSessions

def listLocalAccounts(*args):
  return _VISHNU.listLocalAccounts(*args)
listLocalAccounts = _VISHNU.listLocalAccounts

def listMachines(*args):
  return _VISHNU.listMachines(*args)
listMachines = _VISHNU.listMachines

def listHistoryCmd(*args):
  return _VISHNU.listHistoryCmd(*args)
listHistoryCmd = _VISHNU.listHistoryCmd

def listOptions(*args):
  return _VISHNU.listOptions(*args)
listOptions = _VISHNU.listOptions

def listUsers(*args):
  return _VISHNU.listUsers(*args)
listUsers = _VISHNU.listUsers

def listAuthSystems(*args):
  return _VISHNU.listAuthSystems(*args)
listAuthSystems = _VISHNU.listAuthSystems

def deleteAuthAccount(*args):
  return _VISHNU.deleteAuthAccount(*args)
deleteAuthAccount = _VISHNU.deleteAuthAccount

def listAuthAccounts(*args):
  return _VISHNU.listAuthAccounts(*args)
listAuthAccounts = _VISHNU.listAuthAccounts
cvar = _VISHNU.cvar
VISHNU_OK = cvar.VISHNU_OK

class UserException(VishnuException):
    __swig_setmethods__ = {}
    for _s in [VishnuException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UserException, name, value)
    __swig_getmethods__ = {}
    for _s in [VishnuException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UserException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_UserException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_UserException
    __del__ = lambda self : None;
    def getTypeS(self): return _VISHNU.UserException_getTypeS(self)
    def getMsg(self): return _VISHNU.UserException_getMsg(self)
UserException_swigregister = _VISHNU.UserException_swigregister
UserException_swigregister(UserException)
ERRCODE_INVALID_PARAM = cvar.ERRCODE_INVALID_PARAM
ERRCODE_FILENOTFOUND = cvar.ERRCODE_FILENOTFOUND
ERRCODE_CONFIGNOTFOUND = cvar.ERRCODE_CONFIGNOTFOUND
ERRCODE_CLI_ERROR_NO_SESSION = cvar.ERRCODE_CLI_ERROR_NO_SESSION
ERRCODE_CLI_ERROR_MISSING_PARAMETER = cvar.ERRCODE_CLI_ERROR_MISSING_PARAMETER
ERRCODE_CLI_ERROR_DIET = cvar.ERRCODE_CLI_ERROR_DIET
ERRCODE_CLI_ERROR_RUNTIME = cvar.ERRCODE_CLI_ERROR_RUNTIME

class SystemException(VishnuException):
    __swig_setmethods__ = {}
    for _s in [VishnuException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SystemException, name, value)
    __swig_getmethods__ = {}
    for _s in [VishnuException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SystemException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_SystemException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_SystemException
    __del__ = lambda self : None;
    def getMsg(self): return _VISHNU.SystemException_getMsg(self)
    def getTypeS(self): return _VISHNU.SystemException_getTypeS(self)
    def initMsg(self): return _VISHNU.SystemException_initMsg(self)
SystemException_swigregister = _VISHNU.SystemException_swigregister
SystemException_swigregister(SystemException)
ERRCODE_AUTHENTERR = cvar.ERRCODE_AUTHENTERR
ERRCODE_DIET = cvar.ERRCODE_DIET
ERRCODE_DBERR = cvar.ERRCODE_DBERR
ERRCODE_DBCONN = cvar.ERRCODE_DBCONN
ERRCODE_SYSTEM = cvar.ERRCODE_SYSTEM
ERRCODE_INVCOMP = cvar.ERRCODE_INVCOMP
ERRCODE_INVMAPPER = cvar.ERRCODE_INVMAPPER
ERRCODE_INVEXCEP = cvar.ERRCODE_INVEXCEP
ERRCODE_INVDATA = cvar.ERRCODE_INVDATA
ERRCODE_SSH = cvar.ERRCODE_SSH

class UMSVishnuException(UserException):
    __swig_setmethods__ = {}
    for _s in [UserException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UMSVishnuException, name, value)
    __swig_getmethods__ = {}
    for _s in [UserException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UMSVishnuException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_UMSVishnuException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_UMSVishnuException
    __del__ = lambda self : None;
    def initMsg(self): return _VISHNU.UMSVishnuException_initMsg(self)
UMSVishnuException_swigregister = _VISHNU.UMSVishnuException_swigregister
UMSVishnuException_swigregister(UMSVishnuException)
ERRCODE_UNKNOWN_USER = cvar.ERRCODE_UNKNOWN_USER
ERRCODE_UNKNOWN_USERID = cvar.ERRCODE_UNKNOWN_USERID
ERRCODE_USERID_EXISTING = cvar.ERRCODE_USERID_EXISTING
ERRCODE_USER_LOCKED = cvar.ERRCODE_USER_LOCKED
ERRCODE_USER_ALREADY_LOCKED = cvar.ERRCODE_USER_ALREADY_LOCKED
ERRCODE_NO_ADMIN = cvar.ERRCODE_NO_ADMIN
ERRCODE_TEMPORARY_PASSWORD = cvar.ERRCODE_TEMPORARY_PASSWORD
ERRCODE_INVALID_MAIL_ADRESS = cvar.ERRCODE_INVALID_MAIL_ADRESS
ERRCODE_SESSIONKEY_NOT_FOUND = cvar.ERRCODE_SESSIONKEY_NOT_FOUND
ERRCODE_SESSIONKEY_EXPIRED = cvar.ERRCODE_SESSIONKEY_EXPIRED
ERRCODE_UNKNOWN_SESSION_ID = cvar.ERRCODE_UNKNOWN_SESSION_ID
ERRCODE_COMMAND_RUNNING = cvar.ERRCODE_COMMAND_RUNNING
ERRCODE_UNKNOWN_MACHINE = cvar.ERRCODE_UNKNOWN_MACHINE
ERRCODE_MACHINE_EXISTING = cvar.ERRCODE_MACHINE_EXISTING
ERRCODE_MACHINE_LOCKED = cvar.ERRCODE_MACHINE_LOCKED
ERRCODE_MACHINE_ALREADY_LOCKED = cvar.ERRCODE_MACHINE_ALREADY_LOCKED
ERRCODE_UNUSABLE_MACHINE = cvar.ERRCODE_UNUSABLE_MACHINE
ERRCODE_LOCAL_ACCOUNT_EXIST = cvar.ERRCODE_LOCAL_ACCOUNT_EXIST
ERRCODE_UNKNOWN_LOCAL_ACCOUNT = cvar.ERRCODE_UNKNOWN_LOCAL_ACCOUNT
ERRCODE_SAVE_CONFIG_ERROR = cvar.ERRCODE_SAVE_CONFIG_ERROR
ERRCODE_RESTORE_CONFIG_ERROR = cvar.ERRCODE_RESTORE_CONFIG_ERROR
ERRCODE_UNKNOWN_OPTION = cvar.ERRCODE_UNKNOWN_OPTION
ERRCODE_UNKNOWN_CLOSURE_MODE = cvar.ERRCODE_UNKNOWN_CLOSURE_MODE
ERRCODE_INCORRECT_TIMEOUT = cvar.ERRCODE_INCORRECT_TIMEOUT
ERRCODE_INCORRECT_TRANSFER_CMD = cvar.ERRCODE_INCORRECT_TRANSFER_CMD
ERRCODE_ROOT_USER_ONLY = cvar.ERRCODE_ROOT_USER_ONLY
ERRCODE_LOGIN_ALREADY_USED = cvar.ERRCODE_LOGIN_ALREADY_USED
ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE = cvar.ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE
ERRCODE_UNKNOWN_AUTH_SYSTEM = cvar.ERRCODE_UNKNOWN_AUTH_SYSTEM
ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED = cvar.ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED
ERRCODE_AUTH_SYSTEM_ALREADY_EXIST = cvar.ERRCODE_AUTH_SYSTEM_ALREADY_EXIST
ERRCODE_AUTH_ACCOUNT_EXIST = cvar.ERRCODE_AUTH_ACCOUNT_EXIST
ERRCODE_UNKNOWN_AUTH_ACCOUNT = cvar.ERRCODE_UNKNOWN_AUTH_ACCOUNT
ERRCODE_UNKNOWN_ENCRYPTION_METHOD = cvar.ERRCODE_UNKNOWN_ENCRYPTION_METHOD
ERRCODE_READONLY_ACCOUNT = cvar.ERRCODE_READONLY_ACCOUNT

class TMSVishnuException(UserException):
    __swig_setmethods__ = {}
    for _s in [UserException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TMSVishnuException, name, value)
    __swig_getmethods__ = {}
    for _s in [UserException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TMSVishnuException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_TMSVishnuException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_TMSVishnuException
    __del__ = lambda self : None;
    def initMsg(self): return _VISHNU.TMSVishnuException_initMsg(self)
TMSVishnuException_swigregister = _VISHNU.TMSVishnuException_swigregister
TMSVishnuException_swigregister(TMSVishnuException)
ERRCODE_UNKNOWN_BATCH_SCHEDULER = cvar.ERRCODE_UNKNOWN_BATCH_SCHEDULER
ERRCODE_BATCH_SCHEDULER_ERROR = cvar.ERRCODE_BATCH_SCHEDULER_ERROR
ERRCODE_UNKNOWN_JOBID = cvar.ERRCODE_UNKNOWN_JOBID
ERRCODE_PERMISSION_DENIED = cvar.ERRCODE_PERMISSION_DENIED
ERRCODE_ALREADY_TERMINATED = cvar.ERRCODE_ALREADY_TERMINATED
ERRCODE_ALREADY_CANCELED = cvar.ERRCODE_ALREADY_CANCELED
ERRCODE_JOB_IS_NOT_TERMINATED = cvar.ERRCODE_JOB_IS_NOT_TERMINATED
ERRCODE_ALREADY_DOWNLOADED = cvar.ERRCODE_ALREADY_DOWNLOADED

class IMSVishnuException(UserException):
    __swig_setmethods__ = {}
    for _s in [UserException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IMSVishnuException, name, value)
    __swig_getmethods__ = {}
    for _s in [UserException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IMSVishnuException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_IMSVishnuException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_IMSVishnuException
    __del__ = lambda self : None;
    def initMsg(self): return _VISHNU.IMSVishnuException_initMsg(self)
IMSVishnuException_swigregister = _VISHNU.IMSVishnuException_swigregister
IMSVishnuException_swigregister(IMSVishnuException)
ERRCODE_INVPROCESS = cvar.ERRCODE_INVPROCESS
ERRCODE_INVVISHNU = cvar.ERRCODE_INVVISHNU
ERRCODE_INVEXPORT = cvar.ERRCODE_INVEXPORT

class FMSVishnuException(UserException):
    __swig_setmethods__ = {}
    for _s in [UserException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FMSVishnuException, name, value)
    __swig_getmethods__ = {}
    for _s in [UserException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, FMSVishnuException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _VISHNU.new_FMSVishnuException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _VISHNU.delete_FMSVishnuException
    __del__ = lambda self : None;
    def initMsg(self): return _VISHNU.FMSVishnuException_initMsg(self)
FMSVishnuException_swigregister = _VISHNU.FMSVishnuException_swigregister
FMSVishnuException_swigregister(FMSVishnuException)
ERRCODE_INVALID_PATH = cvar.ERRCODE_INVALID_PATH
ERRCODE_RUNTIME_ERROR = cvar.ERRCODE_RUNTIME_ERROR
ERRCODE_UNKNOWN_FILETRANSFERID = cvar.ERRCODE_UNKNOWN_FILETRANSFERID


def cancelJob(*args):
  return _VISHNU.cancelJob(*args)
cancelJob = _VISHNU.cancelJob

def getJobInfo(*args):
  return _VISHNU.getJobInfo(*args)
getJobInfo = _VISHNU.getJobInfo

def exportCommands(*args):
  return _VISHNU.exportCommands(*args)
exportCommands = _VISHNU.exportCommands

def getMetricCurrentValue(*args):
  return _VISHNU.getMetricCurrentValue(*args)
getMetricCurrentValue = _VISHNU.getMetricCurrentValue

def getMetricHistory(*args):
  return _VISHNU.getMetricHistory(*args)
getMetricHistory = _VISHNU.getMetricHistory

def getProcesses(*args):
  return _VISHNU.getProcesses(*args)
getProcesses = _VISHNU.getProcesses

def setSystemInfo(*args):
  return _VISHNU.setSystemInfo(*args)
setSystemInfo = _VISHNU.setSystemInfo

def setSystemThreshold(*args):
  return _VISHNU.setSystemThreshold(*args)
setSystemThreshold = _VISHNU.setSystemThreshold

def getSystemThreshold(*args):
  return _VISHNU.getSystemThreshold(*args)
getSystemThreshold = _VISHNU.getSystemThreshold

def defineUserIdentifier(*args):
  return _VISHNU.defineUserIdentifier(*args)
defineUserIdentifier = _VISHNU.defineUserIdentifier

def defineMachineIdentifier(*args):
  return _VISHNU.defineMachineIdentifier(*args)
defineMachineIdentifier = _VISHNU.defineMachineIdentifier

def defineJobIdentifier(*args):
  return _VISHNU.defineJobIdentifier(*args)
defineJobIdentifier = _VISHNU.defineJobIdentifier

def defineTransferIdentifier(*args):
  return _VISHNU.defineTransferIdentifier(*args)
defineTransferIdentifier = _VISHNU.defineTransferIdentifier

def defineAuthIdentifier(*args):
  return _VISHNU.defineAuthIdentifier(*args)
defineAuthIdentifier = _VISHNU.defineAuthIdentifier

def loadShed(*args):
  return _VISHNU.loadShed(*args)
loadShed = _VISHNU.loadShed

def setUpdateFrequency(*args):
  return _VISHNU.setUpdateFrequency(*args)
setUpdateFrequency = _VISHNU.setUpdateFrequency

def getUpdateFrequency(*args):
  return _VISHNU.getUpdateFrequency(*args)
getUpdateFrequency = _VISHNU.getUpdateFrequency

def stop(*args):
  return _VISHNU.stop(*args)
stop = _VISHNU.stop

def getSystemInfo(*args):
  return _VISHNU.getSystemInfo(*args)
getSystemInfo = _VISHNU.getSystemInfo

def restart(*args):
  return _VISHNU.restart(*args)
restart = _VISHNU.restart

def createFile(*args):
  return _VISHNU.createFile(*args)
createFile = _VISHNU.createFile

def chGrp(*args):
  return _VISHNU.chGrp(*args)
chGrp = _VISHNU.chGrp

def chMod(*args):
  return _VISHNU.chMod(*args)
chMod = _VISHNU.chMod

def contentOfFile(*args):
  return _VISHNU.contentOfFile(*args)
contentOfFile = _VISHNU.contentOfFile

def removeDir(*args):
  return _VISHNU.removeDir(*args)
removeDir = _VISHNU.removeDir

def getFileInfo(*args):
  return _VISHNU.getFileInfo(*args)
getFileInfo = _VISHNU.getFileInfo


def submitJob(*args):
  return _VISHNU.submitJob(*args)
submitJob = _VISHNU.submitJob

def listJobs(*args):
  return _VISHNU.listJobs(*args)
listJobs = _VISHNU.listJobs

def getJobProgress(*args):
  return _VISHNU.getJobProgress(*args)
getJobProgress = _VISHNU.getJobProgress

def listQueues(*args):
  return _VISHNU.listQueues(*args)
listQueues = _VISHNU.listQueues

def getJobOutput(*args):
  return _VISHNU.getJobOutput(*args)
getJobOutput = _VISHNU.getJobOutput

def getCompletedJobsOutput(*args):
  return _VISHNU.getCompletedJobsOutput(*args)
getCompletedJobsOutput = _VISHNU.getCompletedJobsOutput

def copyFile(*args):
  return _VISHNU.copyFile(*args)
copyFile = _VISHNU.copyFile

def copyAsyncFile(*args):
  return _VISHNU.copyAsyncFile(*args)
copyAsyncFile = _VISHNU.copyAsyncFile

def headOfFile(*args):
  return _VISHNU.headOfFile(*args)
headOfFile = _VISHNU.headOfFile

def listDir(*args):
  return _VISHNU.listDir(*args)
listDir = _VISHNU.listDir

def createDir(*args):
  return _VISHNU.createDir(*args)
createDir = _VISHNU.createDir

def moveFile(*args):
  return _VISHNU.moveFile(*args)
moveFile = _VISHNU.moveFile

def moveAsyncFile(*args):
  return _VISHNU.moveAsyncFile(*args)
moveAsyncFile = _VISHNU.moveAsyncFile

def removeFile(*args):
  return _VISHNU.removeFile(*args)
removeFile = _VISHNU.removeFile

def tailOfFile(*args):
  return _VISHNU.tailOfFile(*args)
tailOfFile = _VISHNU.tailOfFile

def stopFileTransfer(*args):
  return _VISHNU.stopFileTransfer(*args)
stopFileTransfer = _VISHNU.stopFileTransfer

def listFileTransfers(*args):
  return _VISHNU.listFileTransfers(*args)
listFileTransfers = _VISHNU.listFileTransfers

