<?xml version="1.0" encoding="UTF-8"?>
<book label="UMS.apim#MAN(admin)+CPP(admin)+PYTHON(admin)" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">
<!--<book xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">-->
  <info>
    <title>VISHNU - Le guide de l'administrateur</title>
    <author>
      <personname><firstname>Benjamin</firstname><surname>Isnard</surname></personname>
    </author>
    <author>
      <personname><firstname>Daouda</firstname><surname>Traoré</surname></personname>
    </author>
    <author>
      <personname><firstname>Eugène</firstname><surname>Pamba Capo-Chichi</surname></personname>
    </author>
    <author>
      <personname><firstname>Kevin</firstname><surname>Coulomb</surname></personname>
    </author>
    <author>
      <personname><firstname>Ibrahima</firstname><surname>Cissé</surname></personname>
    </author>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>08/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>Version initiale pour le module UMS uniquement</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Présentation du document</title>
    <section>
      <title>Objectifs du document</title>
      <para>Ce document présente l'administration de la plateforme VISHNU.
      </para>  
    </section>
    
    <section> <!--Document structure -->
      <title>Structure du document</title>
      
      <para>Ce document est divisé en quatre parties :
      </para>
      <para>
	<itemizedlist>
          <listitem>
            <para>Définitions</para>
          </listitem>  
	  <listitem>
            <para>L'installation</para>
          </listitem>
	  <listitem>
	    <para>Déploiement</para>
	  </listitem>
          <listitem>
            <para>L'administration</para>
          </listitem>
	</itemizedlist>
      </para> 
    </section> <!--Document structure -->
  </chapter>
  
  <chapter> <!--Définition -->  
    <title>Définitions</title> 
    <section> <!-- Accronymes -->
      <title>Acronymes</title> 
	<itemizedlist>
	  <listitem>
	    <para>DB : Base de données. Elle est centralisée et utilisée pour sauvegarder toutes les données manipulées
	      par le module UMS. Cette base de données sera considérée comme étant de type PostgreSQL dans ce document.</para>
	  </listitem>
	  <listitem>
	    <para> MA : Le 'Master Agent', élément de Sysfera-DS distribuant les requêtes entre les clients et les services désirés.</para>
	  </listitem>
	  <listitem>
	    <para>SQL : Langage de requêtes sur les bases de données</para>
	  </listitem>
	</itemizedlist>
   </section> <!-- Accronymes -->
   <section>
     <title>Références</title>
     <itemizedlist>
          <listitem>
            <para>[ARCH] D1.1g-VISHNU Technical Architecture : description de l'architecture de l'application VISHNU</para>
          </listitem>
          <listitem>
            <para>[DIET_USERGUIDE] DIET User Guide : guide de l'utilisateur DIET (nom du projet OpenSource de l'application SysFera-DS</para>
          </listitem>
          <listitem>
            <para>[VISHNU_USERGUIDE] VISHNU User Guide: guide de l'utilisateur VISHNU.</para>
          </listitem>
        </itemizedlist>
   </section>
    <section> <!-- Glossaire -->
      <title>Glossaire</title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>Client UMS : Cela désigne les classes intermédiaires permettant un accès à distance aux services du SeD UMS. </para>
	  </listitem>
	  <listitem>
	    <para>Préfrontale : Cela désigne une machine mise avant la(les) frontale(s) des calculateurs. </para>
	  </listitem>
	  <listitem>
	    <para>SeD UMS : Cela désigne le programme contenant et exécutant les services du module UMS. 
	      Une seule instance est nécessaire pour faire tourner VISHNU. </para>
	  </listitem>
	  <listitem>
	    <para>Sysfera-DS : Middleware open source développé par SysFera. </para>
	  </listitem>
          <listitem>
            <para>Se référer au glossaire du document [ARCH] pour des définitions additionelles.</para>
            </listitem>
	</itemizedlist>
      </para>
    </section>  <!-- Glossaire -->
  </chapter><!-- end Definition -->
  <chapter> 
    <title>Installation (à partir des sources)</title>
    <section>
      <title>Prérequis</title>
      <itemizedlist>
	<listitem>
	  <para>GCC version 4.4.3 minimum</para>
	</listitem>
	<listitem>
	  <para>CMAKE version 2.6 minimum</para>
	</listitem>
	<listitem>
	  <para>BOOST version 1.45 minimum</para>
	</listitem>
	<listitem>
	  <para>OMNIORB version 4.1.4</para>
	</listitem>
	<listitem>
	  <para>PGSQL-API (api PostGreSQL) version 8.0 minimum</para>
	</listitem>
	<listitem>
	  <para>libcrypt</para>
	</listitem>
	<listitem>
	  <para>SWIG 1.3 (SWIG 2 n'est pas compatible)</para>
	</listitem>
	<listitem>
	  <para>SSH</para>
	</listitem>
	<listitem>
	  <para>Sysfera-DS (DIET uniquement pour l'instant, version 2.7 minimum)</para>
	</listitem>
	<listitem>
	  <para>JAVA version 1.6  (Option)</para>
	</listitem>
	<listitem>
	  <para>Python au moins 2.5 (Option)</para>
	</listitem>
      </itemizedlist>
    </section><!-- end prerequis -->
    <section>
      <title> Compilation des sources </title>
      <para>Vishnu utilise CMake comme système de construction et se conforme aux 
pratiques communèment admises.
	Il y a quatre options principales utilisables :
	<itemizedlist>
	  <listitem>
	    <para>
	      CLIENT_ONLY, qui permet de ne compiler que les éléments clients si le flag est activé (OFF par défaut). 
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      ENABLE_PYTHON, qui permet d'activer la compilation du code PYTHON (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      ENABLE_JAVA, qui permet d'activer la compilation des sources JAVA pour les webs services (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      CMAKE_INSTALL_PREFIX, répertoire d'installation (/usr/local par défaut sur les plateformes *nix)
	    </para>
	  </listitem>
        </itemizedlist></para>
        <para>
Par exemple, pour compiler Vishnu (clients et serveurs) avec l'API 
  Python puis l'installer dans le répertoire /opt/vishnu sous *nix:</para>
<itemizedlist>
  <listitem><para>1. créer un répertoire build à la racine du projet et se placer dedans</para></listitem>
<listitem><para>$ mkdir build</para></listitem>
<listitem><para>$ cd build</para></listitem>
<listitem><para>2. générer le Makefile</para></listitem>
<listitem><para>$ cmake -DENABLE_PYTHON=ON -DCMAKE_INSTALL_PREFIX=ON</para></listitem>
<listitem><para>3. lancer la compilation avec 2 jobs</para></listitem>
<listitem><para>$ make -j 2</para></listitem>
<listitem><para>4. installation (en mode super-utilisateur)</para></listitem>
<listitem><para># make install</para></listitem>
</itemizedlist>
<para><emphasis role="bold">Note</emphasis>: pensez à ajouter le répertoire d'installation dans le $PATH 
  utilisateur pour avoir accès à la commande.</para>

    </section> <!-- End compilation des sources -->
  </chapter> <!-- End compilation -->
  <chapter>
    <title>Déploiement de VISHNU</title>
    <section>
      <title>Lancement des serveurs </title>
      <para>Le module UMS peut être lancé soit manuellement, soit en utilisant l'outil GoDIET : un logiciel de lancement pour Sysfera-DS depuis une machine d'administration.</para>
      <para><emphasis role="bold">NOTE: l'outil GoDIET sera disponible lors de la livraison finale du projet VISHNU</emphasis></para>
      <para>Pour mieux comprendre l'architecture de déploiement, se référer au document [ARCH], le chapitre 4, 'Technical Architecture'.</para>
      <orderedlist>
	<listitem>
	  <para> Avoir une base de données PostGreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
	</listitem>
	<listitem>
	  <para> Lancer le service de nommage CORBA sur la machine préfrontale. La commande est 'omniNames -start' pour la première fois, sinon 'omniNames' suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
	</listitem>
	<listitem>
	  <para> Lancer le MA avec son fichier de configuration sur la machine préfrontale : 'dietAgent config.cfg'. Le fichier de configuration peut contenir les 3 lignes suivantes :
	    <itemizedlist>
	      <listitem>
		<para> 'traceLevel = 1' : Le niveau de verbosité du master agent, cette valeur peut être entre 1 et 10 compris. </para>
	      </listitem>
	      <listitem>
		<para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
	      </listitem>
	      <listitem>
		<para> 'name = MA0' : Le nom que l'on veut donner à l'agent.</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Lancer le SeD UMS sur la préfrontale. Un exemple de commande de lancement est : './umssed ~/myClient_server/mathOp/SeD.cfg 1 pg localhost vishnu_user vishnu_user ~/Bureau/sendmail.py'
	    <itemizedlist>
	      <listitem>
		<para>
		  '~/myClient_server/mathOp/SeD.cfg' : le chemin jusqu'au fichier de configuration du SeD. Ce fichier peut par exemple contenir les 2 lignes suivantes :
		  <itemizedlist>
		    <listitem>
		      <para>'traceLevel = 10' : Le niveau de verbosité du SeD UMS, ce niveau peut être entre 1 et 10 compris.</para>
		    </listitem>
		    <listitem>
		      <para> 'parentName = MA0' : Le nom du MA auquel le SeD UMS doit se lier. Ce doit être exactement le même nom que celui donné au même dans le champs 'name' du MA en question.</para>
		    </listitem>
		  </itemizedlist>
		</para>
	      </listitem>
	      <listitem>
		<para> '1' : L'id de VISHNU à utiliser dans la DB, une seule est utilisable actuellement .</para>
	      </listitem>
	      <listitem>
		<para> 'pg' : Pour utiliser une base postgrel. Actuellement la base oracle n'est pas utilisable.</para>
	      </listitem>
	      <listitem>
		<para>
		  'localhost' : La DB à utiliser.
		</para>
	      </listitem>
	      <listitem>
		<para> 'vishnu_user' (le premier) : Le nom d'utilisateur pour se connecter à la DB.</para>
	      </listitem>
	      <listitem>
		<para> 'vishnu_user' (le second) : Le mot de passe pour se connecter à la DB.</para>
	      </listitem>
	      <listitem>
		<para> '~/Bureau/sendmail.py' : Le script à utiliser pour envoyer les mails. Il sera fourni avec le module UMS.</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Le module UMS de VISHNU est prêt à être utilisé. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen de clients UMS.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Test d'exécution d'un service depuis une machine client par shell</title>
      <orderedlist>
	<listitem>
	  <para>
	    Une fois que la plateforme a été installée, se mettre sur un poste client avec VISHNU d'installé. Se référer au document [VISHNU_USERGUIDE]
	    pour l'installation de la partie client.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Exporter la variable d'environnement VISHNU_CONFIG_FILE dans un script de configuration client. Se référer 
	    au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu d'un fichier client.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Lancer la commande dans le shell 'vishnu_connect user', ou user représente un nom d'utilisateur dans la DB
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Taper le mot de passe 'password', correspondant à l'utilisateur 'user'
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Sur le client, un affichage doit signaler que le service a réussi. Dans le terminal ou le SeD UMS a été lancé et dans le terminal ou le MA tourne, selon le niveau de verbosité, plus ou moins d'informations, concernant le service effectué, doivent apparaitre.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Fermer la session avec 'vishnu_close'. Aucune erreur ne doit être remontée lors de ces tests.
	  </para>
	</listitem>
      </orderedlist>
    </section>
  </chapter><!-- End lancement  -->
  <chapter>
    <title>Administration</title>
    <section>
      <title>Présentation</title>
      <para>
	Le module UMS correspond à la gestion des utilisateurs et des machines de VISHNU. Il permet aussi de sauvegarder la configuration de VISHNU à chaud et de la restaurer si besoin est. 
        Dans toute la suite du chapitre, on supposera que l'utilisateur est déjà connecté avec un compte administrateur de VISHNU pour pouvoir réaliser ces manipulations. De plus, on présentera l'utilisation des commandes depuis le shell, mais cela reste valable depuis les API Python ou C++.
      </para>
    </section>
    <section>
      <title>Gestion des utilisateurs</title>
      <orderedlist>
	<listitem>
	  <para>
	    L'ajout d'un utilisateur se fait à l'aide de la commande 'vishnu_add_user'. Elle prend en paramètre le prénom de l'utilisateur, son nom de famille, les droits qui lui sont associés dans VISHNU (administrateur ou simple utilisateur) et son adresse de couriel. Tout ces paramètres sont obligatoires. Un privilège à 1 signifie administrateur, un privilège à 0 signifie un utilisateur. L'identifiant de l'utilisateur est généré et renvoyé.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    La mise à jour d'un utilisateur ne peut être faite que par un administrateur. Cette mise à jour se fait avec un appel à la commande 'vishnu_update_user' et permet de modifier les paramètres de l'ajout (nom, prénom, statut, couriel). 
            Il faut avoir l'identifiant de l'utilisateur (généré lors de la création de l'utilisateur) pour le désigner lors de la mise à jour.
	  </para>
          <para>Note: le changement du statut d'un utilisateur à l'état "INACTIVE" correspond à un blocage de son compte.</para>
	</listitem>
	<listitem>
	  <para>
	    La suppression d'un utilisateur efface toutes les informations liées à l'utilisateur de la base de donnée. Cette suppression se fait à l'aide de la commande 'vishnu_delete_user'.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    La liste des utilisateurs ne peut être faite que par un administrateur. Cela se fait avec la commande 'vishnu_list_user'. Cette commande peut prendre en paramètre l'identifiant d'un utilisateur pour n'avoir les informations que concernant cet utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Seul un administrateur peut réinitialiser le mot de passe d'un utilisateur de VISHNU. Pour ce faire, il doit appeller la commande 'vishnu_reset_password'  en fournissant l'identifiant de l'utilisateur dont l'administrateur veut réinitialiser le mot de passe. Le nouveau mot de passe est temporaire et renvoyé par la commande. Lors de la prochaine connexion, l'utilisateur devra changer son mot de passe avec 'vishnu_change_password'.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des machines</title>
      <orderedlist>
	<listitem>
	  <para>L'ajout d'une machine se fait à l'aide de la commande 'vishnu_add_machine'. Cette commande prend en paramètre le nom de la machine, le site ou elle se trouve, le language de la description qui sera donnée pour la machine, le fichier contenant la clé publique et la description. Ces paramètres sont obligatoires, en passant par le shell, la description n'a pas besoin d'être fournie en paramètre mais elle est alors demandée à l'administrateur avant d'ajouter la machine. A la fin de l'ajout, l'identifiant généré pour la machine est renvoyé.</para>
	</listitem>
	<listitem>
	  <para>
	    La mise à jour d'une machine se fait à l'aide de la commande 'vishnu_update_machine' et permet de modifier les paramètres mis lors de l'ajout de la machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
	  </para>
          <para>Note: le changement du statut d'une machine à l'état "INACTIVE" correspond à un blocage de la machine. Cela rend la machine inaccessible aux utilisateurs de VISHNU mais toujours visible pour les administrateurs.</para>
	</listitem>
	<listitem>
	  <para>
	    La suppression d'une machine se fait à l'aide de la commande 'vishnu_delete_machine' avec l'identifiant de la machine à supprimer. Cela supprime la machine de la base de données, ainsi que toutes les informations qui y sont attachées (Attention: cette commande est irréversible).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Les utilisateurs peuvent lister les machines, mais un administrateur a en plus une option qui est l'identifiant d'un utilisateur. Ceci lui permet de lister les machines sur lesquelles l'utilisateur a un compte VISHNU.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion de la plateforme</title>
      <orderedlist>
	<listitem>
	  <para>
	    L'administrateur peut faire une sauvegarde à chaud à un moment donné de VISHNU. Ceci sauvegarde les utilisateurs, les machines et les comptes des utilisateurs. Le fichier, dans lequel la configuration est, est retourné par la fonction. La fonction est 'vishnu_save_configuration', pas besoin de paramètres. 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    L'administrateur peut recharger une configuration précédente de VISHNU à l'aide de la commande 'vishnu_restore_configuration' qui a besoin du fichier de sauvegarde pour recharger la base. 
            Avant de pouvoir lancer cette restauration, tous les utilisateurs de VISHNU doivent être déconnectés.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Un administrateur peut également définir les valeurs par défaut des options de VISHNU pour tout les utilisateurs (ces options sont le temps de déconnexion par défaut et le type de fermeture d'une session par défaut). Cela se fait en appellant 'vishnu_configure_default_option' en donnant le nom de l'option et sa nouvelle valeur.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Options propres à l'administrateur dans les commandes utilisateurs</title>
      <orderedlist>
	<listitem>
	  <para>Dans la fonction 'vishnu_connect', un administrateur peut donner l'identifiant d'un utilisateur pour se connecter sous le nom de cet utilisateur dans VISHNU.</para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_history_cmd', l'administrateur peut lister toutes les commandes de tout les utilisateurs ou les commandes d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_local_accounts', l'administrateur peut lister toutes les comptes de tout les utilisateurs ou les comptes d'un utilisateur particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_options', l'administrateur peut lister les toutes les options de tout les utilisateurs ou les options d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_sessions', l'administrateur peut lister les toutes les session de tout les utilisateurs ou les sessions d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou les sessions sur une machine particulière en fournissant l'identifiant de la machine.
	  </para>
	</listitem>
      </orderedlist>
    </section>
  </chapter><!-- End administration -->  
</book>

