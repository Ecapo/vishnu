<?xml version="1.0" encoding="UTF-8"?>
<book label="UMS.apim#MAN(admin);UMS.apim#CPP(admin);UMS.apim#PYTHON(admin);FMS.apim#MAN(admin);FMS.apim#CPP(admin);FMS.apim#PYTHON(admin);IMS.apim#MAN(admin);IMS.apim#CPP(admin);IMS.apim#PYTHON(admin)" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">
  <!--<book xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">-->
  <info>
    <title>VISHNU - Le guide de l'administrateur</title>
    <author>
      <personname><firstname>Benjamin</firstname><surname>Isnard</surname></personname>
    </author>
    <author>
      <personname><firstname>Daouda</firstname><surname>Traoré</surname></personname>
    </author>
    <author>
      <personname><firstname>Eugène</firstname><surname>Pamba Capo-Chichi</surname></personname>
    </author>
    <author>
      <personname><firstname>Kevin</firstname><surname>Coulomb</surname></personname>
    </author>
    <author>
      <personname><firstname>Ibrahima</firstname><surname>Cissé</surname></personname>
    </author>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>08/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>Version initiale pour le module UMS uniquement</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>2</revnumber>
        <date>18/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>Ajout du lancement manuel avec forwarder et d'image de fichiers de configuration exemple</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>3</revnumber>
        <date>22/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>Ajout des web services</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>4</revnumber>
        <date>11/05/2011</date>
        <authorinitials>K. COULOMB, B.ISNARD</authorinitials>
        <revdescription>
          <para>Réécriture du lancement avec fichier de configuration.</para>
          <para>Ajout d'un paragraphe pour le sendmail.</para>
          <para>Ajout de l'administration de TMS.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>5</revnumber>
        <date>18/05/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          <para>Ajout du parametre de configuration dbConnectionsNb.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>6</revnumber>
        <date>10/06/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          <para>Documentation pour IMS.</para>
        </revdescription>
      </revision>
   <revision>
        <revnumber>7</revnumber>
        <date>15/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          <para>Documentation pour FMS.</para>
        </revdescription>
      </revision>
    <revision>
        <revnumber>8</revnumber>
        <date>22/06/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          <para>Ajout de l'option ENABLE_SWIG.</para>
        </revdescription>
      </revision>
      
      <revision>
        <revnumber>9</revnumber>
        <date>24/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          <para>Ajout de l'option vishnuMachineId dans les fichiers de
            configuration de UMS, IMS et FMS .</para>
        </revdescription>
      </revision>

    </revhistory>
  </info>
  <chapter>
    <title>Présentation du document</title>
    <section>
      <title>Objectifs du document</title>
      <para>Ce document présente l'administration de la plateforme VISHNU.
      </para>
    </section>

    <section> <!--Document structure -->
      <title>Structure du document</title>

      <para>Ce document contient les parties suivantes:
      </para>
      <para>
	<itemizedlist>
          <listitem>
            <para>Définitions</para>
          </listitem>
	  <listitem>
            <para>Installation</para>
          </listitem>
	  <listitem>
            <para>Installation des web services</para>
          </listitem>
	  <listitem>
	    <para>Déploiement</para>
	  </listitem>
          <listitem>
            <para>Administration</para>
          </listitem>
	  <listitem>
            <para>Référence des commandes (en anglais)</para>
          </listitem>
	  <listitem>
            <para>Référence de l'API C++ (en anglais)</para>
          </listitem>
	  <listitem>
            <para>Référence de l'API Python (en anglais)</para>
          </listitem>
	</itemizedlist>
      </para>
    </section> <!--Document structure -->
  </chapter>

  <chapter> <!--Définition -->
    <title>Définitions</title>
    <section> <!-- Accronymes -->
      <title>Acronymes</title>
      <itemizedlist>
	<listitem>
	  <para>DB : Base de données: elle est centralisée et utilisée pour sauvegarder toutes les données manipulées
	    par le module UMS. Cette base de données sera considérée comme étant de type PostgreSQL dans ce document.</para>
	</listitem>
	<listitem>
	  <para>FMS : File Management Service</para>
	</listitem>
	<listitem>
	  <para>IMS : Information Management Service</para>
	</listitem>
	<listitem>
	  <para> MA : "Master Agent": élément de Sysfera-DS distribuant les requêtes entre les clients et les services désirés.</para>
	</listitem>
	<listitem>
	  <para>SQL : Langage de requêtes sur les bases de données</para>
	</listitem>
	<listitem>
	  <para>TMS : Task Management Service</para>
	</listitem>
	<listitem>
	  <para>UMS : User Management Service</para>
	</listitem>
	<listitem>
	  <para>WS : Web Services</para>
	</listitem>
      </itemizedlist>
    </section> <!-- Accronymes -->
    <section>
      <title>Références</title>
      <itemizedlist>
        <listitem>
          <para>[ARCH] D1.1g-VISHNU Technical Architecture : description de l'architecture de l'application VISHNU</para>
        </listitem>
        <listitem>
          <para>[DIET_USERGUIDE] DIET User Guide : guide de l'utilisateur DIET (nom du projet OpenSource de l'application SysFera-DS)</para>
        </listitem>
        <listitem>
          <para>[VISHNU_USERGUIDE] VISHNU User Guide : guide de l'utilisateur VISHNU.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section> <!-- Glossaire -->
      <title>Glossaire</title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>Client FMS : Cela désigne les classes intermédiaires permettant un accès à distance aux services du SeD FMS. </para>
	  </listitem>
	  <listitem>
	    <para>Client IMS : Cela désigne les classes intermédiaires permettant un accès à distance aux services du SeD IMS. </para>
	  </listitem>
	  <listitem>
	    <para>Client TMS : Cela désigne les classes intermédiaires permettant un accès à distance aux services du SeD TMS. </para>
	  </listitem>
	  <listitem>
	    <para>Client UMS : Cela désigne les classes intermédiaires permettant un accès à distance aux services du SeD UMS. </para>
	  </listitem>
	  <listitem>
	    <para>Préfrontale : Cela désigne une machine mise avant la(les) frontale(s) des calculateurs. </para>
	  </listitem>
	  <listitem>
	    <para>SeD IMS : Cela désigne le programme contenant et exécutant les services du module IMS. </para>
	  </listitem>
	  <listitem>
	    <para>SeD TMS : Cela désigne le programme contenant et exécutant les services du module TMS. </para>
	  </listitem>
	  <listitem>
	    <para>SeD UMS : Cela désigne le programme contenant et exécutant les services du module UMS.
	      Une seule instance est nécessaire pour faire tourner VISHNU. </para>
	  </listitem>
	  <listitem>
	    <para>Sysfera-DS : Middleware open source développé par SysFera. </para>
	  </listitem>
          <listitem>
            <para>Se référer au glossaire du document [ARCH] pour des définitions additionnelles.</para>
          </listitem>
	</itemizedlist>
      </para>
    </section>  <!-- Glossaire -->
  </chapter><!-- end Definition -->
  <chapter>
    <title>Installation à partir des sources</title>
    <section>
      <title>Prérequis</title>
      <para>Les logiciels suivants doivent être installés sur le système, avec les fichiers de développement (paquets -dev):</para>
      <itemizedlist>
        <listitem>
          <para>Dépendances requises pour tous les modules VISHNU:</para>
          <itemizedlist>
            <listitem>
              <para>GCC version 4.4.3 minimum</para>
            </listitem>
            <listitem>
              <para>CMAKE version 2.6 minimum</para>
            </listitem>
            <listitem>
              <para>BOOST version 1.45 minimum</para>
            </listitem>
            <listitem>
              <para>OMNIORB version 4.1.4</para>
            </listitem>
            <listitem>
              <para>PGSQL-API (api PostGreSQL) version 8.0 minimum</para>
            </listitem>
            <listitem>
              <para>libcrypt</para>
            </listitem>
            <listitem>
              <para>SSH</para>
            </listitem>
            <listitem>
              <para>Sysfera-DS (DIET version 2.7 minimum + le module log service associé)</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Dépendances requises pour le module TMS:</para>
          <itemizedlist>
            <listitem>
              <para>Torque API v3.2.6</para>
            </listitem>
            <listitem>
              <para>ou IBM LoadLeveler API</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Dépendances optionnelles:</para>
          <itemizedlist>
            <listitem>
              <para>SWIG 1.3.40 (SWIG 2 n'est pas compatible)</para>
            </listitem>
            <listitem>
              <para>JAVA SDK version 1.6</para>
            </listitem>
            <listitem>
              <para>Python version 2.x x>=5</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section><!-- end prerequis -->
    <section>
      <title> Compilation des sources </title>
      <para>VISHNU utilise CMake comme système de construction et se conforme aux
	pratiques communément admises.
	Les options principales utilisables sont les suivantes:
	<itemizedlist>
	  <listitem>
	    <para>
	      BUILD_TESTING, compile les tests si le flag est activé (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      CLIENT_ONLY, qui permet de ne compiler que les éléments clients si le flag est activé (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      CMAKE_INSTALL_PREFIX, répertoire d'installation (/usr/local par défaut sur les plateformes *nix)
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      COMPILE_TMS, compile le module TMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS doit aussi être à ON et
              l'une des options VISHNU_USE_TORQUE ou VISHNU_USE_LOADLEVELER doit être à ON.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      COMPILE_IMS, compile le module IMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS, COMPILE_TMS et
	      COMPILE_FMS doivent aussi être à ON.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      COMPILE_FMS, compile le module FMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS doit aussi être à ON.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      COMPILE_UMS, compile le module UMS si le flag est activé (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      ENABLE_PYTHON, qui permet d'activer la compilation du code PYTHON (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      ENABLE_JAVA, qui permet d'activer la compilation des sources JAVA pour les web services (OFF par défaut).
	    </para>
	  </listitem>
    <listitem>
      <para>
        ENABLE_SWIG, qui permet d'activer la generation du code des adapteurs Python et Java (OFF par défaut). Cette option doit obligatoirement être activée si on choisit de ne pas compiler tous les modules VISHNU c'est-à-dire si au moins l'une des options COMPILE_UMS, COMPILE_TMS, COMPILE_FMS ou COMPILE_IMS est à OFF. Si l'option ENABLE_SWIG est activée, le package SWIG (voir paragraphe 'Prérequis') est nécessaire pour compiler.
      </para>
    </listitem>
	  <listitem>
	    <para>
	      VISHNU_USE_LOADLEVELER, compile le SeD TMS pour load leveler (OFF par défaut).
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      VISHNU_USE_TORQUE, compile le SeD TMS pour torque (OFF par défaut).
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	Par exemple, pour compiler VISHNU (clients et serveurs) avec l'API
	Python puis l'installer dans le répertoire /opt/vishnu sous *nix:
      </para>
      <itemizedlist>
	<listitem><para>1. créer un répertoire build à la racine du projet et se placer dedans</para></listitem>
	<listitem><para>$ mkdir build</para></listitem>
	<listitem><para>$ cd build</para></listitem>
	<listitem><para>2. générer le Makefile</para></listitem>
	<listitem><para>$ cmake -DENABLE_PYTHON=ON -DENABLE_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/vishnu/
	    -DCOMPILE_UMS=ON -DCOMPILE_TMS=ON -DVISHNU_USE_TORQUE=0N -DTORQUE_DIR=/opt/torque ..</para></listitem>
	<listitem><para>3. lancer la compilation avec 2 jobs</para></listitem>
	<listitem><para>$ make -j 2</para></listitem>
	<listitem><para>4. installation (en mode super-utilisateur)</para></listitem>
	<listitem><para># make install</para></listitem>
      </itemizedlist>
      <para><emphasis role="bold">Note</emphasis>: pensez à ajouter le répertoire d'installation dans le $PATH
	utilisateur pour avoir accès à la commande.</para>

    </section> <!-- End compilation des sources -->
  </chapter> <!-- End compilation -->

  <chapter>
    <title>Configuration de la base de données</title>
    <para>Les fichiers de configuration de la DB sont disponibles dans le répertoire core/database du package d'installation VISHNU.</para>
    <section>
      <title>Utilisation d'une base de données PostGreSQL</title>
      <para>Pour une installation d'une nouvelle base de données, les scripts 'postgre_create.sql' et 'database_init.sql' doivent être utilisés par l'administrateur de la DB.</para>
      <para>Pour la mise à jour de la base de données lors d'un passage de la release VISHNU précédente à la nouvelle release VISHNU, les scripts 'postgre_update.sql' et 'database_update.sql' doivent être utilisés par l'administrateur de la DB. Le détail des numéros de release est indiqué dans les commentaires au début du script.</para>
    </section>
    <section>
      <title>Utilisation d'une base de données MySQL</title>
      <para>Pour une installation d'une nouvelle base de données, les scripts 'mysql_create.sql' et 'database_init.sql' doivent être utilisés par l'administrateur de la DB.</para>
      <para>Pour la mise à jour de la base de données lors d'un passage de la release VISHNU précédente à la nouvelle release VISHNU, les scripts 'postgre_update.sql' et 'mysql_update.sql' doivent être utilisés par l'administrateur de la DB. Le détail des numéros de release est indiqué dans les commentaires au début du script.</para>
    </section>
  </chapter>

  <chapter>
    <title>Installation des web services</title>
    <section>
      <title>Pré-requis</title>
      <itemizedlist>
        <listitem>
          <para>Installer <emphasis role="bold">Java 1.6</emphasis> (commande 'sudo apt-get install openjdk-6-jdk' ou bien 'sudo apt-get install sun-java6-jdk' sur Linux Debian)
            et vérifier que la variable JAVA_HOME est bien définie et contient le répertoire racine de l'installation de java.</para>
        </listitem>
	<listitem>
	  <para>Installer les modules désirés avec l'option -DENABLE_JAVA=ON.</para>
	</listitem>
        <listitem>
          <para>Installer <emphasis role="bold">Maven 2</emphasis> pour compiler les jars ( <emphasis role="bold">Note</emphasis> :
            Ce pré-requis est optionnel car les jars sont déjà fournis dans la distribution des web services.
            Par ailleurs la compilation avec maven nécessite une connexion internet).</para>
        </listitem>
      </itemizedlist>

    </section><!-- end prerequis -->
    <section>
      <title>Installation de JBoss</title>
      <itemizedlist>
	<listitem>
	  <para>Télécharger le package JBOSSAS : (la version binaire est disponible) sur http://www.jboss.org/jbossas/downloads => version 5.1.0.GA</para>
	</listitem>
	<listitem>
	  <para>Télécharger le package JBOSSWS : (la version binaire est disponible) sur http://www.jboss.org/jbossws/downloads/ => version 3.3.1.GA</para>
	</listitem>
	<listitem>
	  <para>Décompresser l'archive du package JBOSSAS 5.1.0</para>
	</listitem>
	<listitem>
	  <para> Définir la variable d'environement JBOSS_HOME sur le répertoire décompressé. Par exemple dans le .bashrc :
	    'export JBOSS_HOME=/home/toto/jboss-5.1.0.GA'</para>
	</listitem>
	<listitem>
	  <para>Décompresser l'archive du package JBOSSWS 3.3.1 et aller dans le répertoire créé</para>
	</listitem>
	<listitem>
	  <para> Copier le fichier 'ant.properties.example' en 'ant.properties'</para>
	</listitem>
	<listitem>
	  <para> Editer le fichier nouvellement créé 'ant.properties'. Mettre la valeur de la variable jboss510.home à la valeur du répertoire de JBOSSAS (même valeur que dans la variable JBOSS_HOME). Il faut noter que si une autre version que la 5.1.0 de jboss a été prise, il faut modifier la variable correspondant à cette version</para>
	</listitem>
	<listitem>
	  <para> Lancer la commande 'ant deploy-jboss510'. Si une autre version de jboss a été prise, il faut faire la commande de la version correspondante</para>
	</listitem>
	<listitem>
          <para>Le lancement du serveur se fait en lançant le script JBOSS_HOME/bin/run.sh. Pour que le serveur jboss soit accessible depuis une autre machine, utiliser l'option '-b adresseIP' où
            adresseIP représente l'adresse IP du serveur, et vérifier que le firewall du serveur autorise l'accès au port 8080.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vérification de l'installation:</emphasis> Pour vérifier que le serveur JBoss est bien démarré et que le module web services est activé, lancer un navigateur internet sur le serveur et se connecter
            sur l'adresse 'http://localhost:8080/jbossws' (ou 'http://adresseIP:8080/jbossws') et vérifier que la page affiche bien la version
            du module web services (jbossws-cxf-3.3.1.GA).</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Installation des module WS dans JBoss</title>
      <section>
        <title>Fichiers à installer</title>
        <itemizedlist>
          <listitem>
            <para>VISHNULib-1.0-SNAPSHOT.jar
              <itemizedlist>
                <listitem><para>Contient les classes internes faisant le lien JAVA(JNI)/C++.</para></listitem>
                <listitem><para>A copier dans <emphasis role="bold">JBOSS_HOME/server/default/lib</emphasis>.</para></listitem>
                <listitem><para>Le changer implique un redémarrage du serveur JBOSS.</para></listitem>
                <listitem><para>Compilation (si nécessaire)
                    <itemizedlist>
                      <listitem><para>Aller dans le répertoire VISHNULib</para></listitem>
                      <listitem><para>Faire 'mvn install' (peut être long la première fois)</para></listitem>
                      <listitem><para>Le fichier .jar produit se trouve dans le répertoire target/</para></listitem>
                    </itemizedlist>
                </para></listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>WSAPI.jar
              <itemizedlist>
                <listitem><para>Contient les classes issues du WSDL et l'implémentation des WS.</para></listitem>
                <listitem><para>A mettre dans <emphasis role="bold">JBOSS_HOME/server/default/deploy</emphasis>.</para></listitem>
                <listitem><para>Peut être mis à jour sans redémarrer le serveur JBOSS.</para></listitem>
                <listitem><para>Compilation (si nécessaire)
                    <itemizedlist>
                      <listitem><para>Aller dans le répertoire WSAPI, avoir le jar VISHNULib-1.0-SNAPSHOT.jar de déjà fait</para></listitem>
                      <listitem><para>Faire 'mvn install' (peut être long la première fois)</para></listitem>
                      <listitem><para>Le fichier .jar produit se trouve dans le répertoire target/</para></listitem>
                      <listitem><para>Renommer le jar en WSAPI.jar avant de le mettre dans jboss, ceci est nécessaire</para></listitem>
                    </itemizedlist>
                </para></listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>libVISHNU.so
              <itemizedlist>
                <listitem><para>Nécessaire pour le fonctionnement des WS, cette librairie dynamique est obtenue en compilant les modules VISHNU désirés avec l'option ENABLE_JAVA.</para></listitem>
                <listitem><para>Le fichier est installé par défaut par le package VISHNU UMS dans '/usr/local/lib' et il n'est pas nécessaire de le copier.</para></listitem>
                <listitem><para>S'il y a un problème de déploiement dans le serveur jboss, vérifier qu'elle est bien accessible et dans le LD_LIBRARY_PATH.</para></listitem>
              </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
	<title>Variables d'environnement à définir</title>
	<itemizedlist>
          <listitem>
            <para>VISHNU_CONFIG_FILE : contient le chemin complet du fichier de configuration client de VISHNU. Se référer
              au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu de ce fichier.
              Si l'exécution échoue avec un message d'erreur lié à initialisation de la librairie lors du connect, vérifier le contenu de cette variable.
            </para>
          </listitem>
          <listitem>
            <para>LD_LIBRARY_PATH : contient les chemins des répertoires contenant les librairies VISHNU, notamment libVISHNU_UMS.so.</para>
          </listitem>
	</itemizedlist>
      </section>
      <section>
	<title>Lancement du serveur JBoss avec le module WS</title>
	<itemizedlist>
          <listitem>
            <para>Après installation des fichiers définis au paragraphe précédent, le serveur JBoss doit être redémarré en lançant le script JBOSS_HOME/bin/run.sh
              (avec les options indiquées au paragraphe sur le serveur JBoss).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Vérification de l'installation:</emphasis> Pour vérifier que le serveur JBoss est bien démarré et que le module UMS WS est activé, lancer un navigateur internet sur le serveur et se connecter
              sur l'adresse 'http://localhost:8080/jbossws/services' (ou 'http://adresseIP:8080/jbossws/services') et vérifier que le
              "service endPoint" : <emphasis role="bold">VISHNUUMSPortImpl</emphasis> est actif.</para>
          </listitem>
	</itemizedlist>
      </section>
    </section>
  </chapter><!-- End WS -->
  <chapter>
    <title>Déploiement de VISHNU</title>
    <section>
      <title>Lancement sur un même réseau</title>
      <para>Les modules peuvent être lancés soit manuellement, soit en utilisant l'outil GoDIET : un logiciel de lancement pour Sysfera-DS depuis une machine d'administration.</para>
      <para><emphasis role="bold">NOTE: l'outil GoDIET sera disponible lors de la livraison finale du projet VISHNU</emphasis></para>
      <para><emphasis role="bold">NOTE: Il est préférable d'éviter de lancer le même SeD sur la même machine.</emphasis></para>
      <para><emphasis role="bold">NOTE: Chaque machine doit posséder un utilisateur 'vishnu' pouvant se connecter sur n'importe quelle autre machine. Cet utilisateur sera utilisé pour le redémarrage automatique des SeD.</emphasis></para>
      <para>Pour mieux comprendre l'architecture de déploiement, se référer au document [ARCH], le chapitre 4, 'Technical Architecture'.</para>
      <orderedlist>
	<listitem>
          <para> Avoir une base de données PostGreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
	</listitem>
	<listitem>
          <para> Lancer le service de nommage CORBA sur la machine préfrontale. La commande est 'omniNames -start' pour la première fois, sinon 'omniNames' suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
	</listitem>
	<listitem>
          <para> Lancer le log service de DIET sur la machine préfrontale. La commande est 'LogCentral --config config.cfg' avec config.cfg un fichier de configuration pour le log central. </para>
	</listitem>
	<listitem>
          <para> Lancer le MA avec son fichier de configuration : 'dietAgent config.cfg'. Voir la figure 4.1 pour un exemple de configuration. Ce fichier de configuration peut contenir les 3 lignes suivantes :
            <itemizedlist>
	      <listitem>
		<para> 'traceLevel = 0' : Le niveau de verbosité du master agent, cette valeur peut être entre 0 et 10 compris. </para>
	      </listitem>
	      <listitem>
		<para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
	      </listitem>
	      <listitem>
		<para> 'name = MA0' : Le nom que l'on veut donner à l'agent.</para>
	      </listitem>
            </itemizedlist>
          </para>
	</listitem>
	<listitem>
          <para>Lancer le SeD UMS avec 'umssed ~/ums_sed.cfg'. Le paramètre est un fichier de configuration VISHNU. Voir la figure 4.2 pour un exemple de configuration. Les paramètres à fournir correspondent à:
            <itemizedlist>
	      <listitem>
		<para>
                  'dietConfigFile=/usr/local/etc/SeD.cfg' : le chemin jusqu'au fichier de configuration DIET du SeD. Voir la figure 4.2 pour un exemple de configuration. Ce fichier peut par exemple contenir les 2 lignes suivantes :
                  <itemizedlist>
                    <listitem>
		      <para>'traceLevel = 0' : Le niveau de verbosité du SeD UMS, ce niveau peut être entre 0 (minimum) et 10 compris.</para>
                    </listitem>
                    <listitem>
		      <para> 'parentName = MA0' : Le nom du MA auquel le SeD UMS doit se lier. Ce doit être exactement le même nom que celui donné au même dans le champs 'name' du MA en question.</para>
                    </listitem>
                    <listitem>
		      <para> 'useLogService = 1' : Pour utiliser le service de log dans DIET (sinon les SeD n'émettent aucun message).</para>
                    </listitem>
                  </itemizedlist>
		</para>
	      </listitem>
	      <listitem>
		<para> 'vishnuId=1' : L'id de VISHNU à utiliser dans la DB (valeur '1' par défaut) .</para>
	      </listitem>
	      <listitem>
		<para> 'databaseType=postgresql' : Pour utiliser une base postgreSQL. Pour utiliser une base MySQL, il faut mettre 'mysql' comme type.</para>
	      </listitem>
	      <listitem>
		<para>
                  'databaseHost=localhost' : Le nom DNS du serveur de bases de données, ou 'localhost' si la base est locale.
		</para>
	      </listitem>
	      <listitem>
		<para>'databaseName=vishnu' : Le nom de la base de données</para>
	      </listitem>
	      <listitem>
		<para> 'databaseUserName=vishnu_user' : Le nom d'utilisateur pour se connecter à la DB.</para>
	      </listitem>
	      <listitem>
		<para> 'databaseUserPassword=vishnu_user' : Le mot de passe pour se connecter à la DB.</para>
	      </listitem>
	      <listitem>
		<para> 'databaseConnectionsNb=5' : Le nombre de connexions ouvertes sur la base de données par le SeD afin de traiter des requêtes en parallèle.
                  (le nombre par défaut est 10). Si le nombre d'utilisateurs simultané du SeD est grand, cette valeur doit être augmentée dans
                  la limite du nombre de connections simultanées autorisées par le serveur de base de données.</para>
	      </listitem>
	      <listitem>
		<para> 'sendmailScriptPath=/usr/local/vishnu/sbin/sendmail.py' : Le script à utiliser pour envoyer les mails. Il est installé avec le module UMS
                  dans le sous-répertoire sbin/ du répertoire d'installation.</para>
	      </listitem>
            </itemizedlist>
          </para>
	</listitem>
	<listitem>
	  <para>
	    Sur la machine hôte de Torque, lancer le serveur (pbs_serv), le scheduler (pbs_sched) et l'ordonnanceur (pbs_mom) de Torque.
	  </para>
	</listitem>
	<listitem>
          <para>Lancer le SeD TMS sur la machine hôte de Torque. La commande de lancement est : 'tmssed ~/tms_sed.cfg'. Le paramètre est un fichier de configuration VISHNU. Voir la figure 4.3 pour un exemple de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus:
	    <itemizedlist>
	      <listitem>
		<para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des jobs.</para>
	      </listitem>
	      <listitem>
		<para>'batchSchedulerType=TORQUE' : Le type du batch scheduler utilisé.</para>
	      </listitem>
	      <listitem>
		<para>'vishnuMachineId=machine_1' : L'identifiant VISHNU de la machine ou le SeD TMS est lancé (obtenu en utilisant la commande vishnu_list_machines).</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Lancer le SeD IMS sur toutes les machines à monitorer. La commande de lancement est : 'imssed ~/ims_sed.cfg'. Le paramètre est un fichier de configuration VISHNU. Voir la figure 4.3 pour un exemple de configuration. Les paramètres à fournir correspondent à ceux de UMS.
	  </para>
	</listitem>
  <listitem>
          <para>Lancer le SeD FMS. La commande de lancement est : 'fmssed ~/fms_sed.cfg'. Le paramètre est un fichier de configuration VISHNU. Voir la figure 4.3 pour un exemple de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus:
	    <itemizedlist>
	      <listitem>
		<para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des transferts de fichiers.</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
  <listitem>
	  <para>
	    Les modules de VISHNU sont prêts à être utilisés. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen des commandes UMS et TMS (voir le manuel de l'utilisateur VISHNU).
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Lancement sur plusieurs réseaux</title>
      <para>Un module VISHNU peut être lancé soit manuellement, soit en utilisant l'outil GoDIET : un logiciel de lancement pour Sysfera-DS depuis une machine d'administration.
	On suppose dans la suite que le MA est sur le même réseau que l'omniNames et le SeD sur un autre réseau, séparés par un pare-feu</para>
      <para><emphasis role="bold">NOTE: l'outil GoDIET sera disponible lors de la livraison finale du projet VISHNU</emphasis></para>
      <para>Pour une vue générale de l'architecture du système VISHNU, se référer au document [ARCH], chapitre 4 ('Technical Architecture').</para>
      <orderedlist>
	<listitem>
	  <para> Avoir une base de données PostgreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
	</listitem>
	<listitem>
	  <para> Lancer le service de nommage CORBA sur la machine préfrontale sur les deux réseaux. La commande est 'omniNames -start' pour la première fois, sinon 'omniNames' suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
	</listitem>
	<listitem>
	  <para> Lancer un démon forwarder sur le reseau 2 :  </para>
	  <para>dietForwarder --name forwarder2 --net-config forwarder2.cfg
	    <itemizedlist>
	      <listitem><para>
		  forwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para></listitem>
	      <listitem><para>
		  forwarder2.cfg : fichier de configuration (voir la figure 4.3 pour un exemple de configuration) contenant des règles appliquées aux
		  connections entre agents de l'intergiciel. Les règles sont de deux sortes : 'accept:' ou 'reject:'. Dans l'exemple de la figure 4.3, les
		  règles utilisées sont:
		  <itemizedlist>
		    <listitem>
		      <para> une règle 'accept' correspondant au filtre sur la source des connections acceptées. '.*' signifie les connections provenant
			de n'importe quelle adresse IP.</para>
		    </listitem>
		    <listitem>
		      <para> deux règles 'reject' contenant les adresses destination à rejeter. Il est nécessaire que l'adresse IP du serveur sur lequel
			tourne le démon forwarder soit indiquée dans une règle de ce type. Dans l'exemple le serveur ayant deux adresses IP on a
			indiqué une règle pour chaque adresse.</para>
		    </listitem>
		  </itemizedlist>
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para> Lancer un démon forwarder sur le reseau 1: </para>
	  <para>dietForwarder -C--peer-name forwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name forwarder
	    --net-config forwarder1.cfg
	    --remote-host localhost
	    --ssh-login login
	  </para>
	  <para>
	    <itemizedlist>
	      <listitem><para>
		  -C : indique que c'est ce démon forwarder qui crée le tunnel SSH.
	      </para></listitem>
	      <listitem><para>
		  --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para></listitem>
	      <listitem><para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para></listitem>
	      <listitem><para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para></listitem>
	      <listitem><para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para></listitem>
	      <listitem><para>
		  --net-config : le fichier de configuration, ici forwarder1.cfg. Ce fichier doit contenir des règles 'reject' et 'accept' également,
		  sur le même modèle que forwarder2.cfg.
	      </para></listitem>
	      <listitem><para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para></listitem>
	      <listitem><para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para></listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
	</listitem>
	<listitem>
	  <para> Lancer un démon forwarder pour le log service sur le reseau 2 :  </para>
	  <para>logForwarder --name logforwarder2 --net-config logforwarder2.cfg
	    <itemizedlist>
	      <listitem><para>
		  logforwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para></listitem>
	      <listitem><para>
		  logforwarder2.cfg : fichier de configuration (voir la figure 4.3 pour un exemple de configuration) contenant des règles appliquées aux
		  connections entre agents de l'intergiciel. Les règles sont de deux sortes : 'accept:' ou 'reject:'. Dans l'exemple de la figure 4.3, les
		  règles utilisées sont:
		  <itemizedlist>
		    <listitem>
		      <para> une règle 'accept' correspondant au filtre sur la source des connections acceptées. '.*' signifie les connections provenant
			de n'importe quelle adresse IP.</para>
		    </listitem>
		    <listitem>
		      <para> deux règles 'reject' contenant les adresses destination à rejeter. Il est nécessaire que l'adresse IP du serveur sur lequel
			tourne le démon forwarder soit indiquée dans une règle de ce type. Dans l'exemple le serveur ayant deux adresses IP on a
			indiqué une règle pour chaque adresse.</para>
		    </listitem>
		  </itemizedlist>
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para> Lancer un démon log forwarder sur le reseau 1: </para>
	  <para>logForwarder -C--peer-name logforwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name logforwarder
	    --net-config logforwarder1.cfg
	    --remote-host localhost
	    --ssh-login login
	  </para>
	  <para>
	    <itemizedlist>
	      <listitem><para>
		  -C : indique que c'est ce démon forwarder qui crée le tunnel SSH.
	      </para></listitem>
	      <listitem><para>
		  --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para></listitem>
	      <listitem><para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para></listitem>
	      <listitem><para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para></listitem>
	      <listitem><para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para></listitem>
	      <listitem><para>
		  --net-config : le fichier de configuration, ici forwarder1.cfg. Ce fichier doit contenir des règles 'reject' et 'accept' également,
		  sur le même modèle que forwarder2.cfg.
	      </para></listitem>
	      <listitem><para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para></listitem>
	      <listitem><para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para></listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
	</listitem>
	<listitem>
	  <para> Lancer le log service de DIET sur la machine préfrontale. La commande est 'LogCentral --config config.cfg' avec config.cfg un fichier de configuration pour le log central. </para>
	</listitem>
	<listitem>
	  <para> Lancer le MA avec son fichier de configuration sur le même réseau que le service de nommage : 'dietAgent config.cfg'. Voir la figure 4.2 pour un exemple de configuration. Ce fichier de configuration peut contenir les 3 lignes suivantes :
	    <itemizedlist>
	      <listitem>
		<para> 'traceLevel = 0' : Le niveau de verbosité du master agent, cette valeur peut être entre 0 et 10 compris. </para>
	      </listitem>
	      <listitem>
		<para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
	      </listitem>
	      <listitem>
		<para> 'name = MA0' : Le nom que l'on veut donner à l'agent.</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Lancer le SeD, par exemple un UMS sur l'autre sous réseau. Un exemple de commande de lancement est : './umssed ~/ums_sed.cfg'. Se référer au chapitre de déploiement pour le contenu du fichier, c'est le même à utiliser que dans un déploiement sur un seul réseau.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Le module, ici UMS, de VISHNU est prêt à être utilisé. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen de clients UMS.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un MA</title>
      <programlisting>
	traceLevel = 0
	name = MA0
	agentType = DIET_MASTER_AGENT
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration pour un SeD DIET</title>
      <programlisting>
	traceLevel = 0
	parentName = MA0
	useLogService = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD UMS</title>
      <programlisting>
	# Configuration of the VISHNU UMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	sendmailScriptPath=/usr/local/sbin/sendmail.py
	vishnuMachineId=machine_1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD TMS </title>
      <programlisting>
	# Configuration of the VISHNU TMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	sendmailScriptPath=/usr/local/sbin/sendmail.py
	vishnuMachineId=machine_1
	# Configuration propres à TMS
	batchSchedulerType=TORQUE
	intervalMonitor = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD FMS </title>
      <programlisting>
	# Configuration of the VISHNU FMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	vishnuMachineId=machine_1
	# Configuration propres à FMS
	intervalMonitor = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier d'un forwarder </title>
      <programlisting>
	# accept everything from everyone
	accept:.*

	# reject its own ip
	reject:192\.168\.1\.6
      </programlisting>
    </section>
    <section>
      <title>Configuration de l'envoi des emails par VISHNU</title>
      <para>Le processus UMS SeD utilise le fichier 'sendmail.py' (fourni dans l'installation VISHNU, dans le sous-répertoire sbin/)
	pour envoyer des emails aux utilisateurs lors de certaines opérations. Ce fichier peut être modifié par l'administrateur afin
	de s'adapter à la méthode d'envoi d'email propre au serveur sur lequel est installé le SeD. Par défaut, la configuration
	fournie se connecte sur le serveur SMTP de 'localhost' sur le port 25, sans authentification.</para>
      <para>Les paramètres suivants peuvent être configurés dans le script sendmail.py:</para>
      <informaltable>
	<tgroup cols="2">
	  <colspec colwidth="2cm"/>
	  <colspec colwidth="15cm"/>
	  <thead>
	    <row>
	      <entry>Option</entry>
	      <entry>Ligne du script sendmail.py à modifier</entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry><para>login</para></entry>
	      <entry><programlisting>parser.add_option("--login", dest="login", help="", default="[login_utilisateur]")</programlisting></entry>
	    </row>
	    <row>
	      <entry><para>password</para></entry>
	      <entry><programlisting>parser.add_option("--password", dest="password", help="smtp password", default="[password_utilisateur]")</programlisting></entry>
	    </row>
	    <row>
	      <entry><para>hostname</para></entry>
	      <entry><programlisting>parser.add_option("--hostname", dest="host", help="smtp host", default="[nom_serveur_SMTP]")</programlisting></entry>
	    </row>
	    <row>
	      <entry><para>port</para></entry>
	      <entry><programlisting>parser.add_option("--port", dest="port", help="smtp port [default: 25]", type=int, default="[no_port]")</programlisting></entry>
	    </row>
	    <row>
	      <entry><para>SSL</para></entry>
	      <entry><programlisting>parser.add_option("--ssl", action="store_true", dest="use_ssl", help="enable ssl support [default: %default - default port: 587
		  ]", default=True)</programlisting></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>
    </section>
    <section>
      <title>Configuration des clés privées/publiques ssh requises pour FMS</title>
      <para>
        Toutes les commandes éxécutées par le SeD FMS sont lancées via ssh
        sous le nom de l'utilisateur ayant émis la requête. Les services FMS
        sont de deux types: il y a ceux qui n'impliquent qu'une machine
        distante: Exemple getFilesInfo,listDir,etc.. et ceux qui impliquent au
        moins deux machines distantes: machine source et destination pour les transferts de fichiers. 
        <itemizedlist>
          <listitem>
            <para> Dans le premier cas le SeD se connecte sur la machine distante et
              effectue la commande. Par conséquent la clé publique du SeD doit
              être ajoutée au fichier authorized_keys ($HOME/.ssh/authorized_keys) de l'utilisateur de la machine distante 
              concernée.</para>
          </listitem>
          <listitem>
            <para> Dans le second cas, deux connexions ssh sont nécessaires. Le SeD se connecte sur la machine source et
              lance le transfert (seconde connexion) vers la machine destination. Par conséquent la clé publique du SeD doit
              être ajoutée au fichier authorized_key de la machine source pour
              permettre la première connexion puis sur la machine destination pour permettre la seconde connexion. Il n'est pas nécessaire qu'il y ait un autre couple de clés entre la machine source et destination grâce au mécanisme d'agent forwarding (fonctionnalité de ssh).   </para>
          </listitem>
        </itemizedlist>
        En somme, il est alors obligatoire que la clé publique du SeD soit ajoutée à tous les comptes utilisateurs des machines impliquées
        par les requêtes FMS. Toutes les clés protégées par des passphrases
        devront être stockées par un agent ssh pour permettre les
        authentifications automatiques.
      </para>
    </section> 
    <section>
      <title>Test d'exécution d'un service depuis une machine client par shell</title>
      <orderedlist>
	<listitem>
	  <para>
	    Une fois que la plateforme a été installée, se mettre sur un poste client avec VISHNU d'installé. Se référer au document [VISHNU_USERGUIDE]
	    pour l'installation de la partie client.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Exporter la variable d'environnement VISHNU_CONFIG_FILE dans un script de configuration client. Se référer
	    au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu d'un fichier client.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Lancer la commande dans le shell 'vishnu_connect user', ou user représente un nom d'utilisateur dans la DB
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Taper le mot de passe 'password', correspondant à l'utilisateur 'user'
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Sur le client, un affichage doit signaler que le service a réussi. Dans le terminal ou le SeD UMS a été lancé et dans le terminal ou le MA tourne, selon le niveau de verbosité, plus ou moins d'informations, concernant le service effectué, doivent apparaitre.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Fermer la session avec 'vishnu_close'. Aucune erreur ne doit être remontée lors de ces tests.
	  </para>
	</listitem>
      </orderedlist>
    </section>
  </chapter><!-- End lancement  -->
  <chapter>
    <title>Administration</title>
    <section>
      <title>Présentation</title>
      <para>
	Le module UMS correspond à la gestion des utilisateurs et des machines de VISHNU. Il permet aussi de sauvegarder la configuration de VISHNU à chaud et de la restaurer si besoin est.
	Dans toute la suite du chapitre, on supposera que l'utilisateur est déjà connecté avec un compte administrateur de VISHNU pour pouvoir réaliser ces manipulations. De plus, on présentera l'utilisation des commandes depuis le shell, mais cela reste valable depuis les API Python ou C++.
      </para>
    </section>
    <section>
      <title>Gestion des utilisateurs (UMS)</title>
      <orderedlist>
	<listitem>
	  <para>
	    L'ajout d'un utilisateur se fait à l'aide de la commande 'vishnu_add_user'. Elle prend en paramètre le prénom de l'utilisateur, son nom de famille, les droits qui lui sont associés dans VISHNU (administrateur ou simple utilisateur) et son adresse de couriel. Tout ces paramètres sont obligatoires. Un privilège à 1 signifie administrateur, un privilège à 0 signifie un utilisateur. L'identifiant de l'utilisateur est généré et renvoyé.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    La mise à jour d'un utilisateur ne peut être faite que par un administrateur. Cette mise à jour se fait avec un appel à la commande 'vishnu_update_user' et permet de modifier les paramètres de l'ajout (nom, prénom, statut, couriel).
	    Il faut avoir l'identifiant de l'utilisateur (généré lors de la création de l'utilisateur) pour le désigner lors de la mise à jour.
	  </para>
	  <para>Note: le changement du statut d'un utilisateur à l'état "INACTIVE" correspond à un blocage de son compte.</para>
	</listitem>
	<listitem>
	  <para>
	    La suppression d'un utilisateur efface toutes les informations liées à l'utilisateur de la base de donnée. Cette suppression se fait à l'aide de la commande 'vishnu_delete_user'.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    La liste des utilisateurs ne peut être faite que par un administrateur. Cela se fait avec la commande 'vishnu_list_user'. Cette commande peut prendre en paramètre l'identifiant d'un utilisateur pour n'avoir les informations que concernant cet utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Seul un administrateur peut réinitialiser le mot de passe d'un utilisateur de VISHNU. Pour ce faire, il doit appeller la commande 'vishnu_reset_password'  en fournissant l'identifiant de l'utilisateur dont l'administrateur veut réinitialiser le mot de passe. Le nouveau mot de passe est temporaire et renvoyé par la commande. Lors de la prochaine connexion, l'utilisateur devra changer son mot de passe avec 'vishnu_change_password'.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des machines (UMS+IMS)</title>
      <orderedlist>
	<listitem>
	  <para>L'ajout d'une machine se fait à l'aide de la commande 'vishnu_add_machine'. Cette commande prend en paramètre le nom de la machine, le site ou elle se trouve, le language de la description qui sera donnée pour la machine, le fichier contenant la clé publique et la description. Ces paramètres sont obligatoires, en passant par le shell, la description n'a pas besoin d'être fournie en paramètre mais elle est alors demandée à l'administrateur avant d'ajouter la machine. A la fin de l'ajout, l'identifiant généré pour la machine est renvoyé.</para>
	</listitem>
	<listitem>
	  <para>
	    La mise à jour d'une machine se fait à l'aide de la commande 'vishnu_update_machine' et permet de modifier les paramètres mis lors de l'ajout de la machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
	  </para>
	  <para>Note: le changement du statut d'une machine à l'état "INACTIVE" correspond à un blocage de la machine. Cela rend la machine inaccessible aux utilisateurs de VISHNU mais toujours visible pour les administrateurs.</para>
	</listitem>
	<listitem>
	  <para>
	    La suppression d'une machine se fait à l'aide de la commande 'vishnu_delete_machine' avec l'identifiant de la machine à supprimer. Cela supprime la machine de la base de données, ainsi que toutes les informations qui y sont attachées (Attention: cette commande est irréversible).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Les utilisateurs peuvent lister les machines, mais un administrateur a en plus une option qui est l'identifiant d'un utilisateur. Ceci lui permet de lister les machines sur lesquelles l'utilisateur a un compte VISHNU.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    La mise à jour d'informations système d'une machine se fait à l'aide de la commande 'vishnu_set_system_info' et permet d'ajouter ou modifier des informations système d'une machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion de la plateforme (UMS)</title>
      <orderedlist>
	<listitem>
	  <para>
	    L'administrateur peut faire une sauvegarde à chaud à un moment donné de VISHNU. Ceci sauvegarde les utilisateurs, les machines et les comptes des utilisateurs. Le fichier, dans lequel la configuration est, est retourné par la fonction. La fonction est 'vishnu_save_configuration', pas besoin de paramètres.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    L'administrateur peut recharger une configuration précédente de VISHNU à l'aide de la commande 'vishnu_restore_configuration' qui a besoin du fichier de sauvegarde pour recharger la base.
	    Avant de pouvoir lancer cette restauration, tous les utilisateurs de VISHNU doivent être déconnectés.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Un administrateur peut également définir les valeurs par défaut des options de VISHNU pour tout les utilisateurs (ces options sont le temps de déconnexion par défaut et le type de fermeture d'une session par défaut). Cela se fait en appellant 'vishnu_configure_default_option' en donnant le nom de l'option et sa nouvelle valeur.
	  </para>
	</listitem>
      </orderedlist>
    </section>
    <section>
      <title>Options propres à l'administrateur dans les commandes utilisateurs(UMS+FMS)</title>
      <orderedlist>
	<listitem>
	  <para>Dans la fonction 'vishnu_connect', un administrateur peut donner l'identifiant d'un utilisateur pour se connecter sous le nom de cet utilisateur dans VISHNU.</para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_history_cmd', l'administrateur peut lister toutes les commandes de tout les utilisateurs ou les commandes d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_local_accounts', l'administrateur peut lister toutes les comptes de tout les utilisateurs ou les comptes d'un utilisateur particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_options', l'administrateur peut lister les toutes les options de tout les utilisateurs ou les options d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_sessions', l'administrateur peut lister les toutes les sessions de tous les utilisateurs ou les sessions d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou les sessions sur une machine particulière en fournissant l'identifiant de la machine.
	  </para>
	</listitem>
<listitem>
	  <para>
	    Dans la fonction 'vishnu_list_file_transfers', l'administrateur peut lister tous les transferts de fichiers de tous les utilisateurs ou ceux  d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou lister les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
	  </para>
	</listitem>
<listitem>
	  <para>
	    Dans la fonction 'vishnu_stop_file_transfers', l'administrateur peut annuler tous les transferts de fichiers de tous les utilisateurs ou ceux  d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou annuler les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
	  </para>
	</listitem>

</orderedlist>
    </section>
    <section>
      <title>Gestion des processus VISHNU et délestage (IMS)</title>
      <itemizedlist>
	<listitem>
	  <para>L'administrateur peut lister les processus VISHNU, sur toute la plateforme ou sur une machine particulière.
	    Fonction associée : vishnu_get_processes.</para>
	</listitem>
	<listitem>
	  <para>L'administrateur peut arrêter un processus VISHNU, ce processus ne sera pas redémarrer automatiquement.
	    Attention : l'administrateur doit avoir un compte sur la machine
	    Fonction associée : vishnu_stop </para>
	</listitem>
	<listitem>
	  <para>L'administrateur peut redémarrer un processus VISHNU sur une machine, ce processus doit avoir déjà tourné
	    pour VISHNU sur cette machine et l'administrateur doit avoir un compte sur la machine.
	    Fonction associée : vishnu_restart </para>
	</listitem>
	<listitem>
	  <para>L'administrateur peut délester une machine selon deux modes. Dans le mode HARD, tout les processus VISHNU
	    de la machine sont arretés. Dans le mode SOFT, seul FMS et TMS sont touchés, on arrête tout leurs transferts
	    et jobs en cours.
	    Fonction associée : vishnu_load_shed </para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Surveillance de l'état des machines (IMS)</title>
      <itemizedlist>
	<listitem>
	  <para> Un administrateur peut fixer la fréquence de mise à jour de l'enregistrement de l'état des machines.
	    Fonction associée : vishnu_set_update_frequency</para>
	</listitem>
	<listitem>
	  <para> Un administrateur peut obtenir la fréquence de mise à jour de l'enregistrement de l'état des machines.
	    Fonction associée : vishnu_get_update_frequency</para>
	</listitem>
	<listitem>
	  <para> Un administrateur peut fixer un seuil sur une machine. Ce seuil peut être l'utilisation du CPU, la
	    mémoire libre restante ou l'espace disque restant. Lors de l'enregistrement de l'état d'une machine,
	    si un seuil est atteint sur cette machine, l'administrateur est notifié par mail de ce dépassement.
	    Fonction associée : vishnu_set_threshold</para>
	</listitem>
	<listitem>
	  <para> Un administrateur peut obtenir les seuils fixés sur une machine. Pour plus d'informations sur les seuils
	    voir la partie pour fixer les seuils ci-dessus.
	    Fonction associée : vishnu_get_threshold</para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Définition des formats des identifiants (IMS)</title>
      <itemizedlist>
	<listitem>
	  <para>
	    Un administrateur peut fixer le format des identifiants VISHNU automatiquement générés pour les utilisateurs,
	    les machines, les jobs soumis aux batchs scheduler et les transferts de fichiers. Ces identifiants peuvent contenir
	    plusieurs variables :
	    <itemizedlist>
	      <listitem>
		<para>
		  '$DAY' : Variable qui sera remplacée par le jour de création (1-31)
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$MONTH' : Variable qui sera remplacée par le mois de création (1-12)
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$YEAR' :  Variable qui sera remplacé par l'année de création (0-99)
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$CPT' : Variable compteur qui est automatiquement incrémentée
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$SITE' : Pour les utilisateurs ou machine, une information sur le lieu
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$UNAME' : Pour les utilisateurs, variable remplacée par le nom de l'utilisateur
		</para>
	      </listitem>
	      <listitem>
		<para>
		  '$MANAME' : Pour les machines, variable remplacée par le nom de la machine
		</para>
	      </listitem>
	    </itemizedlist>
	    Attention la variable conteur est obligatoire pour éviter la génération d'un identifiant déjà existant.
	    Fonctions associées : define_file_format, define_machine_format, define_task_format, define_user_format.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
  </chapter><!-- End administration -->
</book>

