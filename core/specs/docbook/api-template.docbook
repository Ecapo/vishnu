<?xml version="1.0" encoding="UTF-8"?>
<book xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://docbook.org/ns/docbook">
    <info>
      <title>VISHNU D1.1 - APIs specifications</title>
      <author>
        <personname><firstname>Benjamin</firstname><surname>Isnard</surname></personname>
      </author>
      <author>
        <personname><firstname>Daouda</firstname><surname>Traoré</surname></personname>
      </author>
      <author>
        <personname><firstname>Eugène</firstname><surname>Pamba Capo-Chichi</surname></personname>
      </author>
      <author>
        <personname><firstname>Kevin</firstname><surname>Coulomb</surname></personname>
      </author>
      <author>
        <personname><firstname>Ibrahima</firstname><surname>Cissé</surname></personname>
      </author>
      <revhistory>
        <revision>
        <revnumber>0</revnumber>
        <date>05/01/2011</date>
        <authorinitials>B.Isnard</authorinitials>
        <revdescription>
          <para>Formatting example</para>
        </revdescription>
        </revision>
      </revhistory>
    </info>
  <chapter>
    <title>Document presentation</title>
    <section>
      <title>Document objectives</title>
      <para>This document presents the detailed specifications of the Vishnu APIs (Application Programming Interfaces).
            The following APIs are included in the project:</para>
      <itemizedlist>
         <listitem><para>C++ API</para></listitem>
         <listitem><para>Python (v2.x) API</para></listitem>
         <listitem><para>Web services (WSDL 1.1) API</para></listitem>
      </itemizedlist>
      <para>These specifications include the definition of all methods and all data types in a format that is common
            to all APIs. Therefore the description is not tied to a particular implementation and all implementations
            will follow the same logic and will differ only when the language that is used imposes some constraints.</para>
    </section>
    <section>
      <title>Document structure</title>
      <para>The document is divided into 4 parts corresponding to the four modules that compose the
        Vishnu system:</para>
      <para><itemizedlist>
        <listitem>
          <para>UMS: Users Management System</para>
        </listitem>
        <listitem>
          <para>TMS: Tasks Management System</para>
        </listitem>
        <listitem>
          <para>FMS: Files Management System</para>
        </listitem>
        <listitem>
          <para>IMS: Information Management System</para>
        </listitem>
      </itemizedlist></para>
      <para>Each module  corresponds to a chapter in the document, and each chapter contains the following sections:
        <itemizedlist>
          <listitem>
            <para>A first section describing the definition of all the methods provided by the library</para>
          </listitem>
          <listitem>
            <para>A second section describing the definition of all the data types provided by the library</para>
          </listitem>
          <listitem>
            <para>TODO - A third section describing the dependencies of the library</para>
          </listitem>
        </itemizedlist></para>
    </section>
    <section> <!-- Generic definition formats presentation -->
      <title>Generic definition formats presentation</title>
      <para>This section presents the formats used in the following chapters to describe the methods and data types provided
	    by the libraries. It also details the particular implementation constraints for each language.</para>
      <section><!--Methods definition format -->
	<title>Methods definition format</title>
	<para>The following paragraphs show how all methods (or "operations" in the Web Services terminology) are specified
	      in this document. First, the generic format used for each Vishnu module is explained, then the aspects that are
	      specific to each implementation language are detailed.</para>
	<section><!-- Generic method definition format -->
	  <title>Generic method definition format</title>
	  <para><emphasis role="bold">Parameters</emphasis></para>
	  <para>The following table contain all the input and output parameters of the method, along with their type and description,
		and their optional or required flag.</para>
	  <informaltable>
	    <tgroup cols="5">
	      <colspec colwidth="2cm"/>
	      <colspec colwidth="3cm"/>
	      <colspec colwidth="8cm"/>
	      <colspec colwidth="2cm"/>
	      <colspec colwidth="1.5cm"/>
	      <thead>
		<row>
		  <entry>Parameter</entry>
		  <entry>Type</entry>
		  <entry>Description</entry>
		  <entry>Mode</entry>
		  <entry>Required</entry>
		</row>
	      </thead>
	      <tbody>
		<row>
		  <entry><para>sessionKey</para></entry>
		  <entry><para>string</para></entry>
		  <entry><para>This is an example of a required input parameter</para></entry>
		  <entry><para>IN</para></entry>
		  <entry><para>yes</para></entry>
		</row>
		<row>
		  <entry><para>listOfJobs</para></entry>
		  <entry><para>ListJobs</para></entry>
		  <entry><para>This is an example of an output parameter that is always provided</para></entry>
		  <entry><para>OUT</para></entry>
		  <entry><para>yes</para></entry>
		</row>
	      </tbody>
	    </tgroup>
	  </informaltable>
          <para><emphasis role="bold">Access </emphasis></para>
	  <para>Here is detailed the access level of the method 'myMethod' (i.e. the privilege required to use this method)</para>
	  <para><emphasis role="bold">Description </emphasis></para>
	  <para>Here is detailed the purpose of the method 'myMethod'</para>
	  <para><emphasis role="bold">Return Value </emphasis></para>
	  <para>Here are detailed the different return codes provided by the method. Please note that these return codes may be implemented differently depending on the language, for example
            by using an exception mechanism. In all implementations the library will provide a way of mapping the code to a human-readable message that will contain detailed information
            about the context of the exception that happened.</para>
	  <informaltable>
	    <tgroup cols="2">
	      <colspec colwidth="8.5cm"/>
	      <colspec colwidth="9cm"/>
	      <thead>
		<row>
		  <entry>Name</entry>
		  <entry>Description</entry>
		</row>
	      </thead>
	      <tbody>
		<row>
		  <entry><para>VISHNU_OK</para></entry>
		  <entry><para>The service was performed  successfully.</para></entry>
		</row>
		<row>
		  <entry><para>TMS_UNKNOWN_MACHINE</para></entry>
		  <entry><para>This is the human-readable generic message that will available to the user of the API.</para></entry>
		</row>
	      </tbody>
	    </tgroup>
	  </informaltable>
	  <para><emphasis role="bold">Signature </emphasis></para>
	  <para>This shows the C++ signature of the method.</para>
	  <funcsynopsis><funcprototype><funcdef>int <function>myMethod</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListJobs&amp; <parameter>listOfJobs</parameter></paramdef></funcprototype></funcsynopsis>
	</section> <!-- Generic method definition format -->
        
        <section> <!--C++ specific aspects -->
          <title>C++ specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>The output parameters will be implemented as references in the method signature.</para>
             </listitem>
             <listitem>
               <para>The methods will always return an integer with a default value for success.</para>
             </listitem>
             <listitem>
               <para>The methods will throw exceptions for each error message specified. The exception will contain additional details provided by the server.</para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--C++ specific aspects -->
        
        <section> <!--Python specific aspects -->
          <title>C++ specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>The output parameters will be implemented as a Python tuple returned by the method.</para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--Python specific aspects -->
        
        <section> <!-- WS specific aspects -->
          <title>Web Services specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>The input and output parameters will be implemented as Java Beans: a "Request" bean containing the input parameters and a "Response" bean containing the output parameters.</para>
             </listitem>
             <listitem>
               <para>The methods will throw exceptions for each error message specified. The exception will contain additional details provided by the server.</para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--WS specific aspects -->
        
      </section> <!--Methods definition format -->
      
      <section> <!-- Data types definition format -->
      
      <title>Data types definition format</title>
        <para>The following paragraphs show how all data types are specified in this document. First, the generic format used for each Vishnu data type is explained,
              then the aspects that are specific to each implementation language are detailed.</para>
        <section><!-- Generic data definition format -->
          <title>Generic data definition format</title>
          
          <para id="Command"><emphasis role="bold">Class Module::Class Content</emphasis></para>
          <informaltable>
            <tgroup cols="3">
              <colspec colwidth="4cm"/>
              <colspec colwidth="3cm"/>
              <colspec colwidth="8cm"/>
              <colspec colwidth="2cm"/>
              <thead>
                <row>
                  <entry>Name</entry>
                  <entry>Type</entry>
                  <entry>Description</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry><para>Class attribute name</para></entry>
                  <entry><para>Class attribute type</para></entry>
                  <entry><para>Description/usage of the attribute</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section><!-- Generic data definition format -->
        
        <section> <!--C++ specific aspects -->
          <title>C++ specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>All attributes of the class will be private.</para>
             </listitem>
             <listitem>
               <para>For each attribute of the class a couple of getter/setter methods will be implemented.</para>
             </listitem>
             <listitem>
               <para>The string type will be mapped to the C++ STL string type.</para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--C++ specific aspects -->
        
        <section> <!--Python specific aspects -->
          <title>C++ specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>For each attribute of the class a couple of getter/setter methods will be implemented.</para>
             </listitem>
             <listitem>
               <para>The string type will be mapped to standard Python strings.</para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--Python specific aspects -->
        
        <section> <!-- WS specific aspects -->
          <title>Web Services specific aspects</title>
           <itemizedlist>
             <listitem>
               <para>When a single instance of object is used as input or output parameter, the attributes of the object will be mapped
                     respectively to attributes of the 'Request' or 'Response' Java Bean.</para>
             </listitem>
             <listitem>
               <para>When multiple instances of object are used as input or output parameter (for example list of machines or list or users)
                     the 'Request' or 'Response' Java Bean will contain a 'data' subclass containing the instances. This follows the standard
                     WSDL/Java mapping for Apache-CXF.
                   </para>
             </listitem>
             <listitem>
               <para></para>
             </listitem>
           </itemizedlist>
        </section> <!--WS specific aspects -->
        
      </section> <!-- Data types definition format -->

    </section> <!-- Generic definition formats presentation -->
    <section>
      <title>References</title>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">UMS.wsdl</emphasis> : WSDL file for the UMS module</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">TMS.wsdl</emphasis> : WSDL file for the TMS module</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">FMS.wsdl</emphasis> : WSDL file for the FMS module</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">IMS.wsdl</emphasis> : WSDL file for the IMS module</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Glossary</title>
      <para/>
    </section>
  </chapter>
    <!-- GENERATED PART -->
  <chapter annotations="EDF-API/UMS.apim#APIOPS+APIDATA">
    <title>API specification for User Management System (UMS)</title>
  </chapter> 
  <chapter annotations="EDF-API/TMS.apim#APIOPS+APIDATA">
    <title>API specification for Tasks Management System (TMS)</title>
  </chapter>
  <chapter annotations="EDF-API/IMS.apim#APIOPS+APIDATA">
    <title>API specification for Information Management System (IMS)</title>
  </chapter>
  <chapter annotations="EDF-API/FMS.apim#APIOPS+APIDATA">
    <title>API specification for File Management System (FMS)</title>
  </chapter> -->
</book>
  
