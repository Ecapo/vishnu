<?xml version="1.0" encoding="UTF-8"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <info>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Isnard</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Daouda</firstname>
        <surname>Traoré</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Eugène</firstname>
        <surname>Pamba Capo-Chichi</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Kevin</firstname>
        <surname>Coulomb</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Ibrahima</firstname>
        <surname>Cissé</surname>
      </personname>
    </author>
    <title>VISHNU D1.0 - General specifications</title>
    <revhistory>
      <revision>
        <revnumber>01</revnumber>
        <date>07/12/2010</date>
        <authorinitials>B.Isnard</authorinitials>
        <revdescription>
          
        <para>Formatting example</para></revdescription>
      </revision>
      <revision>
        <revnumber>02</revnumber>
        <date>13/12/2010</date>
        <authorinitials>B.Isnard</authorinitials>
        <revdescription>
            
          <para>Pre-delivrable</para></revdescription>
      </revision>
      <revision>
        <revnumber>03</revnumber>
        <date>29/12/2010</date>
        <authorinitials>B.Isnard</authorinitials>
        <revdescription>
            
          <para>Delivrable (draft)</para></revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Document presentation</title>
    <section>
      <title>Document objectives</title>
      <para>This document presents the external specifications of the Vishnu system at a general
        level. At this level, we describe the interaction of a user with the system without
        providing implementation details. The different steps that constitute the scenario are
        detailed as well as the content of the messages exchanged. The main objective is to describe
        the system from the user point of view.</para>
      <para>These general specifications are a prerequisite for the detailed specifications step in
        the software development process.</para>
    </section>
    <section>
      <title>Document structure</title>
      <para>The document is divided into 4 parts corresponding to the 4 modules that compose the
        Vishnu system:</para>
      <para><itemizedlist>
          <listitem>
            <para>UMS: Users Management System</para>
          </listitem>
          <listitem>
            <para>TMS: Tasks Management System</para>
          </listitem>
          <listitem>
            <para>FMS: Files Management System</para>
          </listitem>
          <listitem>
            <para>IMS: Information Management System</para>
          </listitem>
        </itemizedlist></para>
      <para>Each module  corresponds to a chapter in the document, and each chapter contains two sections:<itemizedlist>
          <listitem>
            <para>A first section containing &quot;Use case descriptions&quot; that follow the standard UML
              description of a use case</para>
          </listitem>
          <listitem>
            <para>A second section containing the &quot;Use case diagrams&quot; that describe the organization
              of the different use cases. These diagrams follow the UML2.0 standard.</para>
          </listitem>
        </itemizedlist></para>
    </section>
    <section>
      <title>References</title>
      <para/>
    </section>
    <section>
      <title>Glossary</title>
      <para>
         <itemizedlist>
          <listitem>
            <para>SysferaDS: open-source middleware software used by Vishnu (former name
              &quot;DIET&quot;)</para>
          </listitem>
          <listitem/>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter annotations="UMS/specs/UMS.asta#UCDIAG+UCDESC+DICT(UMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for User Management System (UMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC UMS User Manual</title>
        <para>This UseCase Diagram describes all cases attached when the user  opens a session with manual closure</para>
        <figure>
          <title>UC UMS User Manual</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User Manual.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS User Auto</title>
        <para>This UseCase Diagram describes all cases associated when a user  opens a session with automatic closure (on disconnect and on timeout)</para>
        <figure>
          <title>UC UMS User Auto</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User Auto.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS User account</title>
        <para>This UseCase Diagram describes all cases associated when a user  executes synchronous request</para>
        <figure>
          <title>UC UMS User account</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User account.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS Admin</title>
        <para>This UseCase Diagram describes all administrator's functions</para>
        <figure>
          <title>UC UMS Admin</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS Admin.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS Admin Machines</title>
        <para>This UseCase Diagram describes all cases associated to machine using by an admin</para>
        <figure>
          <title>UC UMS Admin Machines</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS Admin Machines.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>U1 - Session with manual closure</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1 - Session with manual closure</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session and closes it manually by using the API command for closure</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is authenticated</para><para>- VISHNU is installed and running on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>- A session log has been created</para><para>- All user requests submitted within the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Include::U1.1 Open session</para><para>2. System is ready to process user commands</para><para>3. Include::U1.2 Close session (before the maximum inactivity delay if option CLOSE_POLICY is equal to CLOSE_ON_TIMEOUT)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.3 Execute synchronous user request</para><para>2b. U1.4 Execute asynchronous user request</para><para>2c. U1.5 Reconnect to session</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Include::U1.1 exceptions</para><para>3a. If session cannot be closed due to running commands, user must wait until all commands are completed before trying step 3 again</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.1 - Open session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.1 - Open session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a session</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para> - The user is connected on a client System in which VISHNU is installed and which can be connected to the VISHNU infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- A session is active</para><para>- The user's environment contains a session key</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User provides login, password and optionally the way for closing the session automatically on disconnect or on timeout to the &quot;connect&quot; command (when the default option is not set the  SESSION_CLOSE_POLICY is CLOSE_ON_TIMEOUT). If the user is an administrator, he/she can be connected as he/she was another specific user by providing his/her login.</para><para>2. System validates login, password (user is authenticated) and  optionally, the name of the closing mode (CLOSE_ON_DISCONNECT or CLOSE ON TIMEOUT) if the SESSION_CLOSE_POLICY is set or optionally a login provides by the administrator who wants to be connected as he/she was another user.</para><para>3. System creates the session and activates it</para><para>4. System provides the session key to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. If the password is a temporary password (after reset by the administrator) the System asks the user to enter a new password, then asks for a confirmation, and registers the new password if both steps are ok. If non-interactive request then this is an exception (a change password request is required).</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The user login is unknown</para><para>2b. The user password is invalid</para><para>2c. The SESSION_CLOSE_POLICY option is unknown</para><para>2d. VISHNU infrastructure is unreachable or unavailable</para><para>2e. The user password is temporary and request is non-interactive</para><para>2f. The substitute login provides by the administrator is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.2 - Close session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.2 - Close session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user closes the session manually</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>-  A session log has been created</para><para>- All user requests submitted during the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to close a session (the session key registered in the user's environment is sent to the System)</para><para>2. The System checks that the session key is valid and the corresponding session is open</para><para>3. The System checks that there are no running commands within the session</para><para>4. The System closes the session</para><para>5. The System informs the user that the session has been closed</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. VISHNU infrastructure is unreachable or unavailable</para><para>2a. The session key is invalid</para><para>2b. The session is already closed</para><para>2c. The session key is incompatible with the authenticated user (that means that the session identifier is not for the user who sends the requests).</para><para>3a. If there are running commands within the session, the System informs the user that the session cannot be closed</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3 - Execute synchronous user request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user submits a synchronous request to the System</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The request is completed</para><para>- A request log is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends the request to the System</para><para>2. The System returns the results to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1.a Invalid session (bad session key or unavailable session)</para><para>1.b Invalid request</para><para>1.c Permission denied (admin request issued by normal user)</para><para>1.d Ressource not available</para><para>1.e VISHNU System crashed</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U3 - Session with automatic closure on disconnect</para><para>U2 - Session with automatic closure on timeout</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.1 - Configure Option</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.1 - Configure Option</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user wants to modify the value of an option attached to his/her VISHNU account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The option's value is modified</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request for modifying the value of an option to the System</para><para>2. The System checks the option name and registers the new value for the option</para><para>3. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Invalid option name</para><para>2b. Invalid option value</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.2 - Display options</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.2 - Display options</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays options concerning his/her VISHNU account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all his/her options</para><para>2. The System returns all options of the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The users sends a request to list a specific option identified by its name</para><para>2a. The System checks the name of the option specified</para><para>2b. The System returns the value of the option specified</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a1. The option name is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.3 - Change password</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.3 - Change password</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user wants to change his/her password</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The password is changed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request containing his/her old password and the new password</para><para>2. The System checks the login and the old password of the user (the user si authenticated) and it registers the new user's password</para><para>3. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Unknwon user</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.4 - Display session command history</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.4 - Display session command history</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays all the commands sent during one session</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all commands sent during the session identified by the session key registered in the user's environment</para><para>2. The System returns the list of all commands issued by the user during the session which key corresponds to the session key registered in the user's environment. Each command has exactly the same format and parameters as the original submission and can be resubmitted as-is to the System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request containing a session identifier to list all commands sent during the session identified by the session id</para><para>2a. The System returns the list of all commands issued by the user during the session which id correspons to the provided id</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. Invalid session key (unknown / belonging to another user, if the current user is not an administrator)</para><para>1a2. Invalid session id (unknown / belonging to another user, if the current user is not an administrator)</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.5 - Display sessions log</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.5 - Display sessions log</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays his/her sessions (active or closed)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all his/her sessions (active and/or closed) that have an open timestamp within an interval provided by the user (start and finish date)</para><para>2. The System returns all (or only active, or only closed) sessions of the user matching the search criteria with the following information for each session: id, opening date, client host name, closure policy (timeout or disconnect), time before automatic closure (if applicable) and period using start and finish date </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.4 - Execute asynchronous user request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user submits an asynchronous request to the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The request is completed</para><para>-  A request log is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends the request to the system</para><para>2. The System returns an acknowledgment to the user</para><para>3. The System runs the request in background</para><para>4. When the request is completed, the system updates the status of the request</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1.a Invalid session (bad session certificate or session unavailable)</para><para>1.b Invalid request</para><para>1.c Permission denied</para><para>1.d Ressource not available</para><para>1.e VISHNU System crashed</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U2 - Session with automatic closure on timeout</para><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.5 - Reconnect to session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.5 - Reconnect to session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user wants to use a session in which he/she was disconnected previously without closing it</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on a client host in which VISHNU is installed and that can be connected to the VISHNU infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- A session is active</para><para>- The user's environment contains a session key</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User provides its login, password and the identifier of the session (in fact, for each session, an identifier is assigned) to the System</para><para>2. The System validates the user's login, password and the identifier of the session </para><para>3. The System provides the chosen session key to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. If the user is already within an active session then go to step 3 directly. The current session will be automatically closed according to the UC U2 or U3 depending on the close policy for that session.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>cf U1.1 (Open session)</para><para>2a. The identifier of the session does not exist</para><para>2b. The identifier relates to a session belonging to another user</para><para>2c. The identifier is for a session closed</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U2 - Session with automatic closure on timeout</para><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U2 - Session with automatic closure on timeout</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U2 - Session with automatic closure on timeout</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session that will be closed by the System after the expiration of the inactivity delay </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- VISHNU is installed and running on the client system</para><para>- The client system can be connected to VISHNU</para><para>- The option SESSION_CLOSE_POLICY is CLOSE_ON_TIMEOUT (either user option is defined or this is the default policy) </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-  A session log has been created</para><para>- The session is closed</para><para>- All user requests submitted during the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. U1.1 Open session</para><para>2. The System is ready to process user commands</para><para>3. After inactivity delay has expired: U2.1 Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.3 Execute synchronous user request</para><para>2b. U1.4 Execute asynchronous user request</para><para>2c. U1.5 Reconnect to session</para><para>2d. If the user disconnects from the client terminal or the client system crashes or is shutdown, the session remains open and all asynchronous commands that were not completed are kept running</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>see U1  </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para><para>U1.3 - Execute synchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U2.1 - Close session auto</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U2.1 - Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The session is closed by the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client system</para><para>- The user has an open session on the client system</para><para>either the inactivity timeout for the session has expired or the user disconnected from its shell session </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>- The session close event is stored in the system's log</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The system checks if the user has got no running commands (file transfers or tasks)</para><para>2. The system registers session closure</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. If the user has got some running commands, the system does not close the session and reset the inactivity timeout. After this delay is expired, back to step 1.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U3 - Session with automatic closure on disconnect</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session that will be closed by the system after the user disconnects from the client terminal</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- VISHNU is installed and running on the client system</para><para>- The client system can be connected to VISHNU</para><para>- The option SESSION_CLOSE_POLICY is CLOSE_ON_DISCONNECT (either user option is defined or this is the default policy) </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-  A session log has been created</para><para>- The session state is closed</para><para>- All user requests submitted during the session are complete</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. U1.1 Open session</para><para>2. System is ready to process user commands</para><para>3. The user disconnects from the terminal (either by typing an exit command, by closing the window, or by remote disconnection)</para><para>4. U2.1 Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.4 Execute synchronous user request</para><para>2b. U1.5 Execute asynchronous user request</para><para>3a. if the client system crashes or is shutdown, go to step 4</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>see U1 </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4 - Create new local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4 - Create new local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user creates a new local user configuration for a given user on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para><para>- The user has no local user configuration defined for the machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Local user config is registered</para><para>- An email is sent to the user with a message containing an SSH public key</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides local user configuration information for a given machine</para><para>2. The System checks the user login and the machine Id</para><para>3. The System generates an ssh private/public key pair</para><para>4. The System sends an email to the user containing the public key and asking the user to add this key to the authorized_keys on the machine</para><para>5. The user updates his/her authorized_keys file on the machine by adding the public key</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login</para><para>2b. Unknown machine</para><para>4a. Invalid email address</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.1 - Update local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.1 - Update local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user updates his/her local user configuration for a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para><para>- The user has a local user configuration defined for the machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- local user configuration is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the login and the identifier of the machine used by his/her local configuration and information to be updated</para><para>2. The System checks the the local user configuration (login defined for the given machine)</para><para>3. The System updates the local user configuration information</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login for the given machine</para><para>2b. Unknown machine for the given login</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.2 - Delete local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.2 - Delete local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user deletes his/her local user configuration on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The local user configuration exists for the given machine</para><para>- There is no job or file transfer running on the given machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The local user configuration for the given machine is deleted</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the identifier machine of the local user configuration and his/her login</para><para>2. The System checks the identifier of the machine for the given user</para><para>3. The System deletes the local user configuration identified</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login for the given machine</para><para>2b. Unknown machine for the given login</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.3 - Display local user configs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.3 - Display local user configs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays all of his/her local configurations</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all his/her local configurations </para><para>2. The System returns all local configurations</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request containing the identifier of a machine for listing a specific local user configurations on a specific machine</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. Unknown machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1 - Create new user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1 - Create new user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator creates a new user account in the System (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user does not have an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is created in an active state</para><para>- The account's password must be changed at the first connection</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the new user's last name, first name, email address and specifies whether the user has standard or admin rights</para><para>2. The System creates the new user account and initializes the password with a randomly-generated string (temporary password)</para><para>3. The System sends an email to the user containing the temporary password</para><para>4. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Login already used by another active user</para><para>3a. Invalid email address</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1.1 - Update user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1.1 - Update user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator updates the user account (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the user's information changes</para><para>2. The System updates user account (database)</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1.a Invalid login or login unknown</para><para>1.b The user information set are invalid</para><para>1.c The user information set are not consistent with the System</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1.2 - Delete user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1.2 - Delete user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator deletes a user account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para><para>- There is no job or file transfer running for the user</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is no longer in the System</para><para>- System does not contain any information related to the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides a user's login</para><para>2. The System deletes the user account along with all the information (configuration, history) related to it.</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid login (unknown or inactive)</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA2 - Reset user password</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA2 - Reset user password</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator resets a user password</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The password of the user is temporary and must be changed at the first connection by the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides a user's login</para><para>2. The System resets the user's password using a randomly-generated string</para><para>3. The System sends an email to the user containing the new temporary password</para><para>4. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid login (unknown or inactive)</para><para>3a. Invalid email address</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>If the user has one or several active sessions when Admin requests the password reset then the sessions are not affected. Only new sessions will require the new password for authentification.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA3 - Save configuration</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA3 - Save configuration</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator saves the configuration of the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para> </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The configuration is saved on a file</para><para>- A log information is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator requests to save the configuration in a file</para><para>2. The System creates a configuration file containing: the list  of users, the list of local users configs and the list of machines according to the local users configs</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. File creation problems</para><para>2b. VISHNU System crashed</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA4 - Restore configuration</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA4 - Restore configuration</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator restores a saved configuration</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- All users are disconnected from VISHNU</para><para>- The configuration file was saved using the &quot;save configuration&quot; feature.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The System is operational on all the machines that are both properly configured in the saved configuration and where the VISHNU processes are running.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator opens a session as the Root user</para><para>2. The administrator checks that there is no other user/admin connected to VISHNU</para><para>3. The administrator loads the configuration file</para><para>4. The System replaces the current configuration with the loaded configuration.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If the Root user already has an open session, the System cannot open a second session with the Root user</para><para>3a. If the configuration file cannot be loaded, the System provides an error message. The System configuration is reset to a basic configuration with only the Root user configured.</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>To avoid failure during this critical operation, the reasons to go for exception 3a should be reduced as much as possible. Therefore inconsistencies between the saved configuration and the real infrastructure will not be considered as blocking for this operation.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.1 - Display sessions</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.1 - Display sessions</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays all past and present sessions stored in the database.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all sessions (active and/or closed) that have an open timestamp within an interval provided by the user (start and finish date)</para><para>2. The System returns the list of sessions that match the search criteria and provides detailed information about these sessions (user id, open and close timestamp, client machine id)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.2 - Display users</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.2 - Display users</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the description of all users registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all users</para><para>2. The System returns all users with the following information for each user: id, firstname, lasname, login, status, email and password state.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the login of a specific user to list information about him/her </para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. The login is unknonwn</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.3 - Display local users configs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.3 - Display local users configs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the local user configurations for all users registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all local users configurations</para><para>2. The System returns all the local users configs for all users </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the identifier of a machine for listing all local users configurations on a specific machine</para><para>1b. The administrator sends a request containing the login of one user for listing all local users configurations of a specific user</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. unknonwn machine</para><para>1b1. unknonwn login</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.1 Add a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.1 Add a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator registers a new machine in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>A new machine is added in VISHNU System</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator adds a new machine on VISHNU by giving:</para><para>  - The machine name</para><para>  - The machine state (private or accessible to users)</para><para>  - The public IP adress</para><para>  - A structure describing the machine state</para><para>  - A structure describing the network</para><para>2. The machine is added on VISHNU and the System returns the machine ID.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The machine name already exists</para><para>1b. A machine with the same public adress already exists</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.2 Remove a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.2 Remove a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator unsubscribed a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The machine is registered in the System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The Machine is unsubscribed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator removes a machine from VISHNU by giving the machine ID</para><para>2. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. machine unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.3 Display machines</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.3 Display machines</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the machines registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all machines in the database</para><para>2. The System returns all machines in the database </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the identifier of a machine to list a specific machine</para><para>1b. The administrator sends a request containing the login of a user to list the machine used by him/her</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. The machine is unknown</para><para>1b1. The login is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA7 - Configure default option value</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA7 - Configure default option value</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator configures the default value of an option</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The default value of the option is configured</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request for modifying the value of an option to the System</para><para>2. The System checks the option name and registers the new default value for the option</para><para>3. System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. VISHNU infrastructure is unreachable or unavailable</para><para>2a. Invalid option name</para><para>2b. Invalid option value</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">CLOSE ON DISCONNECT</emphasis>: CLOSE ON DISCONNECT is a value which means that the only one way for closing the session
is when the user closes her/his terminal  </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">CLOSE ON TIMEOUT</emphasis>: CLOSE ON TIMEOUT is a value which means that the way for closing a session is after a session inactivity delay.
This value is given by the client or registered by default by the administrator</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Client System</emphasis>: Client System or Client Host is a program which uses VISHNU API commands and that can be connected
to VISHNU Infrastructure</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Configuration</emphasis>: The configuration contains all information about the users and machines registered in the database. It does not contain chronological information about the users or the infrastructure (logs, metrics values)</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Local user config</emphasis>: The local user config is the description of the given user on a specific machine described
in the database</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Manual closure</emphasis>: The Manual closure means that the user uses the API command for closing the session</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Option</emphasis>: The option is a parameter of the user account that is not mandatory. Default value 
for each option is defined by the administrator. This features can be used by all VISHNU modules (not only UMS).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Password state</emphasis>: Records the current state of the password of a user: either 'temporary' if the password must be changed next time the user connects to the System, or 'valid' if the password is in a normal state.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Root user</emphasis>: Special user that is pre-configured in the VISHNU system and that has administrator privileges. This user cannot be deleted from the system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SESSION_CLOSE_POLICY</emphasis>: SESSION_CLOSE_POLICY is an option which represents the way to close the session 
 (on timeout or on disconnect)</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session</emphasis>: A session is the context in which VISHNU commands are executed (ex: job submission, file transfers). It is created following authentifcation of a user and lasts until it is closed either manually or automatically.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session Key</emphasis>: The session key is a crypted string generated by the System for a session. It is registered in an environment variable
in order to avoid systematic authentification</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session identifier</emphasis>: The session identifier (or session id) is an identifier of a session easy to manipulate by a user compare to the session key</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">The inactivity delay</emphasis>: The inactivity delay is the delay in which no api commands are lauched within a session
</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">User account </emphasis>: The user account is the description in the database of a VISHNU user</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="TMS/specs/TMS.asta#UCDIAG+UCDESC+DICT(TMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for Tasks Management System (TMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC TMS Overview</title>
        <figure>
          <title>UC TMS Overview</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC TMS Overview.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>T1 - Asynchronous command on a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User starts an asynchronous command on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The command is in active state until completed</para><para>- The system log has been updated and contains the request parameters</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User sends the request</para><para>2. The System checks that the session key is valid</para><para>3. The System checks that the machine id is valid and machine is available</para><para>4. If command parameters contain a file the System verifies that the file is available and readable</para><para>5. The System processes the request</para><para>6. The System returns information to the user</para><para>6. The System records request information (time, user, machine, request parameters) in the system log</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>5a. T1.1</para><para>5b. T1.2</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The TMS server is unavailable</para><para>   - The system returns an error message that informs the user.</para><para>2a. The session key is invalid</para><para>   - The system returns an error message that informs the user.</para><para>3a. The name of the given machine is unknown</para><para>    -The system returns an error message that informs the user.</para><para>4a. The path to a file parameter is invalid</para><para>   - The system returns an error message that informs user. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>T1.1 - Submit a job </para><para>T1.2 - Get job outputs (asynchronous)</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T1.1 - Submit a job </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1.1 - Submit a job </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User submits a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is submitted on the specified machine</para><para>- The job state and id are recorded on the system's log</para><para>- The job id is sent to the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The System checks that request parameters contain:</para><para>  - job script path</para><para>  - job options</para><para>2. The TMS server on the given machine is contacted</para><para>3. The job is submitted by the TMS server to the batch scheduler</para><para>4. The id of the submitted job is returned to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid options or script</para><para>4a. The batch scheduler server is unavailable</para><para>4b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T1.2 - Get job outputs (asynchronous)</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1.2 - Get job outputs (asynchronous)</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Output files of a user's jobs on a given machine are downloaded when any job is completed</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All the jobs submitted by the User on the machine are completed</para><para>- All the jobs submitted by the User on the machine are removed from the Batch Scheduler's internal database.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the machine id</para><para>2. The System registers the request</para><para>3. The System checks the running jobs submitted by the User on the machine</para><para>4. The System sends the job outputs for all completed jobs to the client host</para><para>5. If the number of jobs submitted by the User on the machine with a waiting, queued or running status is positive, the System waits during a period defined by the administrator. If not, go to step 7</para><para>6. Go back to step 3</para><para>7. The User request is completed</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a The TMS server is unavailable</para><para>2b The underlying batch scheduler is unavailable</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2 - Synchronous command on a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User executes a synchronous command on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Request is in completed state</para><para>- The system log has been updated and contains the request parameters</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request with parameters including session key and machine id</para><para>2. The System checks that the session key is valid</para><para>3. The System checks that the machine id is valid and machine is available</para><para>4. If command parameters contain a file the System verifies that the file is available and readable</para><para>5. The System processes the request</para><para>6. The System returns information containing the results of the request</para><para>7. The System records request information (time, user, machine, request parameters) in the system log</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>5a. T2.1</para><para>5b. T2.2</para><para>5c. T2.3</para><para>5d. T2.4</para><para>5e. T2.5</para><para>5f. TA1</para><para>5g. TA2</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The TMS server is unavailable</para><para>   - The system returns an error message that informs the user.</para><para>2a. The session key is not valid</para><para>   - The system returns an error message that informs the user.</para><para>3a. The name of the given machine is unknown</para><para>    -The system returns an error message that informs the user.</para><para>4a. The path to a file parameter is invalid</para><para>   - The system returns an error message that informs user. </para><para>   - The user revises the path</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>T2.1 - Get job information</para><para>T2.2 - Cancel a job</para><para>T2.3 - List job queues</para><para>T2.4 - List jobs</para><para>T2.5 - Get jobs progression</para><para>T2.6 - Get job outputs (synchronous)</para><para>TA1 - Set machine refresh period</para><para>TA2 - Set machine environment</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.1 - Get job information</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.1 - Get job information</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User gets information about a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The Systems checks the job id</para><para> 2. The TMS server on the given machine is contacted</para><para> 3. The TMS server asks job information to the batch scheduler server</para><para> 4. The User receives job information</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The job id is invalid</para><para>3a. The batch scheduler server is unavailable</para><para>3b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.2 - Cancel a job</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.2 - Cancel a job</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user cancels a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is canceled on the specified machine</para><para>- The job state and id are removed to the system's log</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The System checks the job id</para><para>2. If the User has no admin privilege, the System checks that the User is the submitter of the job</para><para>3. The System cancels the job</para><para>4. The System returns a confirmation to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The job id is invalid</para><para>  - The System returns an error message</para><para>2a. The User is not the submitter of the job</para><para>  - The System returns an error message</para><para>3a. The batch scheduler server is unavailable</para><para>  - The System returns an error message</para><para>3b. The batch scheduler server rejects the request</para><para>  - The System returns an error message</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.3 - List job queues</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.3 - List job queues</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User lists all queues or classes of a specific batch scheduler </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The User sends the request with parameters that include the machine id</para><para> 2. The System obtains queues or classes information from the batch scheduler server running on the machine identified by the machine id</para><para> 3. The System returns the list of all queues to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The batch scheduler server is unavailable</para><para>2b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.4 - List jobs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.4 - List jobs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User lists all jobs submitted on a given machine matching some search criteria</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The User sends the request containing the machine id and the following optional search criteria: job id, number of CPUs required for the job, date of submission (from/to), job submitter, status, priority, queue, outputPath and errorPath.</para><para> 2. The System obtains jobs information from the batch scheduler server (depends on the underlying batch scheduler software)</para><para> 3. The System returns jobs information that match the search criteria to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The batch scheduler server is unavailable</para><para>2b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.5 - Get jobs progression</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.5 - Get jobs progression</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User gets jobs progression (execution percent) status on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the machine id</para><para>2. The System computes the job progression for all jobs submitted by the User running on the machine (job progression = 100 * (current_time - run_time) / job_walltime )</para><para>3. The System sends the results to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The User provides a job id in the request (optional parameter)</para><para>2a. The System computes the job progression for the job corresponding to the job id</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2b. The TMS server is unavailable</para><para>    - The system returns an error message that informs the user.</para><para>2c. The provided job id is unknown on the machine</para><para>   - The system returns an error message that informs the user.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.6 - Get job outputs (synchronous)</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.6 - Get job outputs (synchronous)</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Output files of a given job are downloaded on the client host</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is removed from the Batch Scheduler's internal database.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the job id</para><para>2. The System checks the job status</para><para>3. The System downloads the job results if the job is completed</para><para>4. The System returns the path for each downloaded file</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The TMS server is unavailable</para><para>2b. The batch scheduler is unavailable</para><para>2c. The job status is not 'completed'</para><para>     - The System returns a message that informs the user</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA1 - Set machine refresh period</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA1 - Set machine refresh period</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin sets the refresh period of output and error file content</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The refresh period value is stored by the system</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. System saves the refresh period for the given machine.</para><para>2. System applies the refresh period to all current jobs and future requests</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Refresh period value is too short (minimum value : see technical requirements)</para><para>  - System returns an error message</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA2 - Set machine environment</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA2 - Set machine environment</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin sets an environment variable on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Environment variable is set on the machine</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the machine id and a string containing the environment variable assignments (semi-column separated list of assignments &lt;var_name>=&lt;var_value>)</para><para>2. The System saves the environment variable for the given machine.</para><para>3. The System applies the environment variable to all current jobs and future requests</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA3 - Launch TMS Server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA3 - Launch TMS Server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator launches the VISHNU TMS server on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The Vishnu server software (TMS Module and dependencies) is installed on the machine</para><para>- The machine is configured in the Vishnu system database</para><para>- The batch scheduler processes are up and running on the same machine</para><para>- The network connection between the machine and the Vishnu database server is up and running</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The TMS server is up and running</para><para>- A server log has been created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The Admin connects to the machine as vishnu user</para><para>2. The Admin updates the Vishnu configuration if necessary (database server hostname and credentials, SysferaDS configuration, Batch scheduler configuration)</para><para>3. The Admin launches the Vishnu TMS Server executable</para><para>4. The System checks the connections to its peers within the Vishnu platform</para><para>5. The System retrieves the list of active jobs (not completed jobs) that were launched on the same machine</para><para>6. The System checks that all the active jobs (from previous step) are still running on the batch scheduler, and eventually updates the job status (for ex. from waiting to running, or from running to finished)</para><para>7. The System returns a status message to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>4a. A connection to a Vishnu peer is down. System returns an error message and stops</para><para>6a. The batch scheduler does not recognize some job ids. In this case the System updates the job status to completed.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA4 - Stop TMS Server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA4 - Stop TMS Server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator stops the VISHNU TMS server on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The TMS Server is up and running on the given machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The TMS Server is down</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The Admin sends a request to stop the TMS Server and provides the machine id</para><para>2. The System updates the status of all active user requests (non-completed jobs)</para><para>3. The System stops all internal processes on the machine</para><para>4. The System returns an information message to the Admin</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Batch Scheduler</emphasis>: A batch scheduler is  a distributed resource manager that enables to allocate at best  the resources to the jobs on a machine according to user needs (the needs are spiciefed by the user by batch directives (batch options) in file or command line).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job</emphasis>: A job is a sequence of instructions (included batch scheduler directives) written to launch and to perform by a specified batch scheduler.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job id</emphasis>: A job id allows to identifie the job in the batch scheduler system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">JobPath</emphasis>: A jobPath is the path to the file (script) containing the instructions (batch directives or job characteristiques, job execution command) of the job.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Queue ou Classe</emphasis>:  A queue or class allows to associate the resource limits (CPU wallclock time, CPU memory) and execution priorities of the jobs.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">TMS</emphasis>: Task Management System</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="IMS/specs/IMS.asta#UCDIAG+UCDESC+DICT(IMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for Information Management System (IMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC IMS Global functionalities</title>
        <para>Global use case presenting all the IMS use case</para>
        <figure>
          <title>UC IMS Global functionalities</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Global functionalities.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Consult</title>
        <para>User consult use case</para>
        <figure>
          <title>UC IMS Consult</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Consult.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Replay</title>
        <para>A user can replay its old commands of a session</para>
        <figure>
          <title>UC IMS Replay</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Replay.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Platform management</title>
        <para>All the use case of the administrator concerning the platform management</para>
        <figure>
          <title>UC IMS Platform management</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Platform management.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Stop_Restart</title>
        <para>The administrator use cases concerning the stop and restart of the platform</para>
        <figure>
          <title>UC IMS Stop_Restart</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Stop_Restart.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>I1. Get the update frequency</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I1. Get the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets how often the IMS database tables are updated</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls the function to know how often the IMS database tables are automatically updated</para><para>2) The System returns the value in second</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2 -> There is a problem with the database, the system returns a DATABASE_ERROR</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I2 Get metric data</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I2 Get metric data</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets data concerning the metrics on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to get the metrics data. on a machine identified by a machine id, for a metric type, from start time up to end time. The metrics are within {number of cpu, percentage of cpu used, total diskSpace, free diskSpace, total RAM, free RAM, number of processes running}</para><para>2) The System returns the results by groups (metric,value, time).</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para><para>2 -> There is a problem with the database, the system returns a DATABASE_ERROR</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I3. Export and replay commands</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I3. Export and replay commands</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user exports and replays a sequence of commands made during a session.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>All the System commands submitted during a session have been re-executed keeping the same order they had when they were originally launched.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to export the history in python format of a session identified by an id</para><para>2) The System provides a python script containing all the commands of the session with the same parameters as provided initially by the user (including file paths, numbers, strings, options)</para><para>3) The user executes the python script in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a) The user calls to export the history in shell format of a session identified by an id.</para><para>2a) The System provides a shell script containing all the commands of the session with the same parameters as provided initially by the user (including file paths, numbers, strings, options)</para><para>3a) The user executes the shell script in a shell</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The session id is invalid, an INVALID_PARAMETER exception is raised.</para><para>3 -> A command in the execution fails, the error of the command is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I4. Get data on the infrastructure</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I4. Get data on the infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets System information about the machines</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to get a current data about a machine identified by an ID. The data is within {use of cpu, number of cpu, total diskSpace, free diskSpace, total RAM, free RAM}.</para><para>2) The System returns the value of the data. In the use of cpu case, the value is in percentage.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>The machine id is invalid, an INVALID_PARAMETER exception is raised</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA1. Get the running processes</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA1. Get the running processes</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin gets the list of the running processes on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls to get the list of the processes on a machine referenced by a machine id</para><para>2) The System returns a list of processes</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> machineId is invalid, an INVALID_PARAMETER is return.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA10. Update machine description</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA10. Update machine description</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Updates the data concerning a machine (e.g., if the machine has some added memory diskSpace, some added memory, a new description)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The description of the machine in the database is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin calls to update the data concerning a machine identified by an id giving a new diskSpace size, a new memory size and a new machine description.</para><para>2) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para><para>2 -> There is an error with the database, a DATABASE_ERROR error is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA2. Define a system load threshold</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA2. Define a system load threshold</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator defines a system load threshold for a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The system load threshold is added to the System database</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1a) The administrator calls to define the limit size of the diskSpace to use with a machine id, a threshold value and an admin id</para><para>2a) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1b) The administrator calls to define the limit of RAM available to he user with a machine id, a threshold value and an admin id</para><para>2b) The System updates the database</para><para>------------------------</para><para>1c) The administrator calls to define the number of processes threshold on a machine with a machine id, a treshold value and an admin id</para><para>2c) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1* -> The admin ID is invalid, the database is not updated and an INVALID_PARAMETER error is returned</para><para>2* -> The modification of the database fails, a DATABASE_ERROR is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA2.1 Get a system load threshold</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA2.1 Get a system load threshold</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user wants to get the thresholds on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls to get the defined limit on a machine identified by an id. These thresholds are within {free diskSpace,  free RAM, number of processes running}</para><para>2) The System returns the value.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, the user gets an INVALID_PARAMETER error returned</para><para>2 -> There is a problem with the database request, a DATABASE_ERROR is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA3. Define the identifiers</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA3. Define the identifiers</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator defines the format of the automatic identifiers for the System objects.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>A new format will be used to create the new identifiers</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The administrator has a list of variables to define the identifiers shape. He has a method by kind of object (an object is either a user or a machine or a task or a file transfer).</para><para>Available variables are :</para><para>  YEAR: the last two digits, (e.g. 10 for 2010)</para><para>  MONTH: Numerical value of the month (from 1 to 12)</para><para>  DA: Day number, from 1 to 31</para><para>  TYPE: The object kind</para><para>  SITE: The place for machine/users</para><para>  NAME: Username or machine name</para><para>  CPT: A counter automatically increased (each kind of object has its counter).</para><para>2) He calls the function to redefine the format with some of the previous parameters in a string. For example, &quot;$TYPE$DAY$MONTH$YEAR$CPT&quot;</para><para>3) The System database is updated, the System does not check if the given format creates unique identifiers. If the same identifier is created, it will corrupt the database (the key will not be unique)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2 -> An invalid variable is given, an INVALID_PARAMETER is returned and the old format is still used</para><para>3 -> The update fails, a DATABASE_ERROR is returned</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA4. Hard load shedding </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA4. Hard load shedding </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Abruptly stops the processes running on a machine (the waiting actions are cancelled and the running ones are stopped). The processes cannot be automatically restarted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Processes are running on the System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The whole machine is flushed and no job is running on it</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin launches the hard load shedding function on a machine identified by an id.</para><para>2) The System flushes all the waiting action.</para><para>3) The System stops all the running processes on this machine. These processes cannot be restarted.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The id of the machine is invalid, an INVALID_PARAMETER is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA5. Soft load shedding</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA5. Soft load shedding</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin purges all the waiting actions and stops the running ones. The stopped actions can be restarted later.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Processes are running on the VISHNU system</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>No jobs are waiting to run or are running</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls the soft load shedding function on the machine identified by an id.</para><para>2) The System flushes the waiting jobs and stops the running ones. They are stored and can be restarted later </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA6. Set the update frequency</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA6. Set the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator sets the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The System updates the IMS database at the new frequency</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The administrator calls to set the update frequency in seconds</para><para>2) The System updates its database update frequency value</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>The database is is not reachable. A DATABASE_ERROR is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA7. Notification of limit overflow</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA7. Notification of limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin is informed of a limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>A machine on the System has a limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The System gets the email adress of the admin to contact</para><para>2) The System sends a mail to the admin concerning the overflow. The mail contains the name of the machine and the concerned threshold.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The system fails getting the admin e-mail, a DATABASE_ERROR error is returned</para><para>2 -> Sending the mail fails, a MAIL_ERROR error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA8. Restart the System</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA8. Restart the System</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Restart all the servers, agents, and daemons of the System. The running actions are restarted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The System platform needs to be restarted</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The System is running with the same server, agents and daemons that were running before the crash. The interrupted actions are restarted from the beginning.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin detects a problem</para><para>2) An admin calls to restart the System</para><para>3) The System saves the current actions</para><para>4) The System restarts components and restarts the stopped actions from the beginning</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>4-> Fail to relaunch a component (server, daemon, agent), an UNREACHABLE_COMPONENT error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA9. Automatic restart</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA9. Automatic restart</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>A component is restarted</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>A component of the platform is down</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The component is up and running again</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin detects that a component has stopped for unknown reasons (a component = server, daemon, agent)</para><para>2) The admin calls the System to relaunch the component with its name</para><para>3) The System relauches the component</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>3-> Fail to restart the component, an UNREACHABLE_COMPONENT error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3 Execute synchronous request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3 Execute synchronous request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user subsmits a synchronous request to the System. c.f. the UMS use case description (U1.3)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Actions</emphasis>: A generic naming to design both jobs and file transfers.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Agent</emphasis>: A component of the VISHNU hierarchy.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">CPU</emphasis>: Central Processing Unit.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Daemon</emphasis>: Daemon running on the machines.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">DiskSpace</emphasis>: File system memory (not volatile).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">IMS</emphasis>: Information Management System.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Infrastructure</emphasis>: Contains all the machines directly under the System supervision.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Live measure</emphasis>: Measure regularly updated.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Memory</emphasis>: RAM (Random Access Memory, volatile).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Objects</emphasis>: An object is an abstraction of what can be manipulated by the System (user, machine, task, file transfer).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Process</emphasis>: Process of the system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SeD</emphasis>: A component of the VISHNU hierarchy executing jobs for the clients.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Task</emphasis>: Job submited via the TMS module.</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="FMS/specs/FMS.asta#UCDIAG+UCDESC+DICT(FMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for File Management System (FMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>FMS simple command use cases</title>
        <figure>
          <title>FMS simple command use cases</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/FMS simple command use cases.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>FMS transfer command use cases</title>
        <figure>
          <title>FMS transfer command use cases</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/FMS transfer command use cases.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>F1- Execute simple command on a remote host</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to execute a command on a remote host. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The command is performed succesfully  and the potential results are sent back to User.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User enters the command by specifying the parameters, the session id  and the involved host id. </para><para>2. The System checks that the session id is valid.</para><para>3. The System checks that the host id is valid and  the machine is available.  </para><para>4. The System performs the command and send back the results to User .</para><para>5. The System records request information (time, User, machine, request parameters).</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The given parameters are invalid for this command.</para><para>2a. The specified session id is invalid. </para><para>3a.  The specified host is unknown. </para><para>3b. The specified host is unavailable.</para><para>4a. The command fails and an error message  is printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F1.2- Change group owner of files</para><para>F1.1- Change access rights of files</para><para>F1.3- Create new directories</para><para>F1.5-  Delete directories</para><para>F1.6- Delete files</para><para>F1.8- Display contents of files</para><para>F1.9- Display Head of files</para><para>F1.7- Display contents of directories</para><para>F1.10- Display tail of files</para><para>F2.1- Execute a synchronous copy of files </para><para>F2.2- Execute an asynchronous copy of files </para><para>F1.11- Get information about remote files</para><para>F1.4- Create new files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.1- Change access rights of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.1- Change access rights of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to change access rights of a given remote file (or more remote files).  It is the equivalent of the &quot;chmod&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new access permissions of the specified files are set.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the change access rights command with the files, the new access rights to set, the involved hosts and the session key.</para><para>2. The System sets the new access rights to the files. </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is also printed out on the standard output of the client System.</para><para>1c. If User does not have execute permission in a parent    directory or if User is not the file owner or Admin,  a permission denied message is displayed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.10- Display tail of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.10- Display tail of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This command allows User to print the last few  lines of each named  remote file. It is the equivalent of the &quot;tail&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The last lines of the specified files are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the files to display, the involved hosts and the session key.</para><para>2. The System displays the last lines of the specified files on the  standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed on the standard output of the client System.</para><para>1.c  If User does not  have execute permission in a parent directory or read permission on a file, a permission denied message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.11- Get information about remote files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.11- Get information about remote files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to get information about each named  remote file. It is equivalent to  &quot;stat&quot; bash command.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>Some information  (like the size, the owner user id, the owner group  id, the type of file... ) about given files are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the get information  command with the files,  the involved hosts and the session key.</para><para>2. The System prints out the information about the specified files on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed out on the standard output of the client System.</para><para>1.c  If User does not  have execute permission in a parent directory, a permission denied message is also printed out on the standard output of the client.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.2- Change group owner of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.2- Change group owner of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to change the group owner of each named remote file.  It is the equivalent of the &quot;chgrp&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new group owner of the specified files is set.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the change group owner command with the files , the new group to set, the involved hosts and the session key.</para><para>2. The  System sets the new group owner to the file. </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed out on the standard output of the client System.</para><para>1c. If User does not have execute permission in a parent    directory or if User is not the file owner or Admin, a permission denied message is displayed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.3- Create new directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.3- Create new directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to  create new directories in each named host. It is the equivalent of the &quot;mkdir&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new directories are created in the specified hosts.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the create directory command with the paths of directories to create, the involved hosts and the session key.</para><para>2. The System creates  new directories with the specified paths.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If User does not have read or write permission in a parent directory, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.4- Create new files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.4- Create new files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to  create  new files in each named host. It is the equivalent of the &quot;touch&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new files are created in the specified hosts.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the create file command with the paths of files to create, the involved hosts and the session key.</para><para>2. The System creates  new files with the specified paths.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If User does not  have execute or write permission in a parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.5-  Delete directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.5-  Delete directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to remove each given directory (and its content) located on a remote host. It is the equivalent of the &quot;rm -r&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The specified directories are removed from the given hosts.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the delete directory command with the paths of directories to delete, the involved hosts and the session key.</para><para>2. The System deletes the specified directories from the hosts.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed on the standard output of the client System.</para><para>1.c If User does not  have execute or  write permission in a parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.6- Delete files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.6- Delete files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to remove each given remote file. It is the equivalent of the &quot;rm&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>All specified files are removed from the hosts.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the delete file command with the paths of files to delete, the involved hosts and the session key.</para><para>2. The System deletes the specified files from the hosts.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is  printed out on the standard output of the client System.</para><para>1.c If User does not  have execute or write permission in the parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.7- Display contents of directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.7- Display contents of directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list the files contained in each  given directory located on a remote host. It is the equivalent of the &quot;ls&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The  contents of the specified directories are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the paths of directories to list, the involved hosts and the session key.</para><para>2. The System displays the contents of the specified directories on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. If no directory is given , the content of current directory is displayed on the standard output of the client System.</para><para>1b.If a file is given, some information about the file (like the access permissions, the owner, the size, etc...) is printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If a directory is unknown, a message is printed out on the standard output of the client System.</para><para>1b. If User does not  have execute or read permission in a parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.8- Display contents of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.8- Display contents of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to print the content of a given file</para><para>located on a remote host.  It is the equivalent of the &quot;cat&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The named file is printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the file to display, the involved hosts and the session key.</para><para>2. The  System prints the specified file on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is printed on the standard output of the client System.</para><para>1c. If User does not have execute  permission in the parent directory or read permission on a file, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.9- Display Head of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.9- Display Head of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This command allows User to print the first few  lines of each given remote file.  It is the equivalent of the &quot;head&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The first lines of the specified files are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the paths of the files to display, the involved hosts and the session key.</para><para>2. The System displays the first lines of the specified files on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed out on the standard output of the client System.</para><para>1c. If User does not  have execute permission write in a parent directory or read permission on a file, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.1- Execute a synchronous copy of files </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.1- Execute a synchronous copy of files </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to copy a file  between two hosts.</para><para> It is the equivalent of the &quot;cp&quot; bash command.  The four cases of transfer are covered by this use case :</para><para>- inside the same host which can be local or remote,</para><para>- from local host to remote host, </para><para>- from remote host to local host,</para><para>- from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is fully  accomplished and a copy of the source file is now on the destination host.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the tranfer file  command with the path of the source file to copy (including the host), the path of destination (including the host) and the session key.</para><para>2.The System copies the given source file to the specified destination.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file or the host is unknown , a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System. </para><para>1e. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on a source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>1f. If the file transfer  fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para><para>F2.1.1- Execute a synchronous move of files</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.1.1- Execute a synchronous move of files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.1.1- Execute a synchronous move of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.1.1- Execute a synchronous move of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to move a file from a host to another host. Furthermore, the source file is removed from the source host. </para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- and from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is fully accomplished.</para><para>- A copy of the file source is now on the destination host,</para><para>- and the source file is removed from the source host.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the tranfer file  command with the path of the source file to copy(including the host), the path of destination (including the host) and the session key.</para><para>2. The System makes a copy of  the given source file to the specified destination and remove the source file from the source host .</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file or the host is unknown , a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System. </para><para>1e. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on a source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>1f. If the file transfer fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.1- Execute a synchronous copy of files </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.1- Execute a synchronous copy of files </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.2- Execute an asynchronous copy of files </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.2- Execute an asynchronous copy of files </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to copy a file  between two hosts  and submit another command without waiting the end of transfer file.</para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- from remote host to another remote host. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer may be on-going or completed.</para><para>- User gets a transfer id in order to check the file tranfert status.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the file tranfer command with the path of the source file to copy (including the host), the path of destination (including the host) and the session key.</para><para>2. The System starts the transfer of the given source file to the specified destination and sends back to User a transfer id.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file or the host is unknown , a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System. </para><para>1e. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on a source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>1f. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.2.1- Execute an asynchronous move of files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.2.1- Execute an asynchronous move of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.2.1- Execute an asynchronous move of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to move a file from a host to another host and submit another command without waiting the end of file transfer. Furthermore, the source file is removed from the source host. </para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- and from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-The file transfer may be on-going or completed.</para><para>-User gets an transfer id in order to check the file tranfert status.</para><para>-At the end of the transfer, the source file is removed from the source host.</para><para>The System log has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the file tranfer command with the path of the source file to copy (including the host), the path of destination (including the host) and the session key.</para><para>2. The System starts the transfer of the given source file to the specified destination and sends back to User a transfer id.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file or the host is unknown , a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System. </para><para>1e. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on a source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>1f. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.2- Execute an asynchronous copy of files </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.3- Stop a file tranfer</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.3- Stop a file tranfer</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to stop an asynchronous file transfer he submitted by specifying its id.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer whose id is given  is stopped.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a stop  file transfer command by specifying the session key and  by specifying a transfer id .</para><para>2. The System stops the transfer file whose id is given.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key  is invalid, a message is printed out on the standard output of the client System.</para><para>1.c If the tranfer id is invalid or if User did not submit a named file tranfer,a message is printed out on the standard output of the client System.</para><para>1d. If the command fails, a message is printed on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.3.2- Stop all users file transfer</para><para>F2.3.1- Stop all file tranfer</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.3.1- Stop all file tranfer</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.3.1- Stop all file tranfer</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to stop  all file transfer he submitted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-  All asynchronous file transfer User submitted is stopped.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a stop  file transfer command by specifying the session key .</para><para>2. The System stops all asynchronous file transfer User submitted  .</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key  is invalid or if User did not submit one of named file tranfers, a message is printed out on the standard output of the client System.</para><para>1c. If the command fails, a message is printed out on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.3- Stop a file tranfer</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.3.2- Stop all users file transfer</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.3.2- Stop all users file transfer</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to stop all  current asynchronous file transfer of a given session.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Admin has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All file transfer submitted is stopped.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits  the stop file transfer command by specifying  the session key.</para><para>2. The System stops all  transfer file of the given session.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key  is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the command fails, a message is printed on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.3- Stop a file tranfer</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.4.- Get a file transfer status</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.4.- Get a file transfer status</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to get an asynchronous file transfer status he submitted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The status of the specified file transfer is displayed on the standard output of client System. </para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a get file transfer command by specifying a session key and the transfer id.</para><para>2. The System displays  the status of the specified file transfer .</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the specified transfer id is invalid or User did not submit a named file tranfer, a message is printed out on the standard output of the client System.</para><para>1d. If the command fails, a message is printed out on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.4.2- List all users file transfer status</para><para>F2.4.1- List files transfer status</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.4.1- List files transfer status</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.4.1- List files transfer status</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list all  file transfer status he submitted (including current and completed file transfer) .</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The status of all  file transfer User submitted are listed on the standard output of client System. </para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a list file transfer command by specifying a session key.</para><para>2. The System displays  the status of all file transfer (including current and completed file transfer) User submitted.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed out on the standard output of the client System.</para><para>1c. If no transfer was submitted or if the command fails, a message is printed out on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.4.- Get a file transfer status</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.4.2- List all users file transfer status</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.4.2- List all users file transfer status</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.4.2- List all users file transfer status</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to list all  file transfer status of a given session (including current and completed file transfer) .</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Admin has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-A ll  file transfer status of a given session are listed on the standard output of client System. </para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits a list file transfer status command by specifying a session key.</para><para>2. The System displays all  file transfer status (including current and completed file transfer) of a named session.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed out on the standard output of the client System.</para><para>1c. If no transfer was submitted or if the command fails, a message is printed out on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.4.1- List files transfer status</para><para>F2.4.- Get a file transfer status</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.5- Display the file transfer history list</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.5- Display the file transfer history list</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list all  file transfer  he submitted .</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All  file transfer  User submitted are listed on the standard output of client System. </para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a dispay file transfer history command by  specifying a session key.</para><para>2. The System displays all  file transfer  User submitted on the standard output of client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If no transfer was submitted or if the command fails, a message is printed on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.5.1-Display all file transfer history list</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.5.1-Display all file transfer history list</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.5.1-Display all file transfer history list</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to list all  file transfer of a given session .</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All  file transfer of a named session are listed on the standard output of client System.</para><para>- The log System has been updated and contains request parameters. </para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits a dispay file transfer history command by  specifying a session key.</para><para>2. The System displays all  file transfer of the named session on the standard output of client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given  session key is invalid, a message is printed out on the standard output of the client System.</para><para>1c. If no transfer was submitted or if the command fails, a message is printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.5- Display the file transfer history list</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para>FMS: File Management System</para>
          </listitem>
          <listitem>
            <para>Host:</para>
          </listitem>
          <listitem>
            <para>Path:</para>
          </listitem>
          <listitem>
            <para>Topic1</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
</book>